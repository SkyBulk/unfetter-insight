(dp0
S'New Service'
p1
S'  T1050   Tactic|  Persistence, Privilege Escalation    Permissions Required|  Administrator, SYSTEM   Effective Permissions|  SYSTEM   Data Sources|  Windows Registry, Process monitoring, Process command-line parameters   CAPEC ID|  CAPEC-550      When operating systems boot up, they can start programs or applications called services that perform background system functions.1 A service\'s configuration information, including the file path to the service\'s executable, is stored in the Windows Registry.  Adversaries may install a new service that can be configured to execute at startup by using utilities to interact with services or by directly modifying the Registry. The service name may be disguised by using a name from a related operating system or benign software with Masquerading. Services may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges from administrator to SYSTEM. Adversaries may also directly start services through Service Execution.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Carbanak malware installs itself as a service to provide persistence and SYSTEM privileges.2   * Several Lazarus Group malware families install themselves as new services on victims.3   * TinyZBot can install as a Windows service for persistence.4   * PlugX can add itself as a service to establish persistence.5   * Duqu creates a new service that loads a malicious driver when the system starts. When Duqu is active, the operating system believes that the driver is legitimate, as it has been signed with a valid private key.6   * JHUHUGIT has registered itself as a service to establish persistence.7   * One persistence mechanism used by CozyCar is to register itself as a Windows service.8   * CosmicDuke uses Windows services typically named "javamtsup" for persistence.9   * hcdLoader installs itself as a service for persistence.1011   * Some Sakula samples install themselves as services for persistence by calling WinExec with the net start argument.12   * Elise configures itself as a service.13   * Emissary is capable of configuring itself as a service.14   * ZLib creates Registry keys to allow itself to run as various services.15   * One variant of BlackEnergy creates a new service using either a hard-coded or randomly generated name.16   * Nidiran can create a new service named msamger (Microsoft Security Accounts Manager).17   * Shamoon creates a new service named ntssrv to execute the payload.18   * Winnti sets its DLL file as a new service in the Registry to establish persistence.19   * StreamEx establishes persistence by installing a new service pointing to its DLL and setting the service to auto-start.20   * MoonWind installs itself as a new service with automatic startup to establish persistence. The service checks every 60 seconds to determine if the malware is running; if not, it will spawn a new instance.21  ## Mitigation  Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create new services.  Identify and block unnecessary system utilities or potentially malicious software that may be used to create services by using whitelisting22 tools, like AppLocker,2324 or Software Restriction Policies25 where appropriate.26  ## Detection  Monitor service creation through changes in the Registry and common utilities using command-line invocation. New, benign services may be created during installation of new software. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.  Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence.27 Look for changes to services that do not correlate with known software, patch cycles, etc. Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.  Monitor processes and command-line arguments for actions that could create services. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Services may also be created through Windows system management tools such as Windows Management Instrumentation and PowerShell, so additional logging may need to be configured to gather the appropriate data.  '
p2
sS'Software Packing'
p3
S'  T1045   Tactic|  Defense Evasion    Data Sources|  Binary file metadata   Defense Bypassed|  Anti-virus, heuristic detection, Signature-based detection   CAPEC ID|  CAPEC-570      Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory.  Utilities used to perform software packing are called packers. Example packers are MPRESS and UPX. A more comprehensive list of known packers is available,1 but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Night Dragon is known to use software packing in its tools.2   * APT29 used UPX to pack files.3   * A Patchwork payload was packed with UPX.4   * Group5 packed an executable by base64 encoding the PE file and breaking it up into numerous lines.5   * Uroburos uses a custom packer.6   * SeaDuke has been packed with the UPX packer.7   * Trojan.Karagany samples sometimes use common binary packers such as UPX and Aspack on top of a custom Delphi binary packer.8   * H1N1 uses a custom packing algorithm.9  ## Mitigation  Ensure updated virus definitions. Create custom signatures for observed malware. Employ heuristic-based malware detection.  Identify and prevent execution of potentially malicious software that may have been packed by using whitelisting10 tools like AppLocker1112 or Software Restriction Policies13 where appropriate.14  ## Detection  Use file scanning to look for known software packers or artifacts of packing techniques. Packing is not a definitive indicator of malicious activity, because legitimate software may use packing techniques to reduce binary size or to protect proprietary code.  '
p4
sS'Peripheral Device Discovery'
p5
S'  T1120   Tactic|  Discovery    Permissions Required|  User, Administrator, SYSTEM      Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system. The information may be used to enhance their awareness of the system and network environment or may be used for further actions.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * APT28 uses a module to receive a notification every time a USB mass storage device is inserted into a victim.1   * Equation contains functionality to search for specific information about the attached hard drive that could be used to identify and overwrite the firmware.2   * Gamaredon Group tools contained an application to check performance of USB flash drives.3   * ADVSTORESHELL can list connected devices.4   * BlackEnergy can gather very specific information about attached USB devices, to include device instance ID and drive geometry.5   * T9000 searches through connected drives for removable storage devices.6   * A module in Prikormka collects information on available printers and disk drives.7   * BADNEWS checks for new hard drives on the victim, such as USB devices, by listening for the WM_DEVICECHANGE window message.8   * USBStealer monitors victims for insertion of removable drives. When dropped onto a second victim, it also enumerates drives connected to the system.9   * RTM can obtain a list of smart card readers attached to the victim.10   * MoonWind obtains the number of removable drives from the victim.11  ## Mitigation  Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about peripheral devices, and audit and/or block them by using whitelisting12 tools, like AppLocker,1314 or Software Restriction Policies15 where appropriate.16  ## Detection  System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.  Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.  '
p6
sS'Regsvcs/Regasm'
p7
S'  T1121   Tactic|  Defense Evasion, Execution    Permissions Required|  User, Administrator   Data Sources|  Process monitoring, Process command-line parameters   Supports Remote|  No   Defense Bypassed|  Process whitelisting   Contributors|  Casey Smith      Regsvcs and Regasm are Windows command-line utilities that are used to register .NET Component Object Model (COM) assemblies. Both are digitally signed by Microsoft.12  Adversaries can use Regsvcs and Regasm to proxy execution of code through a trusted Windows utility. Both utilities may be used to bypass process whitelisting through use of attributes within the binary to specify code that should be run before registration or unregistration: `[ComRegisterFunction]` or `[ComUnregisterFunction]` respectively. The code with the registration and unregistration attributes will be executed even if the process is run under insufficient privileges and fails to execute.3  ## Mitigation  Regsvcs and Regasm may not be necessary within a given environment. Block execution of Regsvcs.exe and Regasm.exe if they are not required for a given system or network to prevent potential misuess by adversaries.  ## Detection  Use process monitoring to monitor the execution and arguments of Regsvcs.exe and Regasm.exe. Compare recent invocations of Regsvcs.exe and Regasm.exe with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. Command arguments used before and after Regsvcs.exe or Regasm.exe invocation may also be useful in determining the origin and purpose of the binary being executed.  '
p8
sS'Replication Through Removable Media'
p9
S"  T1091   Tactic|  Lateral Movement    System Requirements|  Removable media allowed, Autorun enabled or vulnerability present that allows for code execution   Permissions Required|  User   Data Sources|  File monitoring, Data loss prevention      Adversaries may move to additional systems, possibly those on disconnected or air-gapped networks, by copying malware to removable media and taking advantage of Autorun features when the media is inserted into another system and executes. This may occur through modification of executable files stored on removable media or by copying malware and renaming it to look like a legitimate file to trick users into executing it on a separate system.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * APT28 uses a tool to infect connected USB devices and transmit itself to air-gapped computers when the infected USB device is inserted.1   * Darkhotel's selective infector modifies executables stored on removable media as a method of spreading across computers.2   * Part of APT28's operation involved using CHOPSTICK modules to copy itself to air-gapped machines and using files written to USB sticks to transfer data and command traffic.31   * APT30 may have used the SHIPSHAPE malware to move onto air-gapped networks. SHIPSHAPE targets removable drives to spread to other systems by modifying the drive to use Autorun to execute or by hiding legitimate document files and copying an executable to the folder with the same name as the legitimate document.4   * DustySky searches for removable media and duplicates itself onto it.5   * Agent.btz drops itself onto removable media devices and creates an autorun.inf file with an instruction to run that file. When the device is inserted into another system, it opens autorun.inf and loads the malware.6   * Unknown Logger is capable of spreading to USB devices.7   * H1N1 has functionality to copy itself to removable media.8   * USBStealer drops itself onto removable media and relies on Autorun to execute the malicious file when a user opens the removable media on another system.9   * Flame contains modules to infect USB sticks and spread laterally to other Windows systems the stick is plugged into using autorun functionality.10  ## Mitigation  Disable Autorun if it is unnecessary.11 Disallow or restrict removable media at an organizational policy level if it is not required for business operations.12  Identify potentially malicious software that may be used to infect removable media or may result from tainted removable media, and audit and/or block it by using whitelisting13 tools, like AppLocker,1415 or Software Restriction Policies16 where appropriate.17  ## Detection  Monitor file access on removable media. Detect processes that execute from removable media after it is mounted or when initiated by a user. If a remote access tool is used in this manner to move laterally, then additional actions are likely to occur after execution, such as opening network connections for Command and Control and system and network information Discovery.  "
p10
sS'Binary Padding'
p11
S'  T1009   Tactic|  Defense Evasion    Defense Bypassed|  Anti-virus, Signature-based detection   CAPEC ID|  CAPEC-572      Some security tools inspect files with static signatures to determine if they are known malicious. Adversaries may add data to files to increase the size beyond what security tools are capable of handling or to change the file hash to avoid hash-based blacklists.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Moafee has been known to employ binary padding.1   * A variant of Emissary appends junk data to the end of its DLL file to create a large file that may exceed the maximum size that anti-virus programs can scan.2   * A version of XTunnel introduced in July 2015 inserted junk code into the binary in a likely attempt to obfuscate it and bypass security products.3   * CORESHELL contains unused machine instructions in a likely attempt to hinder analysis.4  ## Mitigation  Identify potentially malicious software that may be executed from a padded or otherwise obfuscated binary, and audit and/or block it by using whitelisting5 tools, like AppLocker,67 or Software Restriction Policies8 where appropriate.9  ## Detection  Depending on the method used to pad files, a file-based signature may be capable of detecting padding using a scanning or on-access based tool.  When executed, the resulting process from padded files may also exhibit other behavior characteristics of being used to conduct an intrusion such as system and network information Discovery or Lateral Movement, which could be used as event indicators that point to the source file.  '
p12
sS'Data from Network Shared Drive'
p13
S"  T1039   Tactic|  Collection    System Requirements|  Privileges to access network shared drive   Data Sources|  File monitoring, Process monitoring, Process command-line parameters      Sensitive data can be collected from remote systems via shared network drives (host shared directory, network file server, etc.) that are accessible from the current system prior to Exfiltration.  Adversaries may search network shares on computers they have compromised to find files of interest. Interactive command shells may be in use, and common functionality within cmd may be used to gather information.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * CosmicDuke steals user files from network shared drives with file extensions and keywords that match a predefined list.1   * When it first starts, BADNEWS crawls the victim's mapped drives and collects documents with the following extensions: .doc, .docx, .pdf, .ppt, .pptx, and .txt.2  ## Mitigation  Identify unnecessary system utilities or potentially malicious software that may be used to collect data from a network share, and audit and/or block them by using whitelisting3 tools, like AppLocker,45 or Software Restriction Policies6 where appropriate.7  ## Detection  Monitor processes and command-line arguments for actions that could be taken to collect files from a network share. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.  "
p14
sS'Network Service Scanning'
p15
S"  T1046   Tactic|  Discovery    Permissions Required|  User, Administrator, SYSTEM   Data Sources|  Netflow/Enclave netflow, Network protocol analysis, Packet capture, Process command-line parameters, Process use of network      Adversaries may attempt to get a listing of services running on remote hosts, including those that may be vulnerable to remote software exploitation. Methods to acquire this information include port scans and vulnerability scans using tools that are brought onto a system.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Threat Group-3390 actors use the Hunter and nbtscan tools to conduct network service discovery for vulnerable systems.1   * FIN6 used publicly available tools (including Microsoft's built-in SQL querying tool, osql.exe) to map the internal network and conduct reconnaissance against Active Directory, Structured Query Language (SQL) servers, and NetBIOS.2   * Suckfly the victim's internal network for hosts with ports 8080, 5900, and 40 open.3   * HDoor scans to identify open ports on the victim. 4   * BlackEnergy has conducted port scans on a host.5   * XTunnel is capable of probing the network for open ports.6   * Remsec has a plugin that can perform ARP scanning as well as port scanning.7  ## Mitigation  Use network intrusion detection/prevention systems to detect and prevent remote service scans. Ensure that unnecessary ports and services are closed and proper network segmentation is followed to protect critical servers and devices.  Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about services running on remote systems, and audit and/or block them by using whitelisting8 tools, like AppLocker,910 or Software Restriction Policies11 where appropriate.12  ## Detection  System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.  Normal, benign system and network events from legitimate remote service scanning may be uncommon, depending on the environment and how they are used. Legitimate open port and vulnerability scanning may be conducted within the environment and will need to be deconflicted with any detection capabilities developed. Network intrusion detection systems can also be used to identify scanning activity. Monitor for process use of the networks and inspect intra- network flows to detect port scans.  "
p16
sS'Multi-Stage Channels'
p17
S'  T1104   Tactic|  Command and Control    Data Sources|  Netflow/Enclave netflow, Network device logs, Network protocol analysis, Packet capture, Process use of network   Requires Network|  Yes      Adversaries may create multiple stages for command and control that are employed under different conditions or for certain functions. Use of multiple stages may obfuscate the command and control channel to make detection more difficult.  Remote access tools will call back to the first-stage command and control server for instructions. The first stage may have automated capabilities to collect basic host information, update tools, and upload additional files. A second remote access tool (RAT) could be uploaded at that point to redirect the host to the second-stage command and control server. The second stage will likely be more fully featured and allow the adversary to interact with the system through a reverse shell and additional RAT features.  The different stages will likely be hosted separately with no overlapping infrastructure. The loader may also have backup first-stage callbacks or Fallback Channels in case the original first-stage communication path is discovered and blocked.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * An APT3 downloader first establishes a SOCKS5 connection to 192.157.198[.]103 using TCP port 1913; once the server response is verified, it then requests a connection to 192.184.60[.]229 on TCP port 81.1   * BACKSPACE attempts to avoid detection by checking a first stage command and control server to determine if it should connect to the second stage server, which performs "louder" interactions with the malware.2   * BLACKCOFFEE uses Microsofts TechNet Web portal to obtain an encoded tag containing the IP address of a command and control server and then communicates separately with that IP address for C2. If the C2 server is discovered or shut down, the threat actors can update the encoded IP address on TechNet to maintain control of the victims machines.3  ## Mitigation  Command and control infrastructure used in a multi-stage channel may be blocked if known ahead of time. If unique signatures are present in the C2 traffic, they could also be used as the basis of identifying and blocking the channel.4  ## Detection  Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure. Relating subsequent actions that may result from Discovery of the system and network information or Lateral Movement to the originating process may also yield useful data.  '
p18
sS'Screen Capture'
p19
S"  T1113   Tactic|  Collection    Data Sources|  API monitoring, Process monitoring, File monitoring      Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation. Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * APT28 regularly deploys a custom tool to take regular screenshots of victims.1   * Malware used by Group5 is capable of watching the victim's screen.2   * TinyZBot contains screen capture functionality.3   * CosmicDuke takes periodic screenshots and exfiltrates them.4   * ZLib has the ability to obtain screenshots of the compromised system.5   * Kasidet has the ability to initiate keylogging and screen captures.6   * BlackEnergy is capable of taking screenshots.7   * Rover takes screenshots of the compromised system's desktop and saves them to C:\\system\\screenshot.bmp for exfiltration every 60 minutes.8   * Trojan.Karagany can take a desktop screenshot and save the file into \\ProgramData\\Mail\\MailAg\\shot.png.9   * T9000 can take screenshots of the desktop and target application windows, saving them to user directories as one byte XOR encrypted .dat files.10   * Prikormka contains a module that captures screenshots of the victim's desktop.11   * Crimson contains a command to perform screen captures.12   * BADNEWS has a command to take a screenshot and send it to the C2 server.13   * Flame can take regular screenshots when certain applications are open that are sent to the command and control server.14   * Pteranodon can capture screenshots at a configurable interval.15   * RTM can capture screenshots.16  ## Mitigation  Blocking software based on screen capture functionality may be difficult, and there may be legitimate software that performs those actions. Instead, identify potentially malicious software that may have functionality to acquire screen captures, and audit and/or block it by using whitelisting17 tools, like AppLocker,1819 or Software Restriction Policies20 where appropriate.21  ## Detection  Monitoring for screen capture behavior will depend on the method used to obtain data from the operating system and write output files. Detection methods could include collecting information from unusual processes using API calls used to obtain image data, and monitoring for image files written to disk. The sensor data may need to be correlated with other events to identify malicious activity, depending on the legitimacy of this behavior within a given network environment.  "
p20
sS'System Owner/User Discovery'
p21
S'  T1033   Tactic|  Discovery    Permissions Required|  User, Administrator   Data Sources|  File monitoring, Process monitoring, Process command-line parameters   CAPEC ID|  CAPEC-577      Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using Credential Dumping. The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * An APT3 downloader uses the Windows command "cmd.exe" /C whoami to verify that it is running with the elevated privileges of System.1   * Lazarus Group malware SierraAlfa and WhiskeyAlfa-Three enumerate logged-on users. Lazarus Group malware IndiaIndia collects the victim\'s username and sends it to the C2 server.2 34   * Stealth Falcon malware gathers the registered user and primary owner name via WMI.5   * Patchwork collected the victim username and whether it was running as admin, then sent the information to its C2 server.6   * A Gamaredon Group file stealer can gather the victim\'s username to send to a C2 server.7   * A Linux version of Derusbi checks if the victim user ID is anything other than zero (normally used for root), and the malware will not execute if it does not have root privileges.8   * SslMM sends the logged-on username to its hard-coded C2.9   * WinMM uses NetUser-GetInfo to identify that it is running under an Admin account on the local system.9   * Sys10 collects the account name of the logged-in user and sends it to the C2.9   * Mis-Type runs tests to determine the privilege level of the compromised user.10   * Agent.btz obtains the victim username and saves it to a file.11   * Backdoor.Oldrea collects the current username from the victim.12   * T9000 gathers and beacons the username of the logged in account during installation. It will also gather the username of running processes to determine if it is running as SYSTEM.13   * A module in Prikormka collects information from the victim about the current user name.14   * Remsec can obtain information about the current user.15   * Unknown Logger can obtain information about the victim usernames.16   * PowerDuke has commands to get the current user\'s name and SID.17   * RTM can obtain the victim username and permissions.18   * MoonWind obtains the victim username.19  ## Mitigation  Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system users, and audit and/or block them by using whitelisting20 tools, like AppLocker,2122 or Software Restriction Policies23 where appropriate.24  ## Detection  System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.  Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.  '
p22
sS'Indicator Blocking'
p23
S'  T1054   Tactic|  Defense Evasion    Data Sources|  Sensor health and status, Process command-line parameters, Process monitoring   Defense Bypassed|  Anti-virus, Log analysis, Host intrusion prevention systems   CAPEC ID|  CAPEC-571      An adversary may attempt to block indicators or events from leaving the host machine. In the case of network-based reporting of indicators, an adversary may block traffic associated with reporting to prevent central analysis. This may be accomplished by many means, such as stopping a local process or creating a host-based firewall rule to block traffic to a specific server.  ## Detection  Detect lack of reported activity from a host sensor. Different methods of blocking may cause different disruptions in reporting. Systems may suddenly stop reporting all data or only certain kinds of data.  Depending on the types of host information collected, an analyst may be able to detect the event that triggered a process to stop or connection to be blocked.  |  v ***** d ***** e  Adversary Techniques   ---   Persistence |    * Winlogon Helper DLL   * Local Port Monitor   * Accessibility Features   * Basic Input/Output System   * Shortcut Modification   * Modify Existing Service   * Path Interception   * Logon Scripts   * DLL Search Order Hijacking   * Change Default File Association   * File System Permissions Weakness   * New Service   * Scheduled Task   * Service Registry Permissions Weakness   * Registry Run Keys / Start Folder   * Hypervisor   * Bootkit   * Legitimate Credentials   * Windows Management Instrumentation Event Subscription   * Web Shell   * Security Support Provider   * AppInit DLLs   * Redundant Access   * Component Firmware   * Component Object Model Hijacking   * Netsh Helper DLL   * Authentication Package   * External Remote Services           Privilege Escalation |    * Local Port Monitor   * Accessibility Features   * Path Interception   * DLL Search Order Hijacking   * File System Permissions Weakness   * New Service   * Scheduled Task   * DLL Injection   * Service Registry Permissions Weakness   * Exploitation of Vulnerability   * Legitimate Credentials   * Bypass User Account Control   * Web Shell   * AppInit DLLs           Credential Access |    * Credential Dumping   * Network Sniffing   * Input Capture   * Exploitation of Vulnerability   * Credentials in Files   * Credential Manipulation   * Brute Force   * Two-Factor Authentication Interception           Discovery |    * System Service Discovery   * Application Window Discovery   * Query Registry   * Local Network Configuration Discovery   * Remote System Discovery   * System Owner/User Discovery   * Network Service Scanning   * Local Network Connections Discovery   * Process Discovery   * Security Software Discovery   * Permission Groups Discovery   * System Information Discovery   * File and Directory Discovery   * Account Discovery   * Peripheral Device Discovery   * System Time Discovery           Defense Evasion |    * File System Logical Offsets   * Binary Padding   * Rootkit   * Obfuscated Files or Information   * Masquerading   * DLL Search Order Hijacking   * Software Packing   * **Indicator Blocking**   * DLL Injection   * Scripting   * Indicator Removal from Tools   * Exploitation of Vulnerability   * Indicator Removal on Host   * DLL Side-Loading   * Legitimate Credentials   * Rundll32   * Bypass User Account Control   * Disabling Security Tools   * Process Hollowing   * NTFS Extended Attributes   * Timestomp   * File Deletion   * Redundant Access   * Component Firmware   * Modify Registry   * Code Signing   * Regsvr32   * InstallUtil   * Regsvcs/Regasm   * Component Object Model Hijacking   * Network Share Connection Removal   * MSBuild   * Install Root Certificate           Lateral Movement |    * Application Deployment Software   * Remote Services   * Windows Remote Management   * Logon Scripts   * Shared Webroot   * Exploitation of Vulnerability   * Third-party Software   * Pass the Hash   * Remote Desktop Protocol   * Windows Admin Shares   * Taint Shared Content   * Replication Through Removable Media   * Pass the Ticket   * Remote File Copy           Execution |    * Windows Remote Management   * Service Execution   * Windows Management Instrumentation   * Scheduled Task   * Command-Line Interface   * Graphical User Interface   * Scripting   * Third-party Software   * Rundll32   * PowerShell   * Process Hollowing   * Execution through API   * Regsvr32   * InstallUtil   * Regsvcs/Regasm   * MSBuild   * Execution through Module Load           Collection |    * Data from Local System   * Data from Removable Media   * Data from Network Shared Drive   * Input Capture   * Data Staged   * Screen Capture   * Email Collection   * Clipboard Data   * Automated Collection   * Audio Capture   * Video Capture           Exfiltration |    * Data Compressed   * Exfiltration Over Other Network Medium   * Automated Exfiltration   * Data Encrypted   * Scheduled Transfer   * Data Transfer Size Limits   * Exfiltration Over Command and Control Channel   * Exfiltration Over Alternative Protocol   * Exfiltration Over Physical Medium           Command and Control |    * Data Obfuscation   * Fallback Channels   * Custom Cryptographic Protocol   * Multiband Communication   * Standard Cryptographic Protocol   * Commonly Used Port   * Uncommonly Used Port   * Standard Application Layer Protocol   * Multilayer Encryption   * Connection Proxy   * Communication Through Removable Media   * Custom Command and Control Protocol   * Standard Non-Application Layer Protocol   * Web Service   * Multi-Stage Channels   * Remote File Copy   * Data Encoding           Retrieved from "https://attack.mitre.org/w/index.php?title=Technique/T1054&amp;oldid=6413"  Categories:    * Defense Evasion   * Technique  ## Navigation menu  ### Personal tools    * Log in  ### Namespaces    * Page   * Discussion  ### Variants  ### Views    * Read   * View form   * View source   * View history  ### More  ###  Search  ### Navigation    * Main page   * Help   * Contribute   * References  ### Tactics    * Persistence   * Privilege Escalation   * Defense Evasion   * Credential Access   * Discovery   * Lateral Movement   * Execution   * Collection   * Exfiltration   * Command and Control  ### Techniques    * All Techniques   * Technique Matrix  ### Groups    * All Groups  ### Software    * All Software  ### Tools    * What links here   * Related changes   * Special pages   * Printable version   * Permanent link   * Page information   * Browse properties    * This page was last modified on 27 July 2016, at 21:51.   * Copyright (C) 2017, The MITRE Corporation. ATT&amp;CK; and ATT&amp;CK; Matrix are trademarks of The MITRE Corporation    * Privacy policy   * Terms of Use    * ![The Mitre Corporation](/images/mitrelogo.png) ![Powered by MediaWiki](/w/resources/assets/poweredby_mediawiki_88x31.png) ![Powered by Semantic MediaWiki](/w/extensions/SemanticMediaWiki/includes/../res/images/smw_button.png)  '
p24
sS'Data Staged'
p25
S'  T1074   Tactic|  Collection    Data Sources|  File monitoring, Process monitoring, Process command-line parameters      Collected data is staged in a central location or directory prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as Data Compressed or Data Encrypted.  Interactive command shells may be used, and common functionality within cmd may be used to copy data into a staging location.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * APT28 has stored captured credential information in a file named pi.log.1   * Threat Group-3390 actors saved RAR files for exfiltration in the Recycler directory. They have also staged RAR files, renamed with a .zip file extension, on externally accessible Web servers and then issued HTTP GET requests to exfiltrate the files from the victim network.2   * Lazarus Group malware IndiaIndia saves information gathered about the victim to a file that is saved in the%TEMP% directory, then compressed, encrypted, and uploaded to a C2 server.3   * TRINITY malware used by FIN6 identifies payment card track data on the victim and then copies it to a local file in a subdirectory of C:\\Windows\\\\. Once the malware collects the data, FIN6 actors compressed data and moved it to another staging system before exfiltration.4   * SPACESHIP identifies files with certain extensions and copies them to a directory in the user\'s profile.5   * FLASHFLOOD stages data it copies from the local system or removable drives in the "%WINDIR%\\$NtUninstallKB885884$\\" directory.5   * Modules can be pushed to and executed by Duqu that copy data to a staging area, compress it, and XOR encrypt it.6   * ADVSTORESHELL stores output from command execution in a .dat file in the%TEMP% directory.7   * Rover copies files from removable drives to C:\\system.8   * Trojan.Karagany can create a directory (C:\\ProgramData\\Mail\\MailAg\\gl) to use as a temporary directory for uploading files.9   * Prikormka creates a directory,%USERPROFILE%\\AppData\\Local\\SKC\\, which is used to store collected log files.10   * BADNEWS copies documents under 15MB found on the victim system to is the user\'s%temp%\\SMB\\ folder.11   * USBStealer collects files matching certain criteria from the victim and stores them in a local directory for later exfiltration.1213   * Pteranodon creates various subdirectories under%Temp%\\reports\\% and copies files to those subdirectories. It also creates a folder at C:\\Users\\\\\\AppData\\Roaming\\Microsoft\\store to store screenshot JPEG files.14   * MoonWind saves information from its keylogging routine as a .zip file in the present working directory.15  ## Mitigation  Identify unnecessary system utilities or potentially malicious software that may be used to collect data from removable media, and audit and/or block them by using whitelisting16 tools, like AppLocker,1718 or Software Restriction Policies19 where appropriate.20  ## Detection  Processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files.  Monitor processes and command-line arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as Windows Management Instrumentation and PowerShell.  '
p26
sS'Taint Shared Content'
p27
S"  T1080   Tactic|  Lateral Movement    System Requirements|  Access to shared folders and content with write permissions   Data Sources|  File monitoring, Process monitoring   CAPEC ID|  CAPEC-562      Content stored on network drives or in other shared locations may be tainted by adding malicious programs, scripts, or exploit code to otherwise valid files. Once a user opens the shared tainted content, the malicious portion can be executed to run the adversary's code on a remote system. Adversaries may use tainted shared content to move laterally.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Darkhotel uses a virus that propagates by infecting executables stored on shared drives.1   * H1N1 has functionality to copy itself to network shares.2   * Miner-C copies itself into the public folder of Network Attached Storage (NAS) devices and infects new victims who open the file.3  ## Mitigation  Protect shared folders by minimizing users who have write access. Use utilities that detect or mitigate common features used in exploitation, such as the Microsoft Enhanced Mitigation Experience Toolkit (EMET).  Identify potentially malicious software that may be used to taint content or may result from it and audit and/or block the unknown programs by using whitelisting4 tools, like AppLocker,56 or Software Restriction Policies7 where appropriate.8  ## Detection  Processes that write or overwrite many files to a network shared directory may be suspicious. Monitor processes that are executed from removable media for malicious or abnormal activity such as network connections due to Command and Control and possible network Discovery techniques.  "
p28
sS'Bootkit'
p29
S'  T1067   Tactic|  Persistence    Permissions Required|  Administrator, SYSTEM   Data Sources|  API monitoring, MBR, VBR      A bootkit is a malware variant that modifies the boot sectors of a hard drive, including the Master Boot Record (MBR) and Volume Boot Record (VBR).1  Adversaries may use bootkits to persist on systems at a layer below the operating system, which may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.  ## Contents    * 1 Master Boot Record   * 2 Volume Boot Record   * 3 Examples   * 4 Mitigation   * 5 Detection   * 6 References  ### Master Boot Record  The MBR is the section of disk that is first loaded after completing hardware initialization by the BIOS. It is the location of the boot loader. An adversary who has raw access to the boot drive may overwrite this area, diverting execution during startup from the normal boot loader to adversary code.2  ### Volume Boot Record  The MBR passes control of the boot process to the VBR. Similar to the case of MBR, an adversary who has raw access to the boot drive may overwrite the VBR to divert execution during startup to adversary code.  ## Examples    * APT28 has deployed a bootkit along with Downdelph to ensure its persistence on the victim. The bootkit shares code with some variants of BlackEnergy.3   * Lazarus Group malware WhiskeyAlfa-Three modifies sector 0 of the Master Boot Record (MBR) to ensure that the malware will persist even if a victim machine shuts down.4   * ROCKBOOT is a Master Boot Record (MBR) bootkit that uses the MBR to establish persistence.5   * BOOTRASH is a Volume Boot Record (VBR) bootkit that uses the VBR to maintain persistence.1  ## Mitigation  Ensure proper permissions are in place to help prevent adversary access to privileged accounts necessary to perform this action. Use Trusted Platform Module technology and a secure or trusted boot process to prevent system integrity from being compromised.67  ## Detection  Perform integrity checking on MBR and VBR. Take snapshots of MBR and VBR and compare against known good samples. Report changes to MBR and VBR as they occur for indicators of suspicious activity and further analysis.  '
p30
sS'Indicator Removal from Tools'
p31
S"  T1066   Tactic|  Defense Evasion    Data Sources|  Process use of network, Anti-virus, Binary file metadata, Process command-line parameters, Process monitoring   Defense Bypassed|  Anti-virus, Log analysis, Host intrusion prevention systems      If a malicious tool is detected and quarantined or otherwise curtailed, an adversary may be able to determine why the malicious tool was detected (the indicator), modify the tool by removing the indicator, and use the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems.  A good example of this is when malware is detected with a file signature and quarantined by anti-virus software. An adversary who can determine that the malware was quarantined because of its file signature may use Software Packing or otherwise modify the file so it has a different signature, and then re-use the malware.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Deep Panda has updated and modified its malware, resulting in different hash values that evade detection.1  ## Mitigation  Mitigation is difficult in instances like this because the adversary may have access to the system through another channel and can learn what techniques or tools are blocked by resident defenses. Exercising best practices with configuration and security as well as ensuring that proper process is followed during investigation of potential compromise is essential to detecting a larger intrusion through discrete alerts.  Identify and block potentially malicious software that may be used by an adversary by using whitelisting2 tools like AppLocker34 or Software Restriction Policies5 where appropriate.6  ## Detection  The first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network.  "
p32
sS'Winlogon Helper DLL'
p33
S'  T1004   Tactic|  Persistence    Permissions Required|  Administrator, SYSTEM   Data Sources|  Windows Registry, File monitoring, Process monitoring   CAPEC ID|  CAPEC-579      Winlogon is a part of some Windows versions that performs actions at logon. In Windows systems prior to Windows Vista, a Registry key can be modified that causes Winlogon to load a DLL on startup. Adversaries may take advantage of this feature to load adversarial code at startup for persistence.  ## Mitigation  Upgrade the operating system to a newer version of Windows if using a version prior to Vista.  Limit the privileges of user accounts so that only authorized administrators can perform Winlogon helper changes.  Identify and block potentially malicious software that may be executed through the Winlogon helper process by using whitelisting1 tools like AppLocker23 that are capable of auditing and/or blocking unknown DLLs.  ## Detection  Monitor for changes to registry entries in `HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify` that do not correlate with known software, patch cycles, etc. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current Winlogon helper values.4 New DLLs written to System32 that do not correlate with known good software or patching may also be suspicious.  Look for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.  '
p34
sS'Data Obfuscation'
p35
S'  T1001   Tactic|  Command and Control    Data Sources|  Packet capture, Process use of network, Process monitoring, Network protocol analysis   Requires Network|  Yes      Command and control (C2) communications are hidden (but not necessarily encrypted) in an attempt to make the content more difficult to discover or decipher and to make the communication less conspicuous and hide commands from being seen. This encompasses many methods, such as adding junk data to protocol traffic, using steganography, commingling legitimate traffic with C2 communications traffic, or using a non-standard data encoding system, such as a modified Base64 encoding for the message body of an HTTP request.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Some malware that has been used by Axiom uses steganography to hide communication in PNG image files.1   * The Axiom group has used other forms of obfuscation, include commingling legitimate traffic with communications traffic so that network streams appear legitimate.1   * APT28 added "junk data" to each encoded string, preventing trivial decoding without knowledge of the junk removal algorithm. Each implant was given a "junk length" value when created, tracked by the controller software to allow seamless communication but prevent analysis of the command protocol on the wire.2   * The Ixeshe malware uses custom Base64 encoding schemes to obfuscate data command and control traffic in the message body of HTTP requests.3   * P2P ZeuS added junk data to outgoing UDP packets to peer implants.4   * Newer variants of BACKSPACE will encode C2 communications with a custom system.5   * HAMMERTOSS is controlled via commands that are appended to image files.6   * When the Duqu command and control is operating over HTTP or HTTPS, Duqu uploads data to its controller by appending it to a blank JPG file.7   * FakeM C2 traffic attempts to evade detection by resembling data generated by legitimate messenger applications, such as MSN and Yahoo! messengers.8   * Some Backdoor.Oldrea samples use standard Base64 + bzip2, and some use standard Base64 + reverse XOR + RSA-2048 to decrypt data received from C2 servers.9   * After encrypting C2 data, BADNEWS converts it into a hexadecimal representation and then encodes it into base64.10   * H1N1 obfuscates C2 traffic with an altered version of base64.11   * Downdelph inserts pseudo-random characters between each original character during encoding of C2 network requests, making it difficult to write signatures on them.12  ## Mitigation  Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.13  ## Detection  Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.13  '
p36
sS'Bypass User Account Control'
p37
S'  T1088   Tactic|  Defense Evasion, Privilege Escalation    Permissions Required|  User, Administrator   Effective Permissions|  Administrator   Data Sources|  System calls, Process monitoring, Authentication logs, Process command-line parameters   Defense Bypassed|  Windows User Account Control   Contributors|  Stefan Kanthak;Casey Smith      Windows User Account Control (UAC) allows a program to elevate its privileges to perform a task under administrator-level permissions by prompting the user for confirmation. The impact to the user ranges from denying the operation under high enforcement to allowing the user to perform the action if they are in the local administrators group and click through the prompt or allowing them to enter an administrator password to complete the action.1  If the UAC protection level of a computer is set to anything but the highest level, certain Windows programs are allowed to elevate privileges or execute some elevated COM objects without prompting the user through the UAC notification box.23 An example of this is use of rundll32.exe to load a specifically crafted DLL which loads an auto-elevated COM object and performs a file operation in a protected directory which would typically require elevated access. Malicious software may also be injected into a trusted process to gain elevated privileges without prompting a user.4 Adversaries can use these techniques to elevate privileges to administrator if the target process is unprotected.  Many methods have been discovered to bypass UAC. The Github readme page for UACMe contains an extensive list of methods5 that have been discovered and implemented within UACMe, but may not be a comprehensive list of bypasses. Additional methods have been discovered and are being used in the wild, such as using eventvwr.exe to auto-elevate and execute a specified binary or script.67  Another bypass is possible through some Lateral Movement techniques if credentials for an account with administrator privileges are known, since UAC is a single system security mechanism, and the privilege or integrity of a process running on one system will be unknown on lateral systems and default to high integrity.8  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * APT29 has bypassed UAC.9   * Patchwork bypassed User Access Control (UAC).10   * Sakula contains UAC bypass code for both 32- and 64-bit systems.11   * BlackEnergy attempts to bypass default User Access Control (UAC) settings by exploiting a backward-compatibility setting found in Windows 7 and later.12   * UACMe contains many methods for bypassing Windows User Account Control on multiple versions of the operating system.5   * AutoIt attempts to escalate privileges by bypassing User Access Control.13   * H1N1 bypasses user access control by using a DLL hijacking vulnerability in the Windows Update Standalone Installer (wusa.exe).14   * Downdelph bypasses UAC to escalate privileges by using a custom RedirectEXE shim database.15   * Shamoon attempts to disable UAC remote restrictions by modifying the Registry.16   * RTM can attempt to run the program as admin, then show a fake error message and a legitimate UAC bypass prompt to the user in an attempt to socially engineer the user into escalating privileges.17  ## Mitigation  Remove users from the local administrator group on systems. Although UAC bypass techniques exist, it is still prudent to use the highest enforcement level for UAC when possible and mitigate bypass opportunities that exist with techniques such as DLL Search Order Hijacking.  Check for common UAC bypass weaknesses on Windows systems to be aware of the risk posture and address issues where appropriate.5  ## Detection  There are many ways to perform UAC bypasses when a user is in the local administrator group on a system, so it may be difficult to target detection on all variations. Efforts should likely be placed on mitigation and collecting enough information on process launches and actions that could be performed before and after a UAC bypass is performed. Monitor process API calls for behavior that may be indicative of DLL Injection and unusual loaded DLLs through DLL Search Order Hijacking, which indicate attempts to gain access to higher privileged processes.  '
p38
sS'AppInit DLLs'
p39
S'  T1103   Tactic|  Persistence, Privilege Escalation    Permissions Required|  Administrator   Effective Permissions|  Administrator, SYSTEM   Data Sources|  Loaded DLLs, Process monitoring, Windows Registry      DLLs that are specified in the AppInit_DLLs value in the Registry key `HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows` are loaded by user32.dll into every process that loads user32.dll. In practice this is nearly every program. This value can be abused to obtain persistence by causing a DLL to be loaded into most processes on the computer.1  The AppInit DLL functionality is disabled in Windows 8 and later versions when secure boot is enabled.2  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * If a victim meets certain criteria, T9000 uses the AppInit_DLL functionality to achieve persistence by ensuring that every user mode process that is spawned will load its malicious DLL, ResN32.dll. It does this by creating the following Registry keys: HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\AppInit_DLLs %APPDATA%\\Intel\\ResN32.dll and HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\LoadAppInit_DLLs  0x1.3   * Some variants of Cherry Picker use AppInit_DLLs to achieve persistence by creating the following Registry key: HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows "AppInit_DLLs"="pserver32.dll"4  ## Mitigation  Upgrade to Windows 8 or later and enable secure boot.  Identify and block potentially malicious software that may be executed through AppInit DLLs by using whitelisting5 tools, like AppLocker,67 that are capable of auditing and/or blocking unknown DLLs.  ## Detection  Monitor DLL loads by processes that load user32.dll and look for DLLs that are not recognized or not normally loaded into a process. Monitor the AppInit_DLLs Registry value for modifications that do not correlate with known software, patch cycles, etc. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current AppInit DLLs.8  Look for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as making network connections for Command and Control, learning details about the environment through Discovery, and conducting Lateral Movement.  '
p40
sS'Uncommonly Used Port'
p41
S'  T1065   Tactic|  Command and Control    Data Sources|  Netflow/Enclave netflow, Process use of network, Process monitoring   Requires Network|  Yes      Adversaries may conduct C2 communications over a non-standard port to bypass proxies and firewalls that have been improperly configured.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * An APT3 downloader establishes SOCKS5 connections to two separate IP addresses over TCP port 1913 and TCP port 81.1   * Some Lazarus Group malware uses a list of ordered port numbers to choose a port for C2 traffic, which includes uncommonly used ports such as 995, 1816, 465, 1521, 3306, and many others.2   * Group5 C2 servers communicated with malware over TCP 8081, 8282, and 8083.3   * A variant of ADVSTORESHELL attempts communication to the C2 server over HTTP on port 443.4   * ELMER uses HTTP over port 443 for command and control.5   * MobileOrder communicates with its C2 server over TCP port 3728.6   * A Remsec module has a default C2 port of 13000.7  ## Mitigation  Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports.  Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.8  ## Detection  Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.8  '
p42
sS'Shared Webroot'
p43
S'  T1051   Tactic|  Lateral Movement    System Requirements|  Shared webroot directory on remote system   Data Sources|  File monitoring, Process monitoring   CAPEC ID|  CAPEC-563      Adversaries may add malicious content to an internally accessible website through an open network file share that contains the website\'s webroot or Web content directory and then browse to that content with a Web browser to cause the server to execute the malicious content. The malicious content will typically run under the context and permissions of the Web server process, often resulting in local system or administrative privileges, depending on how the Web server is configured.  This mechanism of shared access and remote execution could be used for lateral movement to the system running the Web server. For example, a Web server running PHP with an open network share could allow an adversary to upload a remote access tool and PHP script to execute the RAT on the system running the Web server when a specific page is visited.  ## Mitigation  Networks that allow for open development and testing of Web content and allow users to set up their own Web servers on the enterprise network may be particularly vulnerable if the systems and Web servers are not properly secured to limit privileged account use, unauthenticated network share access, and network/system isolation.  Ensure proper permissions on directories that are accessible through a Web server. Disallow remote access to the webroot or other directories used to serve Web content. Disable execution on directories within the webroot. Ensure that permissions of the Web server process are only what is required by not using built-in accounts; instead, create specific accounts to limit unnecessary access or permissions overlap across multiple systems.  ## Detection  Use file and process monitoring to detect when files are written to a Web server by a process that is not the normal Web server process or when files are written outside of normal administrative time periods. Use process monitoring to identify normal processes that run on the Web server and detect processes that are not typically executed.  |  v ***** d ***** e  Adversary Techniques   ---   Persistence |    * Winlogon Helper DLL   * Local Port Monitor   * Accessibility Features   * Basic Input/Output System   * Shortcut Modification   * Modify Existing Service   * Path Interception   * Logon Scripts   * DLL Search Order Hijacking   * Change Default File Association   * File System Permissions Weakness   * New Service   * Scheduled Task   * Service Registry Permissions Weakness   * Registry Run Keys / Start Folder   * Hypervisor   * Bootkit   * Legitimate Credentials   * Windows Management Instrumentation Event Subscription   * Web Shell   * Security Support Provider   * AppInit DLLs   * Redundant Access   * Component Firmware   * Component Object Model Hijacking   * Netsh Helper DLL   * Authentication Package   * External Remote Services           Privilege Escalation |    * Local Port Monitor   * Accessibility Features   * Path Interception   * DLL Search Order Hijacking   * File System Permissions Weakness   * New Service   * Scheduled Task   * DLL Injection   * Service Registry Permissions Weakness   * Exploitation of Vulnerability   * Legitimate Credentials   * Bypass User Account Control   * Web Shell   * AppInit DLLs           Credential Access |    * Credential Dumping   * Network Sniffing   * Input Capture   * Exploitation of Vulnerability   * Credentials in Files   * Credential Manipulation   * Brute Force   * Two-Factor Authentication Interception           Discovery |    * System Service Discovery   * Application Window Discovery   * Query Registry   * Local Network Configuration Discovery   * Remote System Discovery   * System Owner/User Discovery   * Network Service Scanning   * Local Network Connections Discovery   * Process Discovery   * Security Software Discovery   * Permission Groups Discovery   * System Information Discovery   * File and Directory Discovery   * Account Discovery   * Peripheral Device Discovery   * System Time Discovery           Defense Evasion |    * File System Logical Offsets   * Binary Padding   * Rootkit   * Obfuscated Files or Information   * Masquerading   * DLL Search Order Hijacking   * Software Packing   * Indicator Blocking   * DLL Injection   * Scripting   * Indicator Removal from Tools   * Exploitation of Vulnerability   * Indicator Removal on Host   * DLL Side-Loading   * Legitimate Credentials   * Rundll32   * Bypass User Account Control   * Disabling Security Tools   * Process Hollowing   * NTFS Extended Attributes   * Timestomp   * File Deletion   * Redundant Access   * Component Firmware   * Modify Registry   * Code Signing   * Regsvr32   * InstallUtil   * Regsvcs/Regasm   * Component Object Model Hijacking   * Network Share Connection Removal   * MSBuild   * Install Root Certificate           Lateral Movement |    * Application Deployment Software   * Remote Services   * Windows Remote Management   * Logon Scripts   * **Shared Webroot**   * Exploitation of Vulnerability   * Third-party Software   * Pass the Hash   * Remote Desktop Protocol   * Windows Admin Shares   * Taint Shared Content   * Replication Through Removable Media   * Pass the Ticket   * Remote File Copy           Execution |    * Windows Remote Management   * Service Execution   * Windows Management Instrumentation   * Scheduled Task   * Command-Line Interface   * Graphical User Interface   * Scripting   * Third-party Software   * Rundll32   * PowerShell   * Process Hollowing   * Execution through API   * Regsvr32   * InstallUtil   * Regsvcs/Regasm   * MSBuild   * Execution through Module Load           Collection |    * Data from Local System   * Data from Removable Media   * Data from Network Shared Drive   * Input Capture   * Data Staged   * Screen Capture   * Email Collection   * Clipboard Data   * Automated Collection   * Audio Capture   * Video Capture           Exfiltration |    * Data Compressed   * Exfiltration Over Other Network Medium   * Automated Exfiltration   * Data Encrypted   * Scheduled Transfer   * Data Transfer Size Limits   * Exfiltration Over Command and Control Channel   * Exfiltration Over Alternative Protocol   * Exfiltration Over Physical Medium           Command and Control |    * Data Obfuscation   * Fallback Channels   * Custom Cryptographic Protocol   * Multiband Communication   * Standard Cryptographic Protocol   * Commonly Used Port   * Uncommonly Used Port   * Standard Application Layer Protocol   * Multilayer Encryption   * Connection Proxy   * Communication Through Removable Media   * Custom Command and Control Protocol   * Standard Non-Application Layer Protocol   * Web Service   * Multi-Stage Channels   * Remote File Copy   * Data Encoding           Retrieved from "https://attack.mitre.org/w/index.php?title=Technique/T1051&amp;oldid=6372"  Categories:    * Lateral Movement   * Technique  ## Navigation menu  ### Personal tools    * Log in  ### Namespaces    * Page   * Discussion  ### Variants  ### Views    * Read   * View form   * View source   * View history  ### More  ###  Search  ### Navigation    * Main page   * Help   * Contribute   * References  ### Tactics    * Persistence   * Privilege Escalation   * Defense Evasion   * Credential Access   * Discovery   * Lateral Movement   * Execution   * Collection   * Exfiltration   * Command and Control  ### Techniques    * All Techniques   * Technique Matrix  ### Groups    * All Groups  ### Software    * All Software  ### Tools    * What links here   * Related changes   * Special pages   * Printable version   * Permanent link   * Page information   * Browse properties    * This page was last modified on 1 July 2016, at 19:48.   * Copyright (C) 2017, The MITRE Corporation. ATT&amp;CK; and ATT&amp;CK; Matrix are trademarks of The MITRE Corporation    * Privacy policy   * Terms of Use    * ![The Mitre Corporation](/images/mitrelogo.png) ![Powered by MediaWiki](/w/resources/assets/poweredby_mediawiki_88x31.png) ![Powered by Semantic MediaWiki](/w/extensions/SemanticMediaWiki/includes/../res/images/smw_button.png)  '
p44
sS'Hypervisor'
p45
S"  T1062   Tactic|  Persistence    Permissions Required|  Administrator, SYSTEM   Data Sources|  System calls   CAPEC ID|  CAPEC-552      A type-1 hypervisor is a software layer that sits between the guest operating systems and system's hardware.1 It presents a virtual running environment to an operating system. An example of a common hypervisor is Xen.2 A type-1 hypervisor operates at a level below the operating system and could be designed with Rootkit functionality to hide its existence from the guest operating system.3 A malicious hypervisor of this nature could be used to persist on systems through interruption.  ## Mitigation  Prevent adversary access to privileged accounts necessary to install a hypervisor.  ## Detection  Type-1 hypervisors may be detected by performing timing analysis. Hypervisors emulate certain CPU instructions that would normally be executed by the hardware. If an instruction takes orders of magnitude longer to execute than normal on a system that should not contain a hypervisor, one may be present.4  "
p46
sS'Basic Input/Output System'
p47
S'  T1019   Tactic|  Persistence    Permissions Required|  Administrator, SYSTEM   Data Sources|  API monitoring, BIOS   CAPEC ID|  CAPEC-532      The BIOS (Basic Input/Output System), which underlies the functionality of a computer, may be modified to perform or assist in malicious activity.1  Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.  The Unified Extensible Firmware Interface (UEFI) is new specification for the interface between platform firmware and a computer operating system.2  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Trojan.Mebromi performs BIOS modification and can download and execute a file as well as protect itself from removal.3   * Hacking Team UEFI Rootkit is a UEFI BIOS rootkit developed by the company Hacking Team to persist remote access software on some targeted systems.4  ## Mitigation  Prevent adversary access to privileged accounts or access necessary to perform this technique. Check the integrity of the existing BIOS to determine if it is vulnerable to modification. Patch the BIOS as necessary. Use Trusted Platform Module technology.5  ## Detection  Firmware manipulation may be detected.6 Dump and inspect BIOS images on vulnerable systems and compare against known good images.7 Analyze differences to determine if malicious changes have occurred. Log attempts to read/write to BIOS and compare against known patching behavior.  Likewise, extensible firmware interface (EFI) modules can be collected and compared against a known-clean list of EFI executable binaries to detect potentially malicious modules. The CHIPSEC framework can be used for analysis to determine if firmware modifications have been performed.8910  '
p48
sS'Data from Removable Media'
p49
S"  T1025   Tactic|  Collection    System Requirements|  Privileges to access removable media drive and files   Data Sources|  File monitoring, Process monitoring, Process command-line parameters      Sensitive data can be collected from any removable media (optical disk drive, USB memory, etc.) connected to the compromised system prior to Exfiltration.  Adversaries may search connected removable media on computers they have compromised to find files of interest. Interactive command shells may be in use, and common functionality within cmd may be used to gather information. Some adversaries may also use Automated Collection on removable media.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * A APT28 backdoor may collect the entire contents of an inserted USB device.1   * A Gamaredon Group file stealer has the capability to steal data from newly connected logical volumes on a system, including USB drives.2   * FLASHFLOOD searches for interesting files (either a default or customized set of file extensions) on removable media and copies them to a staging area. The default file types copied would include data copied to the drive by SPACESHIP.3   * CosmicDuke steals user files from removable media with file extensions and keywords that match a predefined list.4   * Rover searches for files on attached removable drives based on a predefined list of file extensions every five seconds.5   * Prikormka contains a module that collects documents with certain extensions from removable media or fixed drives connected via USB.6   * Crimson contains a module to collect data from removable drives.7   * Remsec has a package that collects documents from any inserted USB sticks.8   * Once a removable media device is inserted back into the first victim, USBStealer collects data from it that was exfiltrated from a second victim.910  ## Mitigation  Identify unnecessary system utilities or potentially malicious software that may be used to collect data from removable media, and audit and/or block them by using whitelisting11 tools, like AppLocker,1213 or Software Restriction Policies14 where appropriate.15  ## Detection  Monitor processes and command-line arguments for actions that could be taken to collect files from a system's connected removable media. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.  "
p50
sS'Local Network Connections Discovery'
p51
S'  T1049   Tactic|  Discovery    Permissions Required|  User, Administrator   Data Sources|  Process command-line parameters, Process monitoring      Adversaries may attempt to get a listing of network connections to or from the compromised system. Utilities and commands that acquire this information include netstat, "net use," and "net session" with Net.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Ke3chang performs local network connection discovery using netstat -ano commands.1   * Turla surveys a system upon check-in to discover active local network connections using the netstat -an, net use, net file, and net session commands.2   * admin@338 actors used the following command following exploitation of a machine with LOWBALL malware to display network connections: netstat -ano &gt;&gt;%temp%\\download3   * Poseidon Group obtains and saves information about victim network interfaces and addresses.4   * Sykipot may use netstat -ano to display active network connections.5   * The discovery modules used with Duqu can collect information on network connections.6   * Commands such as net use and net session can be used in Net to gather information about network connections from a particular host.7   * SHOTPUT uses netstat to list TCP connection status.8   * BlackEnergy has gathered information about local network connections using netstat.910   * nbtstat can be used to discover current NetBIOS sessions.   * netstat can be used to enumerate local network connections, including active TCP connections and other network statistics.11   * Remsec can obtain a list of active connections and open ports.12  ## Mitigation  Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about network connections, and audit and/or block them by using whitelisting13 tools, like AppLocker,1415 or Software Restriction Policies16 where appropriate.17  ## Detection  System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.  Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.  '
p52
sS'Email Collection'
p53
S"  T1114   Tactic|  Collection    Data Sources|  Authentication logs, File monitoring, Process monitoring, Process use of network      Adversaries may target user email to collect sensitive information from a target.  Files containing email data can be acquired from a user's system, such as Outlook storage or cache files .pst and .ost.  Adversaries may leverage a user's credentials and interact directly with the Exchange server to acquire information from within a network.  Some adversaries may acquire user credentials and access externally facing webmail applications, such as Outlook Web Access.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * APT1 uses two utilities, GETMAIL and MAPIGET, to steal email. GETMAIL extracts emails from archived Outlook .pst files, and MAPIGET steals email still on Exchange servers that has not yet been archived.1   * CosmicDuke searches for Microsoft Outlook data files with extensions .pst and .ost for collection and exfiltration.2   * Some SeaDuke samples have a module to extract email from Microsoft Exchange servers using compromised credentials.3   * Backdoor.Oldrea collects address book information from Outlook.4   * Crimson contains a command to collect and exfiltrate emails from Outlook.5  ## Mitigation  Use of encryption provides an added layer of security to sensitive information sent over email. Encryption using public key cryptography requires the adversary to obtain the private certificate along with an encryption key to decrypt messages.  Use of two-factor authentication for public-facing webmail servers is also a recommended best practice to minimize the usefulness of user names and passwords to adversaries.  Identify unnecessary system utilities or potentially malicious software that may be used to collect email data files or access the corporate email server, and audit and/or block them by using whitelisting6 tools, like AppLocker,78 or Software Restriction Policies9 where appropriate.10  ## Detection  There are likely a variety of ways an adversary could collect email from a target, each with a different mechanism for detection.  File access of local system email files for Exfiltration, unusual processes connecting to an email server within a network, or unusual access patterns or authentication attempts on a public-facing webmail server may all be indicators of malicious activity.  Monitor processes and command-line arguments for actions that could be taken to gather local email files. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.  "
p54
sS'Network Sniffing'
p55
S'  T1040   Tactic|  Credential Access    System Requirements|  Network interface access and packet capture driver   Permissions Required|  Administrator, SYSTEM   Data Sources|  Network device logs, Host network interface, Netflow/Enclave netflow   CAPEC ID|  CAPEC-158      Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection.  User credentials may be sent over an insecure, unencrypted protocol that can be captured and obtained through network packet analysis. An adversary may place a network interface into promiscuous mode, using a utility to capture traffic in transit over the network or use span ports to capture a larger amount of data. In addition, Address Resolution Protocol (ARP) and Domain Name Service (DNS) poisoning can be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Regin appears to have functionality to sniff for credentials passed over HTTP, SMTP, and SMB.1  ## Mitigation  Ensure that all wireless traffic is encrypted appropriately. Use Kerberos, SSL, and multifactor authentication wherever possible. Monitor switches and network for span port usage, ARP/DNS poisoning, and router reconfiguration.  Identify and block potentially malicious software that may be used to sniff or analyze network traffic by using whitelisting2 tools, like AppLocker,34 or Software Restriction Policies5 where appropriate.6  ## Detection  Detecting the events leading up to sniffing network traffic may be the best method of detection. From the host level, an adversary would likely need to perform a man-in-the-middle attack against other devices on a wired network in order to capture traffic that was not to or from the current compromised system. This change in the flow of information is detectable at the enclave network level. Monitor for ARP spoofing and gratuitous ARP broadcasts. Detecting compromised network devices is a bit more challenging. Auditing administrator logins, configuration changes, and device images is required to detect malicious changes.  '
p56
sS'Exploitation of Vulnerability'
p57
S'  T1068   Tactic|  Credential Access, Defense Evasion, Lateral Movement, Privilege Escalation    System Requirements|  Unpatched software or otherwise vulnerable target. Depending on the target and goal, the system and exploitable service may need to be remotely accessible from the internal network. In the case of privilege escalation, the adversary likely already has user permissions on the target system.   Permissions Required|  User, Administrator, SYSTEM   Effective Permissions|  User, Administrator, SYSTEM   Data Sources|  Windows Error Reporting, File monitoring, Process monitoring   Defense Bypassed|  Anti-virus, System access controls   CAPEC ID|  CAPEC-69   Contributors|  John Lambert, Microsoft Threat Intelligence Center      Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Exploiting software vulnerabilities may allow adversaries to run a command or binary on a remote system for lateral movement, escalate a current process to a higher privilege level, or bypass security mechanisms. Exploits may also allow an adversary access to privileged accounts and credentials. One example of this is MS14-068, which can be used to forge Kerberos tickets using domain user permissions.12  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * APT28 has used CVE-2014-4076, CVE-2015-2387, and CVE-2015-1701 to escalate privileges, as well as CVE-2015-4902 to bypass security features.34   * FIN6 has used tools to exploit Windows vulnerabilities in order to escalate privileges. The tools targeted CVE-2013-3660, CVE-2011-2005, and CVE-2010-4398, all of which could allow local users to access kernel-level privileges.5   * JHUHUGIT has exploited CVE-2015-1701 and CVE-2015-2387 to escalate privileges.67   * CosmicDuke attempts to exploit privilege escalation vulnerabilities CVE-2010-0232 or CVE-2010-4398.8   * Remsec has a plugin to drop and execute vulnerable Outpost Sandbox or avast! Virtualization drivers in order to gain kernel mode privileges.9   * Flame can use MS10-061 to exploit a print spooler vulnerability in a remote system with a shared printer in order to move laterally.10  ## Mitigation  Update software regularly by employing patch management for internal enterprise endpoints and servers. Develop a robust cyber threat intelligence capability to determine what types and levels of threat may use software exploits and 0-days against a particular organization. Make it difficult for adversaries to advance their operation through exploitation of undiscovered or unpatched vulnerabilities by using sandboxing, virtualization, and exploit prevention tools such as the Microsoft Enhanced Mitigation Experience Toolkit.11  ## Detection  Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Software and operating system crash reports may contain useful contextual information about attempted exploits that correlate with other malicious activity. Exploited processes may exhibit behavior that is unusual for the specific process, such as spawning additional processes or reading and writing to files.  '
p58
sS'Service Registry Permissions Weakness'
p59
S"  T1058   Tactic|  Persistence, Privilege Escalation    System Requirements|  Ability to modify a service binPath/ImagePath value in the Registry   Permissions Required|  Administrator, SYSTEM   Effective Permissions|  SYSTEM   Data Sources|  Windows Registry, Services, Process command-line parameters   CAPEC ID|  CAPEC-203      Windows stores local service configuration information in the Registry under `HKLM\\SYSTEM\\CurrentControlSet\\Services`. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe, PowerShell, or Reg. Access to Registry keys is controlled through Access Control Lists and permissions.1  If the permissions for users and groups are not properly set and allow access to the Registry keys for a service, then adversaries can change the service binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).  ## Mitigation  Identify and block potentially malicious software that may be executed through service abuse by using whitelisting2 tools like AppLocker34 that are capable of auditing and/or blocking unknown programs.  ## Detection  Service changes are reflected in the Registry. Modification to existing services should not occur frequently. If a service binary path is changed to a location that is not typical for that service and does not correlate with software updates, then it may be due to malicious activity. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.  Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current service information.5 Look for changes to services that do not correlate with known software, patch cycles, etc. Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.  Monitor processes and command-line arguments for actions that could be done to modify services. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Services may also be changed through Windows system management tools such as Windows Management Instrumentation and PowerShell, so additional logging may need to be configured to gather the appropriate data.  "
p60
sS'Data Compressed'
p61
S'  T1002   Tactic|  Exfiltration    Data Sources|  File monitoring, Binary file metadata, Process command-line parameters, Process monitoring   Requires Network|  No      An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network. The compression is done separately from the exfiltration channel and is performed using a custom program or algorithm, or a more common compression library or utility such as 7zip, RAR, ZIP, or zlib.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * The Ke3chang group has been known to compress data before exfiltration.1   * APT1 has used RAR to compress files before moving them outside of the victim network.2   * Threat Group-3390 actors have compressed data into RAR files prior to exfiltration.3   * Lazarus Group malware IndiaIndia saves information gathered about the victim to a file that is compressed with Zlib, encrypted, and uploaded to a C2 server.4 Lazarus Group malware RomeoDelta archives specified directories in .zip format, encrypts the .zip file, and uploads it to its C2 server.5   * Following data collection, FIN6 has compressed log files into a ZIP archive prior to staging and exfiltration.6   * Lurid can compress data before sending it.7   * Modules can be pushed to and executed by Duqu that copy data to a staging area, compress it, and XOR encrypt it.8   * ADVSTORESHELL compresses output data generated by command execution with a custom implementation of the LempelZivWelch (LZW) algorithm.9   * SeaDuke compressed data with zlib prior to sending it over C2.10   * The ZLib backdoor compresses communications using the standard Zlib compression library.11   * After collecting documents from removable media, Prikormka compresses the collected files.12  ## Mitigation  Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to compress files, and audit and/or block them by using whitelisting13 tools, like AppLocker,1415 or Software Restriction Policies16 where appropriate.17  If network intrusion prevention or data loss prevention tools are set to block specific file types from leaving the network over unencrypted channels, then an adversary may move to an encrypted channel.  ## Detection  Compression software and compressed files can be detected in many ways. Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known compression utilities. This may yield a significant amount of benign events, depending on how systems in the environment are typically used.  If the communications channel is unencrypted, compressed files can be detected in transit during exfiltration with a network intrusion detection or data loss prevention system analyzing file headers.18  '
p62
sS'Rootkit'
p63
S'  T1014   Tactic|  Defense Evasion    Permissions Required|  Administrator, SYSTEM   Data Sources|  BIOS, MBR, System calls   Defense Bypassed|  Anti-virus, File monitoring, Host intrusion prevention systems, Process whitelisting, Signature-based detection, System access controls, Whitelisting by file name or path      Rootkits are programs that hide the existence of malware by intercepting and modifying operating system API calls that supply system information. Rootkits or rootkit enabling functionality may reside at the user or kernel level in the operating system or lower, to include a Hypervisor, Master Boot Record, or the Basic Input/Output System.1  Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Winnti Group used a rootkit to modify typical server functionality.2   * Uroburos is a rootkit used by Turla.3   * Zeroaccess is a kernel-mode rootkit.4   * Hacking Team UEFI Rootkit is a UEFI BIOS rootkit developed by the company Hacking Team to persist remote access software on some targeted systems.5   * HIDEDRV is a rootkit that hides certain operating system artifacts.6  ## Mitigation  Identify potentially malicious software that may contain rootkit functionality, and audit and/or block it by using whitelisting7 tools, like AppLocker,89 or Software Restriction Policies10 where appropriate.11  ## Detection  Some rootkit protections may be built into anti-virus or operating system software. There are dedicated rootkit detection tools that look for specific types of rootkit behavior. Monitor for the existence of unrecognized DLLs, devices, services, and changes to the MBR.1  '
p64
sS'Windows Remote Management'
p65
S'  T1028   Tactic|  Execution, Lateral Movement    System Requirements|  WinRM listener turned on and configured on remote system   Permissions Required|  User, Administrator   Data Sources|  File monitoring, Authentication logs, Netflow/Enclave netflow, Process command-line parameters, Process monitoring   Supports Remote|  Yes      Windows Remote Management (WinRM) is the name of both a Windows service and a protocol that allows a user to interact with a remote system (e.g., run an executable, modify the Registry, modify services).1 It may be called with the `winrm` command or by any number of programs such as PowerShell.2  ## Mitigation  Disable the WinRM service. If the service is necessary, lock down critical enclaves with separate WinRM infrastructure, accounts, and permissions. Follow WinRM best practices on configuration of authentication methods and use of host firewalls to restrict WinRM access to allow communication only to/from specific devices.3  ## Detection  Monitor use of WinRM within an environment by tracking service execution. If it is not normally used or is disabled, then this may be an indicator of suspicious behavior. Monitor processes created and actions taken by the WinRM process or a WinRM invoked script to correlate it with other related events.  '
p66
sS'System Information Discovery'
p67
S"  T1082   Tactic|  Discovery    Permissions Required|  User   Data Sources|  Process command-line parameters, Process monitoring   CAPEC ID|  CAPEC-311      An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Example commands and utilities that obtain this information include `ver`, Systeminfo, and `dir` within cmd for identifying information based on present files and directories.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Ke3chang performs operating system information discovery using systeminfo commands.1   * Turla surveys a system upon check-in to discover operating system configuration details using the systeminfo and set commands.2   * admin@338 actors used the following commands after exploiting a machine with LOWBALL malware to obtain information about the OS: ** ver &gt;&gt;%temp%\\download ** systeminfo &gt;&gt;%temp%\\download3   * Several Lazarus Group malware families collect information on the type and version of the victim OS, as well as the victim computer name and CPU information.45   * Stealth Falcon malware gathers system information via WMI, including the system directory, build number, serial number, version, manufacturer, model, and total physical memory.6   * Patchwork collected the victim computer name, OS version, and architecture type and sent the information to its C2 server .7   * A Gamaredon Group file stealer can gather the victim's computer name and drive serial numbers to send to a C2 server.8   * Derusbi gathers the name of the local host, version of GNU Compiler Collection (GCC), and the system information about the machine and operating system.9   * During its initial execution, BACKSPACE extracts operating system information from the infected host.10   * BUBBLEWRAP collects system information, including the operating system version and hostname.3   * JHUHUGIT obtains a build identifier as well as victim hard drive information from Windows registry key HKLM\\SYSTEM\\CurrentControlSet\\Services\\Disk\\Enum.11   * ADVSTORESHELL can run Systeminfo to gather information about the victim.1213   * A system info module in CozyCar gathers information on the victim hosts configuration.14   * PinchDuke gathers system configuration information.15   * SslMM sends information to its hard-coded C2, including OS version, service pack information, processor speed, system name, and OS install date.16   * WinMM collects the system name, OS version including service pack, and system install date and sends the information to the C2 server.16   * Sys10 collects the computer name, OS versioning information, and OS install date and sends the information to the C2.16   * DustySky extracts basic information about the operating system.17   * 4H RAT sends an OS version identifier in its beacons.18   * MobileOrder has a command to upload to its C2 server victim mobile device information, including IMEI, IMSI, SIM card serial number, phone number, Android version, and other information.19   * Elise executes systeminfo after initial communication is made to the remote server.20   * Emissary has the capability to execute ver, systeminfo, and gpresult commands.21   * The initial beacon packet for Misdat contains the operating system version of the victim.22   * The initial beacon packet for Mis-Type contains the operating system version and file system of the victim.22   * The initial beacon packet for S-Type contains the operating system version and file system of the victim.22   * ZLib has the ability to enumerate system information.22   * Kasidet has the ability to obtain a victim's system name and operating system version.23   * BlackEnergy has used Systeminfo to gather the OS version, as well as information on the system configuration, BIOS, the motherboard, and the processor.24 25   * Backdoor.Oldrea collects information about the OS, computer name, and Internet adapter configuration.26   * Systeminfo can be used to gather information about the operating system.27   * T9000 gathers and beacons the operating system build number and CPU Architecture (32-bit/64-bit) during installation.28   * cmd can be used to find information about the operating system.29   * A module in Prikormka collects information from the victim about Windows OS version, computer name, battery info, and physical memory.30   * Crimson contains a command to collect the victim PC name and operating system.31   * Pisloader has a command to collect victim system information, including the system name and OS version.32   * Remsec can obtain the OS version information, computer name, processor architecture, machine role, and OS edition.33   * Unknown Logger can obtain information about the victim computer name, physical memory, country, and date.34   * CORESHELL collects hostname, volume serial number and OS version data from the victim and sends the information to its C2 server.35   * PowerDuke has commands to get information about the victim's name, build, version, logical drives, drive type, free space, serial number, and memory usage.36   * Shamoon obtains the victim's operating system version and keyboard layout and sends the information to the C2 server.37   * StreamEx has the ability to enumerate system information.38   * ChChes collects the victim hostname, window resolution, and Microsoft Windows version.39   * RTM can obtain the computer name, OS version, and default language identifier.40   * MoonWind can obtain the victim hostname, Windows version, RAM amount, number of drives, and screen resolution.41  ## Mitigation  Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting42 tools, like AppLocker,4344 or Software Restriction Policies45 where appropriate.46  ## Detection  System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.  Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.  "
p68
sS'Service File Permissions Weakness'
p69
S'  T1044   Tactic|  Persistence, Privilege Escalation    Permissions Required|  User, Administrator   Effective Permissions|  User, Administrator, SYSTEM   Data Sources|  File monitoring, Process command-line parameters, Services   CAPEC ID|  CAPEC-17   Contributors|  Stefan Kanthak      Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher- level permissions, which could include SYSTEM.  Adversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.  ## Contents    * 1 Services   * 2 Executable Installers   * 3 Examples   * 4 Mitigation   * 5 Detection   * 6 References  ### Services  Manipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.  ### Executable Installers  Another variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the `%TEMP%` directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of DLL Search Order Hijacking. Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to Bypass User Account Control. Several examples of this weakness in existing common installers have been reported to software vendors.12  ## Examples    * One variant of BlackEnergy locates existing driver services that have been disabled and drops its driver component into one of those service\'s paths, replacing the legitimate executable. The malware then sets the hijacked service to start automatically to establish persistence.3  ## Mitigation  Use auditing tools capable of detecting file system permissions abuse opportunities on systems within an enterprise and correct them. Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service binary target path locations. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for service file system permissions weaknesses.4  Identify and block potentially malicious software that may be executed through abuse of file, directory, and service permissions by using whitelisting5 tools, like AppLocker,67 that are capable of auditing and/or blocking unknown programs. Deny execution from user directories such as file download directories and temp directories where able.2  Turn off UAC\'s privilege elevation for standard users and installer detection for all users by modifying registry key `[HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System]`to automatically deny elevation requests, add: `"ConsentPromptBehaviorUser"=dword:00000000`; to disable installer detection, add: `"EnableInstallerDetection"=dword:00000000`.2  ## Detection  Look for changes to binaries and service executables that may normally occur during software updates. If an executable is written, renamed, and/or moved to match an existing service executable, it could be detected and correlated with other suspicious behavior. Hashing of binaries and service executables could be used to detect replacement against historical data.  Look for abnormal process call trees from typical processes and services and for execution of other commands that could relate to Discovery or other adversary techniques.  '
p70
sS'Application Deployment Software'
p71
S'  T1017   Tactic|  Lateral Movement    System Requirements|  Access to application deployment software (EPO, HPCA, Altiris, etc.)   Data Sources|  File monitoring, Process use of network, Process monitoring   CAPEC ID|  CAPEC-187      Adversaries may deploy malicious software to systems within a network using application deployment systems employed by enterprise administrators. The permissions required for this action vary by system configuration; local credentials may be sufficient with direct access to the deployment server, or specific domain credentials may be required. However, the system may require an administrative account to log in or to perform software deployment.  Access to a network-wide or enterprise-wide software deployment system enables an adversary to have remote code execution on all systems that are connected to such a system. The access may be used to laterally move to systems, gather information, or cause a specific effect, such as wiping the hard drives on all endpoints.  ## Mitigation  Grant access to application deployment systems only to a limited number of authorized administrators. Ensure proper system and access isolation for critical network systems through use of firewalls, account privilege separation, group policy, and multifactor authentication. Verify that account credentials that may be used to access deployment systems are unique and not used throughout the enterprise network. Patch deployment systems regularly to prevent potential remote access through Exploitation of Vulnerability.  If the application deployment system can be configured to deploy only signed binaries, then ensure that the trusted signing certificates are not co-located with the application deployment system and are instead located on a system that cannot be accessed remotely or to which remote access is tightly controlled.  ## Detection  Monitor application deployments from a secondary system. Perform application deployment at regular times so that irregular deployment activity stands out. Monitor process activity that does not correlate to known good software. Monitor account login activity on the deployment system.  |  v ***** d ***** e  Adversary Techniques   ---   Persistence |    * Winlogon Helper DLL   * Local Port Monitor   * Accessibility Features   * Basic Input/Output System   * Shortcut Modification   * Modify Existing Service   * Path Interception   * Logon Scripts   * DLL Search Order Hijacking   * Change Default File Association   * File System Permissions Weakness   * New Service   * Scheduled Task   * Service Registry Permissions Weakness   * Registry Run Keys / Start Folder   * Hypervisor   * Bootkit   * Legitimate Credentials   * Windows Management Instrumentation Event Subscription   * Web Shell   * Security Support Provider   * AppInit DLLs   * Redundant Access   * Component Firmware   * Component Object Model Hijacking   * Netsh Helper DLL   * Authentication Package   * External Remote Services           Privilege Escalation |    * Local Port Monitor   * Accessibility Features   * Path Interception   * DLL Search Order Hijacking   * File System Permissions Weakness   * New Service   * Scheduled Task   * DLL Injection   * Service Registry Permissions Weakness   * Exploitation of Vulnerability   * Legitimate Credentials   * Bypass User Account Control   * Web Shell   * AppInit DLLs           Credential Access |    * Credential Dumping   * Network Sniffing   * Input Capture   * Exploitation of Vulnerability   * Credentials in Files   * Credential Manipulation   * Brute Force   * Two-Factor Authentication Interception           Discovery |    * System Service Discovery   * Application Window Discovery   * Query Registry   * Local Network Configuration Discovery   * Remote System Discovery   * System Owner/User Discovery   * Network Service Scanning   * Local Network Connections Discovery   * Process Discovery   * Security Software Discovery   * Permission Groups Discovery   * System Information Discovery   * File and Directory Discovery   * Account Discovery   * Peripheral Device Discovery   * System Time Discovery           Defense Evasion |    * File System Logical Offsets   * Binary Padding   * Rootkit   * Obfuscated Files or Information   * Masquerading   * DLL Search Order Hijacking   * Software Packing   * Indicator Blocking   * DLL Injection   * Scripting   * Indicator Removal from Tools   * Exploitation of Vulnerability   * Indicator Removal on Host   * DLL Side-Loading   * Legitimate Credentials   * Rundll32   * Bypass User Account Control   * Disabling Security Tools   * Process Hollowing   * NTFS Extended Attributes   * Timestomp   * File Deletion   * Redundant Access   * Component Firmware   * Modify Registry   * Code Signing   * Regsvr32   * InstallUtil   * Regsvcs/Regasm   * Component Object Model Hijacking   * Network Share Connection Removal   * MSBuild   * Install Root Certificate           Lateral Movement |    * **Application Deployment Software**   * Remote Services   * Windows Remote Management   * Logon Scripts   * Shared Webroot   * Exploitation of Vulnerability   * Third-party Software   * Pass the Hash   * Remote Desktop Protocol   * Windows Admin Shares   * Taint Shared Content   * Replication Through Removable Media   * Pass the Ticket   * Remote File Copy           Execution |    * Windows Remote Management   * Service Execution   * Windows Management Instrumentation   * Scheduled Task   * Command-Line Interface   * Graphical User Interface   * Scripting   * Third-party Software   * Rundll32   * PowerShell   * Process Hollowing   * Execution through API   * Regsvr32   * InstallUtil   * Regsvcs/Regasm   * MSBuild   * Execution through Module Load           Collection |    * Data from Local System   * Data from Removable Media   * Data from Network Shared Drive   * Input Capture   * Data Staged   * Screen Capture   * Email Collection   * Clipboard Data   * Automated Collection   * Audio Capture   * Video Capture           Exfiltration |    * Data Compressed   * Exfiltration Over Other Network Medium   * Automated Exfiltration   * Data Encrypted   * Scheduled Transfer   * Data Transfer Size Limits   * Exfiltration Over Command and Control Channel   * Exfiltration Over Alternative Protocol   * Exfiltration Over Physical Medium           Command and Control |    * Data Obfuscation   * Fallback Channels   * Custom Cryptographic Protocol   * Multiband Communication   * Standard Cryptographic Protocol   * Commonly Used Port   * Uncommonly Used Port   * Standard Application Layer Protocol   * Multilayer Encryption   * Connection Proxy   * Communication Through Removable Media   * Custom Command and Control Protocol   * Standard Non-Application Layer Protocol   * Web Service   * Multi-Stage Channels   * Remote File Copy   * Data Encoding           Retrieved from "https://attack.mitre.org/w/index.php?title=Technique/T1017&amp;oldid=6397"  Categories:    * Lateral Movement   * Technique  ## Navigation menu  ### Personal tools    * Log in  ### Namespaces    * Page   * Discussion  ### Variants  ### Views    * Read   * View form   * View source   * View history  ### More  ###  Search  ### Navigation    * Main page   * Help   * Contribute   * References  ### Tactics    * Persistence   * Privilege Escalation   * Defense Evasion   * Credential Access   * Discovery   * Lateral Movement   * Execution   * Collection   * Exfiltration   * Command and Control  ### Techniques    * All Techniques   * Technique Matrix  ### Groups    * All Groups  ### Software    * All Software  ### Tools    * What links here   * Related changes   * Special pages   * Printable version   * Permanent link   * Page information   * Browse properties    * This page was last modified on 1 July 2016, at 19:48.   * Copyright (C) 2017, The MITRE Corporation. ATT&amp;CK; and ATT&amp;CK; Matrix are trademarks of The MITRE Corporation    * Privacy policy   * Terms of Use    * ![The Mitre Corporation](/images/mitrelogo.png) ![Powered by MediaWiki](/w/resources/assets/poweredby_mediawiki_88x31.png) ![Powered by Semantic MediaWiki](/w/extensions/SemanticMediaWiki/includes/../res/images/smw_button.png)  '
p72
sS'Exfiltration Over Command and Control Channel'
p73
S'  T1041   Tactic|  Exfiltration    Data Sources|  User interface, Process monitoring   Requires Network|  Yes      Data exfiltration is performed over the Command and Control channel. Data is encoded into the normal communications channel using the same protocol as command and control communications.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Ke3chang transferred compressed and encrypted RAR files containing exfiltration through the established backdoor command and control channel during operations.1   * Lazarus Group malware IndiaIndia saves information gathered about the victim to a file that is uploaded to one of its 10 C2 servers.2   * After data is collected by Stealth Falcon malware, it is exfiltrated over the existing C2 channel.3   * A Gamaredon Group file stealer transfers collected files to a hardcoded C2 server.4   * Adversaries can direct BACKSPACE to upload files to the C2 Server.5   * NETEAGLE is capable of reading files over the C2 channel.5   * ADVSTORESHELL exfiltrates data over the same channel used for C2.6   * CallMe exfiltrates data to its C2 server over the same protocol as C2 communications.7   * Psylo exfiltrates data to its C2 server over the same protocol as C2 communications.7   * MobileOrder exfiltrates data to its C2 server over the same protocol as C2 communications.7   * Pteranodon exfiltrates screenshot files to its C2 server.4  ## Mitigation  Mitigations for command and control apply. Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool command and control signatures over time or construct protocols in such a way to avoid detection by common defensive tools.8  ## Detection  Detection for command and control applies. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.8  '
p74
sS'Web Shell'
p75
S"  T1100   Tactic|  Persistence, Privilege Escalation    System Requirements|  Adversary access to Web server with vulnerability or account to upload and serve the Web shell file.   Effective Permissions|  User, SYSTEM   Data Sources|  Anti-virus, File monitoring, Process monitoring, Authentication logs, Netflow/Enclave netflow      A Web shell is a Web script that is placed on an openly accessible Web server to allow an adversary to use the Web server as a gateway into a network. A Web shell may provide a set of functions to execute or a command-line interface on the system that hosts the Web server. In addition to a server-side script, a Web shell may have a client interface program that is used to talk to the Web server (see, for example, China Chopper Web shell client).1  Web shells may serve as Redundant Access or as a persistence mechanism in case an adversary's primary access methods are detected and removed.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Deep Panda uses Web shells on publicly accessible Web servers to access victim networks.2   * The China Chopper backdoor is a Web shell that supports server payloads for many different kinds of server-side scripting languages and contains functionality to access files, connect to a database, and open a virtual command prompt.1   * OwaAuth is a Web shell that appears to be exclusively used by Threat Group-3390.3 It is installed as an ISAPI filter on Exchange servers and shares characteristics with the China Chopper Web shell.3   * ASPXSpy is a Web shell.3 The ASPXTool version used by Threat Group-3390 has been deployed to accessible servers running Internet Information Services (IIS).3  ## Mitigation  Ensure that externally facing Web servers are patched regularly to prevent adversary access through Exploitation of Vulnerability to gain remote code access or through file inclusion weaknesses that may allow adversaries to upload files or scripts that are automatically served as Web pages.  Audit account and group permissions to ensure that accounts used to manage servers do not overlap with accounts and permissions of users in the internal network that could be acquired through Credential Access and used to log into the Web server and plant a Web shell or pivot from the Web server into the internal network.4  ## Detection  Web shells can be difficult to detect. Unlike other forms of persistent remote access, they do not initiate connections. The portion of the Web shell that is on the server may be small and innocuous looking. The PHP version of the China Chopper Web shell, for example, is the following short payload:1  `<?php @eval($_POST['password']);>`  Nevertheless, detection mechanisms exist. Process monitoring may be used to detect Web servers that perform suspicious actions such as running cmd or accessing files that are not in the Web directory. File monitoring may be used to detect changes to files in the Web directory of a Web server that do not match with updates to the Web server's content and may indicate implantation of a Web shell script. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network.4  "
p76
sS'Input Capture'
p77
S'  T1056   Tactic|  Collection, Credential Access    Permissions Required|  Administrator, SYSTEM   Data Sources|  Windows Registry, Kernel drivers, Process monitoring, API monitoring   CAPEC ID|  CAPEC-569   Contributors|  John Lambert, Microsoft Threat Intelligence Center      Adversaries can use methods of capturing user input for obtaining credentials for Legitimate Credentials and information Collection that include keylogging and user input field interception.  Keylogging is the most prevalent type of input capture, with many different ways of intercepting keystrokes,1 but other methods exist to target information for specific purposes, such as performing a UAC prompt or wrapping the Windows default credential provider.2  Keylogging is likely to be used to acquire credentials for new access opportunities when Credential Dumping efforts are not effective, and may require an adversary to remain passive on a system for a period of time before an opportunity arises.  Adversaries may also install code on externally facing portals, such as a VPN login page, to capture and transmit credentials of users who attempt to log into the service. This variation on input capture may be conducted post- compromise using legitimate administrative access as a backup measure to maintain network access through External Remote Services and Legitimate Credentials or as part of the initial compromise by exploitation of the externally facing web service.3  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * APT28 can deploy a tool to perform keylogging.4   * Darkhotel uses a sophisticated keylogger.5   * APT3 has used a keylogging tool that records keystrokes in encrypted files.6   * Threat Group-3390 actors installed a credential logger on Microsoft Exchange servers.7   * Lazarus Group malware KiloAlfa contains keylogging functionality.8   * Malware used by Group5 is capable of capturing keystrokes.9   * TinyZBot contains keylogger functionality.10   * PoisonIvy contains a keylogger.11   * Sykipot contains keylogging functionality to steal passwords.12   * Regin contains a keylogger.13   * CHOPSTICK is capable of performing keylogging.1415   * Carbanak contains keylogger functionality.16   * The gh0st RAT has a keylogger.17   * NetTraveler contains a keylogger.18   * Duqu can track key presses with a keylogger module.19   * ADVSTORESHELL can perform keylogging.1520   * CosmicDuke uses a keylogger and steals clipboard contents from victims.21   * SslMM creates a new thread implementing a keylogging facility using Windows Keyboard Accelerators.22   * DustySky contains a keylogger.23   * HTTPBrowser is capable of capturing keystrokes on victims.7   * OwaAuth captures and DES-encrypts credentials before writing the username and password to a log file, C:\\log.txt.7   * FakeM contains a keylogger module.24   * Kasidet has the ability to initiate keylogging.25   * BlackEnergy has run a keylogger plug-in on a victim.26   * Rover has keylogging functionality.27   * Prikormka contains a keylogger module that collects keystrokes and the titles of foreground windows.28   * Remsec contains a keylogger component.2930   * When it first starts, BADNEWS spawns a new thread to log keystrokes.31   * Unknown Logger is capable of recording keystrokes.31   * RTM can record keystrokes from both the keyboard and virtual keyboard.32   * MoonWind has a keylogger.33  ## Mitigation  Identify and block potentially malicious software that may be used to acquire credentials or information from the user by using whitelisting34 tools, like AppLocker,3536 or Software Restriction Policies37 where appropriate.38  In cases where this behavior is difficult to detect or mitigate, efforts can be made to lessen some of the impact that might result from an adversary acquiring credential information. It is also good practice to follow mitigation recommendations for adversary use of Legitimate Credentials.  ## Detection  Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include SetWindowsHook, GetKeyState, and GetAsynceyState.1 Monitor the Registry and file system for such changes and detect driver installs, as well as looking for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.  Monitor the Registry for the addition of a Custom Credential Provider.2 Detection of compromised Legitimate Credentials in use by adversaries may help to catch the result of user input interception if new techniques are used.  '
p78
sS'Pass the Hash'
p79
S"  T1075   Tactic|  Lateral Movement    System Requirements|  Requires Microsoft Windows as target system   Data Sources|  Authentication logs      Pass the hash (PtH)1 is a method of authenticating as a user without having access to the user's cleartext password. This method bypasses standard authentication steps that require a cleartext password, moving directly into the portion of the authentication that uses the password hash. In this technique, valid password hashes for the account being used are captured using a Credential Access technique. Captured hashes are used with PtH to authenticate as that user. Once authenticated, PtH may be used to perform actions on local or remote systems.  Windows 7 and higher with KB2871997 require valid domain user credentials or RID 500 administrator hashes.2  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * The APT1 group is known to have used pass the hash.3   * APT28 has used pass the hash for lateral movement.4   * APT29 used Kerberos ticket attacks for lateral movement.5   * Pass-The-Hash Toolkit can perform pass the hash.3  ## Mitigation  Monitor systems and domain logs for unusual credential logon activity. Prevent access to Legitimate Credentials. Apply patch KB2871997 to Windows 7 and higher systems to limit the default access of accounts in the local administrator group. Limit credential overlap across systems to prevent the damage of credential compromise and reduce the adversary's ability to perform Lateral Movement between systems. Ensure that built-in and created local administrator accounts have complex, unique passwords. Do not allow a domain user to be in the local administrator group on multiple systems.  ## Detection  Audit all logon and credential use events and review for discrepancies. Unusual remote logins that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity. NTLM LogonType 3 authentications that are not associated to a domain login and are not anonymous logins are suspicious.  "
p80
sS'Automated Exfiltration'
p81
S'  T1020   Tactic|  Exfiltration    Data Sources|  File monitoring, Process monitoring, Process use of network   Requires Network|  Yes      Data, such as sensitive documents, may be exfiltrated through the use of automated processing or Scripting after being gathered during Collection.  When automated exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such as Exfiltration Over Command and Control Channel and Exfiltration Over Alternative Protocol.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * CosmicDuke exfiltrates collected files automatically over FTP to remote servers.1   * Rover automatically searches for files on local drives based on a predefined list of file extensions and sends them to the command and control server every 60 minutes. Rover also automatically sends keylogger files and screenshots to the C2 server on a regular timeframe.2   * When a document is found matching one of the extensions in the configuration, TINYTYPHON uploads it to the C2 server.3   * USBStealer automatically exfiltrates collected files via removable media when an infected device is connected to the second victim after receiving commands from the first victim.4  ## Mitigation  Identify unnecessary system utilities, scripts, or potentially malicious software that may be used to transfer data outside of a network, and audit and/or block them by using whitelisting5 tools, like AppLocker,67 or Software Restriction Policies8 where appropriate.9  ## Detection  Monitor process file access patterns and network behavior. Unrecognized processes or scripts that appear to be traversing file systems and sending network traffic may be suspicious.  '
p82
sS'Code Signing'
p83
S'  T1116   Tactic|  Defense Evasion    Data Sources|  Binary file metadata   Defense Bypassed|  Windows User Account Control      Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with.1 However, adversaries are known to use code signing certificates to masquerade malware and tools as legitimate binaries. The certificates used during an operation may be created, forged, or stolen by the adversary.23  Code signing certificates may be used to bypass security policies that require signed code to execute on a system.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Darkhotel has used code-signing certificates on its malware that are either forged due to weak keys or stolen.4   * Molerats has used forged Microsoft code-signing certificates on malware.5   * Suckfly has used stolen certificates to sign its malware.6   * Winnti Group used stolen certificates to sign its malware.7   * Regin stage 1 modules for 64-bit systems have been found to be signed with fake certificates masquerading as originating from Microsoft Corporation and Broadcom Corporation.8   * Turla has used valid digital certificates from Sysprint AG to sign its Epic dropper.9   * ChChes samples were digitally signed with a certificate originally used by Hacking Team that was later leaked and subsequently revoked.1011   * RTM samples have been signed with a code-signing certificates.12  ## Mitigation  Process whitelisting and trusted publishers to verify authenticity of software can help prevent signed malicious or untrusted code from executing on a system.13142  ## Detection  Collect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers.  '
p84
sS'Query Registry'
p85
S"  T1012   Tactic|  Discovery    Permissions Required|  User, Administrator, SYSTEM   Data Sources|  Windows Registry, Process monitoring, Process command-line parameters      Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.  The Registry contains a significant amount of information about the operating system, configuration, software, and security.1 Some of the information may help adversaries to further their operation within a network.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Turla surveys a system upon check-in to discover information in the Windows Registry with the reg query command.2   * Lazarus Group malware IndiaIndia checks Registry keys within HKCU and HKLM to determine if certain applications are present, including SecureCRT, Terminal Services, RealVNC, TightVNC, UltraVNC, Radmin, mRemote, TeamViewer, FileZilla, pcAnyware, and Remote Desktop.3   * Stealth Falcon malware attempts to determine the installed version of .NET by querying the Registry.4   * PlugX can query for information contained within the Windows Registry.5   * CHOPSTICK provides access to the Windows Registry, which can be used to gather information.6   * BACKSPACE is capable of enumerating and making modifications to an infected system's Registry.7   * ADVSTORESHELL can enumerate registry keys.89   * Reg may be used to gather details from the Windows Registry of a local or remote system at the command-line interface.10   * Shamoon queries several Registry keys to identify hard disk partitions to overwrite.11   * POWERSOURCE queries Registry keys in preparation for setting Run keys to achieve persistence.12  ## Mitigation  Identify unnecessary system utilities or potentially malicious software that may be used to acquire information within the Registry, and audit and/or block them by using whitelisting13 tools, like AppLocker,1415 or Software Restriction Policies16 where appropriate.17  ## Detection  System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.  Interaction with the Windows Registry may come from the command line using utilities such as Reg or through running malware that may interact with the Registry through an API. Command-line invocation of utilities used to query the Registry may be detected through process and command-line monitoring. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.  "
p86
sS'Obfuscated Files or Information'
p87
S'  T1027   Tactic|  Defense Evasion    Data Sources|  Network protocol analysis, Process use of network, Binary file metadata, File monitoring, Malware reverse engineering   Defense Bypassed|  Host forensic analysis, Signature-based detection, Host intrusion prevention systems      Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system.  ## Examples    * APT28 encrypted a .dll payload using RTL and a custom encryption algorithm.1   * Droppers used by Putter Panda use RC4 or a 16-byte XOR key consisting of the bytes 0xA0  0xAF to obfuscate payloads.2   * Dust Storm has encoded payloads with a single-byte XOR, both skipping the key itself and zeroing in an attempt to avoid exposing the key.3   * Lazarus Group malware uses multiple types of encryption and encoding in its malware files, including AES, Caracachs, RC4, basic XOR with constant 0xA7, and other techniques.456   * Group5 disguised its malicious binaries with several layers of obfuscation, including encrypting the files.7   * Many strings in JHUHUGIT are obfuscated with a XOR algorithm.89   * Most of the strings in ADVSTORESHELL are encrypted with an XOR-based algorithm; some strings are also encrypted with 3DES and reversed. API function names are also reversed, presumably to avoid detection in memory.101   * The payload of CozyCar is encrypted with simple XOR with a rotating key. The CozyCar configuration file has been encrypted with RC4 keys.11   * The DustySky dropper uses a function to obfuscate the name of functions and other parts of the malware.12   * SHOTPUT is obscured using XOR encoding and appended to a valid GIF file.1314   * HTTPBrowser\'s code may be obfuscated through structured exception handling and return-oriented programming.15   * Sakula uses single-byte XOR obfuscation to obfuscate many of its files.16   * Elise encrypts several of its files, including configuration files.17   * Variants of Emissary encrypt payloads using various XOR ciphers, as well as a custom algorithm that uses the "srand" and "rand" functions.1819   * Hi-Zor uses various XOR techniques to obfuscate its components.20   * Some resources in Prikormka are encrypted with a simple XOR operation or encoded with Base64.21   * A version of XTunnel introduced in July 2015 obfuscated the binary using opaque predicates and other techniques in a likely attempt to obfuscate it and bypass security products.22   * Pisloader obfuscates files by splitting strings into smaller sub-strings and including "garbage" strings that are never used. The malware also uses return-oriented programming (ROP) technique and single-byte XOR to obfuscate data.23   * Some data in Remsec is encrypted using RC5 in CBC mode, AES-CBC with a hardcoded key, RC4, or Salsa20. Some data is also base64-encoded.2425   * TINYTYPHON has used XOR with 0x90 to obfuscate its configuration file.26   * H1N1 uses multiple techniques to obfuscate strings, including XOR.27   * Most strings in USBStealer are encrypted using 3DES and XOR and reversed.28   * CORESHELL obfuscates strings using a custom stream cipher.29   * OLDBAIT obfuscates internal strings and unpacks them at startup.29   * PowerDuke uses an alternate data stream (ADS) PNG file to hide and encrypt itself using Tiny Encryption Algorithm (TEA).30   * Shamoon contains base64-encoded strings.31   * StreamEx obfuscates some commands by using statically programmed fragments of strings when starting a DLL. It also uses a one-byte xor against 0x91 to encode configuration data.32   * If the victim is using PowerShell 3.0 or later, POWERSOURCE writes its decoded payload to an Alternate Data Stream (ADS) named kernel32.dll that is saved in%PROGRAMDATA%\\Windows\\\\.33   * RTM strings, network data, configuration, and modules are encrypted with a modified RC4 algorithm.34  ## Detection  Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).  '
p88
sS'Communication Through Removable Media'
p89
S"  T1092   Tactic|  Command and Control    Data Sources|  File monitoring, Data loss prevention   Requires Network|  No      Adversaries can perform command and control between compromised hosts on potentially disconnected networks using removable media to transfer commands from system to system. Both systems would need to be compromised, with the likelihood that an Internet-connected system was compromised first and the second through lateral movement by Replication Through Removable Media. Commands and files would be relayed from the disconnected system to the Internet-connected system to which the adversary has direct access.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * APT28 uses a tool that captures information from air-gapped computers via an infected USB and transfers it to network-connected computer when the USB is inserted.1   * Part of APT28's operation involved using CHOPSTICK modules to copy itself to air-gapped machines, using files written to USB sticks to transfer data and command traffic.231   * USBStealer drops commands for a second victim onto a removable media drive inserted into the first victim, and commands are executed when the drive is inserted into the second victim.4  ## Mitigation  Disable Autorun if it is unnecessary.5 Disallow or restrict removable media at an organizational policy level if they are not required for business operations.6  ## Detection  Monitor file access on removable media. Detect processes that execute when removable media is mounted.  "
p90
sS'Component Firmware'
p91
S'  T1109   Tactic|  Defense Evasion, Persistence    System Requirements|  Ability to update component device firmware from the host operating system.   Permissions Required|  SYSTEM   Defense Bypassed|  Anti-virus, File monitoring, Host intrusion prevention systems      Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to Basic Input/Output System but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.  ## Examples    * The Equation group is known to have the capability to overwrite the firmware on hard drives from some manufacturers.1  '
p92
sS'Redundant Access'
p93
S"  T1108   Tactic|  Defense Evasion, Persistence    Permissions Required|  User, Administrator, SYSTEM   Data Sources|  Process monitoring, Process use of network, Packet capture, Network protocol analysis, File monitoring, Binary file metadata, Authentication logs   Defense Bypassed|  Anti-virus, Network intrusion detection system      Adversaries may use more than one remote access tool with varying command and control protocols as a hedge against detection. If one type of tool is detected and blocked or removed as a response but the organization did not gain a full understanding of the adversary's tools and access, then the adversary will be able to retain access to the network. Adversaries may also attempt to gain access to Legitimate Credentials to use External Remote Services such as external VPNs as a way to maintain access despite interruptions to remote access tools deployed within a target network.1  Use of a Web Shell is one such way to maintain access to a network through an externally accessible Web server.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * 3PARA RAT will sleep until after a date/time value loaded from a .dat file has passed. This allows the RAT to remain dormant until a set date, which could allow a means to regain access if other parts of the actors' toolset are removed from a victim.2  ## Mitigation  Identify and block potentially malicious software that may be used as a remote access tool, and audit and/or block it by using whitelisting3 tools, like AppLocker,45 or Software Restriction Policies6 where appropriate.7  Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.8  ## Detection  Existing methods of detecting remote access tools are helpful. Backup remote access tools or other access points may not have established command and control channels open during an intrusion, so the volume of data transferred may not be as high as the primary channel unless access is lost.  Detection of tools based on beacon traffic, Command and Control protocol, or adversary infrastructure require prior threat intelligence on tools, IP addresses, and/or domains the adversary may use, along with the ability to detect use at the network boundary. Prior knowledge of indicators of compromise may also help detect adversary tools at the endpoint if tools are available to scan for those indicators.  If an intrusion is in progress and sufficient endpoint data or decoded command and control traffic is collected, then defenders will likely be able to detect additional tools dropped as the adversary is conducting the operation.  For alternative access using externally accessible VPNs or remote services, follow detection recommendations under Legitimate Credentials and External Remote Services to collect account use information.  "
p94
sS'Masquerading'
p95
S'  T1036   Tactic|  Defense Evasion    Data Sources|  File monitoring, Process monitoring, Binary file metadata   Defense Bypassed|  Whitelisting by file name or path   Contributors|  ENDGAME      Masquerading occurs when an executable, legitimate or malicious, is placed in a commonly trusted location (such as C:\\Windows\\System32) or named with a common name (such as "explorer.exe" or "svchost.exe") to bypass tools that trust executables by relying on file name or path. An adversary may even use a renamed copy of a legitimate utility, such as rundll32.exe.1 Masquerading also may be done to deceive defenders and system administrators into thinking a file is benign by associating the name with something that is thought to be legitimate.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * The file name AcroRD32.exe, a legitimate process name for Adobe\'s Acrobat Reader, was used by APT1 as a name for malware.2   * Carbanak malware names itself "svchost.exe," which is the name of the Windows shared service host program.3   * admin@338 actors used the following command to rename one of their tools to a benign file name: ren "%temp%\\upload" audiodg.exe4   * Poseidon Group tools attempt to spoof anti-virus processes as a means of self-defense.5   * Patchwork installed its payload in the startup programs folder as "Baidu Software Update." The group also adds its second stage payload to the startup programs as Net Monitor."6   * To establish persistence, SslMM identifies the Start Menu Startup directory and drops a link to its own executable disguised as an Office Start, Yahoo Talk, MSN Gaming Z0ne, or MSN Talk shortcut.7   * HTTPBrowser\'s installer contains a malicious file named navlu.dll to decrypt and run the RAT. navlu.dll is also the name of a legitimate Symantec DLL.8   * OwaAuth uses the filename owaauth.dll, which is a legitimate file that normally resides in%ProgramFiles%\\Microsoft\\Exchange Server\\ClientAccess\\Owa\\Auth\\; the malicious file by the same name is saved in%ProgramFiles%\\Microsoft\\Exchange Server\\ClientAccess\\Owa\\bin\\\\.9   * If installing itself as a service fails, Elise instead writes itself as a file named svchost.exe saved in%APPDATA%\\Microsoft\\Network.10   * Misdat saves itself as a file named msdtc.exe, which is also the name of the legitimate Microsoft Distributed Transaction Coordinator service.1112   * Mis-Type saves itself as a file named msdtc.exe, which is also the name of the legitimate Microsoft Distributed Transaction Coordinator service.1112   * S-Type may save itself as a file named msdtc.exe, which is also the name of the legitimate Microsoft Distributed Transaction Coordinator service.1112   * ZLib mimics the resource version information of legitimate Realtek Semiconductor, Nvidia, or Synaptics modules.11   * Nidiran can create a new service named msamger (Microsoft Security Accounts Manager), which mimics the legitimate Microsoft database by the same name.1314   * The Remsec loader implements itself with the name Security Support Provider, a legitimate Windows function. Various Remsec .exe files mimic legitimate file names used by Microsoft, Symantec, Kaspersky, Hewlett-Packard, and VMWare.1516 Remsec also disguised malicious modules using similar filenames as custom network encryption software on victims.16   * USBStealer mimics a legitimate Russian program called USB Disk Security.17   * OLDBAIT installs itself in%ALLUSERPROFILE%\\\\\\Application Data\\Microsoft\\MediaPlayer\\updatewindws.exe; the directory name is missing a space and the file name is missing the letter "o."18   * Shamoon creates a new service named ntssrv that attempts to appear legitimate; the service\'s display name is Microsoft Network Realtime Inspection Service and its description is Helps guard against time change attempts targeting known and newly discovered vulnerabilities in network time protocols.19   * A Winnti implant file was named ASPNET_FILTER.DLL, mimicking the legitimate ASP.NET ISAPI filter DLL with the same name.20  ## Mitigation  When creating security rules, avoid exclusions based on file name or file path. Require signed binaries. Use file system access controls to protect folders such as C:\\Windows\\System32. Use tools that restrict program execution via whitelisting by attributes other than file name.  Identify potentially malicious software that may look like a legitimate program based on name and location, and audit and/or block it by using whitelisting21 tools like AppLocker2223 or Software Restriction Policies24 where appropriate.25  ## Detection  Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.  If file names are mismatched between the binary name on disk and the binary\'s resource section, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries could provide useful leads, but may not always be indicative of malicious activity.1  '
p96
sS'Registry Run Keys / Start Folder'
p97
S'  T1060   Tactic|  Persistence    Permissions Required|  User, Administrator   Data Sources|  Windows Registry, File monitoring   CAPEC ID|  CAPEC-270      Adding an entry to the "run keys" in the Registry or startup folder will cause the program referenced to be executed when a user logs in.1 The program will be executed under the context of the user and will have the account\'s associated permissions level.  Adversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use Masquerading to make the Registry entries look as if they are associated with legitimate programs.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Darkhotel has been known to establish persistence by adding programs to the Run Registry key.2   * APT29 added Registry Run keys to establish persistence.3   * A dropper used by Putter Panda installs itself into the ASEP Registry key HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run with a value named McUpdate.4   * Lazarus Group malware RomeoAlfa maintains persistence by saving itself in the Start menu folder.5   * FIN6 has used Registry Run keys to establish persistence for its downloader tools known as HARDTACK and SHIPBREAD.6   * Patchwork added the path of its second-stage malware to the startup folder to achieve persistence.7   * TinyZBot can create a shortcut in the Windows startup folder for persistence.8   * PlugX can add a Run key entry in the Registry to establish persistence.9   * Sykipot has been known to establish persistence by adding programs to the Run Registry key.10   * SHIPSHAPE achieves persistence by creating a shortcut in the Startup folder.11   * BACKSPACE achieves persistence by creating a shortcut to itself in the CSIDL_STARTUP directory.11   * The "SCOUT" variant of NETEAGLE achieves persistence by adding itself to the HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run Registry key.11   * SPACESHIP achieves persistence by creating a shortcut in the current user\'s Startup folder.11   * FLASHFLOOD achieves persistence by making an entry in the Registry\'s Run key.11   * JHUHUGIT has used a Registry Run key to establish persistence by executing JavaScript code within the rundll32.exe process.12   * ADVSTORESHELL achieves persistence by adding itself to the HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run Registry key.131415   * One persistence mechanism used by CozyCar is to set itself to be executed at system startup by adding a Registry value under one of the following Registry keys: HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\ HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\ HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run16   * SeaDuke is capable of persisting via the Registry Run key.17   * To establish persistence, SslMM identifies the Start Menu Startup directory and drops a link to its own executable disguised as an Office Start, Yahoo Talk, MSN Gaming Z0ne, or MSN Talk shortcut.18   * DustySky achieves persistence by creating a Registry entry in HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run.19   * HTTPBrowser has established persistence by setting the HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run key value for wdm to the path of the executable.20 It has also used the Registry entry HKEY_USERS\\Software\\Microsoft\\Windows\\CurrentVersion\\Run vpdn %ALLUSERPROFILE%\\%APPDATA%\\vpdn\\VPDN_LU.exe to establish persistence.21   * Most Sakula samples maintain persistence by setting the Registry Run key SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\ in the HKLM or HKCU hive, with the Registry value and file name varying by sample.22   * Mivast creates the following Registry entry: HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\Micromedia.23   * If establishing persistence by installation as a new service fails, one variant of Elise establishes persistence for the created .exe file by setting the following Registry key: HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\svchost:%APPDATA%\\Microsoft\\Network\\svchost.exe. Other variants have set the following Registry key for persistence: HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\imejp: [self]. 24   * Variants of Emissary have added Run Registry keys to establish persistence.25   * S-Type may create a .lnk file to itself that is saved in the Start menu folder. It may also create the Registry key HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\ IMJPMIJ8.1{3 characters of Unique Identifier}.26   * Hi-Zor creates a Registry Run key to establish persistence.27   * Kasidet creates a Registry Run key to establish persistence.28 29   * The BlackEnergy 3 variant drops its main DLL component and then creates a .lnk shortcut to that file in the startup folder.30   * Rover persists by creating a Registry entry in HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\\\.31   * Backdoor.Oldrea adds Registry Run keys to achieve persistence.32   * Trojan.Karagany can create a link to itself in the Startup folder to automatically start itself upon system restart.32   * Prikormka adds itself to a Registry Run key with the name guidVGA or guidVSA.33   * Pisloader establishes persistence via a Registry Run key.34   * BBSRAT has been loaded through DLL side-loading of a legitimate Citrix executable that is set to persist through the registry run key location: HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\ssonsvr.exe   * BADNEWS installs a registry Run key to establish persistence.35   * TINYTYPHON installs itself under Registry Run key to establish persistence.35   * USBStealer registers itself under a Registry Run key with the name "USB Disk Security."36   * CORESHELL has established persistence by creating autostart extensibility point (ASEP) Registry entries in the Run key and other Registry keys, as well as by creating shortcuts in the Internet Explorer Quick Start folder.37   * PowerDuke achieves persistence by using various Registry Run keys.38   * POWERSOURCE achieves persistence by setting a Registry Run key, with the path depending on whether the victim account has user or administrator access.39   * Pteranodon copies itself to the Startup folder to establish persistence.40   * RTM tries to add a Registry Run key under the name "Windows Update" to establish persistence.41  ## Mitigation  Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting42 tools like AppLocker4344 or Software Restriction Policies45 where appropriate.46  ## Detection  Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys\' Registry locations and startup folders.47 Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.  Changes to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.  '
p98
sS'Remote System Discovery'
p99
S'  T1018   Tactic|  Discovery    Permissions Required|  User, Administrator, SYSTEM   Data Sources|  Network protocol analysis, Process command-line parameters, Process monitoring, Process use of network      Adversaries will likely attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used. Examples of tools and commands that acquire this information include "ping" or "net view" using Net.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Turla surveys a system upon check-in to discover remote systems on a local network using the net view and net view /DOMAIN commands.1   * FIN6 used publicly available tools (including Microsoft\'s built-in SQL querying tool, osql.exe) to map the internal network and conduct reconnaissance against Active Directory, Structured Query Language (SQL) servers, and NetBIOS.2   * Sykipot may use net view /domain to display hostnames of available systems on a network.3   * Commands such as net view can be used in Net to gather information about available remote systems.4   * SHOTPUT has a command to list all servers in the domain, as well as one to locate domain controllers on a domain.5   * Ping can be used to identify remote systems within a network.6   * Remsec can ping or traceroute a remote host.7   * Shamoon scans the C-class subnet of the IPs on the victim\'s interfaces.8  ## Mitigation  Identify unnecessary system utilities or potentially malicious software that may be used to acquire information on remotely available systems, and audit and/or block them by using whitelisting9 tools, like AppLocker,1011 or Software Restriction Policies12 where appropriate.13  ## Detection  System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.  Normal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.  '
p100
sS'Credential Manipulation'
p101
S'  T1098   Tactic|  Credential Access    Permissions Required|  Administrator   Data Sources|  Authentication logs, API monitoring      Account creation and manipulation may aid adversaries in maintaining access to credentials and certain permission levels within an environment. Manipulation could consist of creating new credentials, modifying permissions, adding or changing permission groups, modifying account settings, or modifying how authentication is performed. In order to create or manipulate accounts, the adversary must already have sufficient permissions on systems or the domain.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Lazarus Group malware WhiskeyDelta-Two contains a function that attempts to rename the administrators account.1   * The Mimikatz credential dumper has been extended to include Skeleton Key domain controller authentication bypass functionality.2   * Skeleton Key is used to patch an enterprise domain controller authentication process with a backdoor password. It allows adversaries to bypass the standard authentication system to use a defined password for all accounts authenticating to that domain controller.3   * Mis-Type may create a temporary user on the system named Lost_{Unique Identifier}.4   * S-Type may create a temporary user on the system named Lost_{Unique Identifier} with the password pond~!@6{Unique Identifier}.4   * Flame can create backdoor accounts with the login "HelpAssistant" with the Limbo module.5  ## Mitigation  Use multifactor authentication. Follow guidelines to prevent or limit adversary access to Legitimate Credentials.  Protect domain controllers by ensuring proper security configuration for critical servers. Configure access controls and firewalls to limit access to these systems. Do not allow domain administrator accounts to be used for day- to-day operations that may expose them to potential adversaries on unprivileged systems.  ## Detection  Monitor for creation or modification of accounts in correlation with other suspicious activity. Changes may occur at unusual times or from unusual systems.  Use of credentials may also occur at unusual times or to unusual systems or services and may correlate with other suspicious activity.  '
p102
sS'Change Default File Association'
p103
S"  T1042   Tactic|  Persistence    Permissions Required|  User, Administrator, SYSTEM   Data Sources|  Windows Registry, Process command-line parameters, Process monitoring   CAPEC ID|  CAPEC-556   Contributors|  Stefan Kanthak      When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access.12 Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened.  ## Mitigation  Direct mitigation of this technique is not recommended since it is a legitimate function that can be performed by users for software preferences. Follow Microsoft's best practices for file associations.3  Identify and block potentially malicious software that may be executed by this technique using whitelisting4 tools, like AppLocker,56 or Software Restriction Policies7 where appropriate.8  ## Detection  Collect and analyze changes to Registry keys that associate file extensions to default applications for execution and correlate with unknown process launch activity or unusual file types for that process.  User file association preferences are stored under ` [HKEY_CURRENT_USER]\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts` and override associations configured under `[HKEY_CLASSES_ROOT]`. Changes to a user's preference will occur under this entry's subkeys.  Also look for abnormal process call trees for execution of other commands that could relate to Discovery actions or other techniques.  "
p104
sS'Accessibility Features'
p105
S'  T1015   Tactic|  Persistence, Privilege Escalation    Permissions Required|  Administrator   Effective Permissions|  SYSTEM   Data Sources|  Windows Registry, File monitoring, Process monitoring   CAPEC ID|  CAPEC-558      Windows contains accessibility features that may be launched with a key combination before a user has logged in (for example, when the user is on the Windows logon screen). An adversary can modify the way these programs are launched to get a command prompt or backdoor without logging in to the system.  Two of these accessibility programs are `C:\\Windows\\System32\\utilman.exe`, launched when the Windows + U key combination is pressed, and `C:\\Windows\\System32\\sethc.exe`, launched when the shift key is pressed five times. The program "sethc.exe" is often referred to as sticky keys, and has been used by adversaries for unauthenticated access through a remote desktop login screen.1  Depending on the version of Windows, an adversary may take advantage of these features in different ways:  On Windows XP and Windows Server 2003/R2, the program (e.g., `C:\\Windows\\System32\\utilman.exe`) may be replaced with "cmd.exe" (or another program that provides backdoor access). Subsequently, pressing the appropriate key combination at the login screen while sitting at the keyboard or when connected over Remote Desktop Protocol will cause the replaced file to be executed with SYSTEM privileges.2  On Windows Vista and later as well as Windows Server 2008 and later, a Registry key may be modified that configures "cmd.exe," or another program that provides backdoor access, as a "debugger" for the accessibility program (e.g., "utilman.exe"). After the Registry is modified, pressing the appropriate key combination at the login screen while at the keyboard or when connected with RDP will cause the "debugger" program to be executed with SYSTEM privileges.2  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Axiom actors have been known to use the Sticky Keys replacement within RDP sessions to obtain persistence.3   * Deep Panda has used the sticky-keys technique to bypass the RDP login screen on remote systems during intrusions.4   * APT29 used sticky-keys to obtain unauthenticated, privileged console access.5   * PinchDuke collects user files from the compromised host.6  ## Mitigation  To use this technique remotely, an adversary must use it in conjunction with RDP. Ensure that Network Level Authentication is enabled to force the remote desktop session to authenticate before the session is created and the login screen displayed. It is enabled by default on Windows Vista and later.7  If possible, use a Remote Desktop Gateway to manage connections and security configuration of RDP within a network.8  Identify and block potentially malicious software that may be executed by an adversary with this technique by using whitelisting9 tools, like AppLocker,1011 or Software Restriction Policies12 where appropriate.13  ## Detection  Changes to accessibility utility binaries or binary paths that do not correlate with known software, patch cycles, etc., are suspicious. Command line invocation of tools capable of modifying the Registry for associated keys are also suspicious. Utility arguments and the binaries themselves should be monitored for changes. Monitor Registry keys within `HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options`.  '
p106
sS'Two-Factor Authentication Interception'
p107
S'  T1111   Tactic|  Credential Access    System Requirements|  Smart card Proxy: Use of smart cards for single or multifactor authentication to access to network resources. Attached smart card reader with card inserted.  Out-of-band one-time code: Access to the device, service, or communications to intercept the one-time code.  Hardware token: Access to the seed and algorithm of generating one-time codes.   Permissions Required|  Administrator, SYSTEM   Contributors|  John Lambert, Microsoft Threat Intelligence Center      Use of two- or multifactor authentication is recommended and provides a higher level of security than user names and passwords alone, but organizations should be aware of techniques that could be used to intercept and bypass these security mechanisms. Adversaries may target authentication mechanisms, such as smart cards, to gain access to systems, services, and network resources.  If a smart card is used for two-factor authentication (2FA), then a keylogger will need to be used to obtain the password associated with a smart card during normal use. With both an inserted card and access to the smart card password, an adversary can connect to a network resource using the infected system to proxy the authentication with the inserted hardware token.1  Other methods of 2FA may be intercepted and used by an adversary to authenticate. It is common for one-time codes to be sent via out-of-band communications (email, SMS). If the device and/or service is not secured, then it may be vulnerable to interception. Although primarily focused on by cyber criminals, these authentication mechanisms have been targeted by advanced actors.2  Other hardware tokens, such as RSA SecurID, require the adversary to have access to the physical device or the seed and algorithm in addition to the corresponding credentials.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Sykipot is known to contain functionality that enables targeting of smart card technologies to proxy authentication for connections to restricted network resources using detected hardware tokens.3  ## Mitigation  Remove smart cards when not in use. Protect devices and services used to transmit and receive out-of-band codes.  Identify and block potentially malicious software that may be used to intercept 2FA credentials on a system by using whitelisting4 tools, like AppLocker,56 or Software Restriction Policies7 where appropriate.8  ## Detection  Detecting use of proxied smart card connections by an adversary may be difficult because it requires the token to be inserted into a system; thus it is more likely to be in use by a legitimate user and blend in with other network behavior.  '
p108
sS'Pass the Ticket'
p109
S"  T1097   Tactic|  Lateral Movement    System Requirements|  Requires Microsoft Windows as a target system and Kerberos authentication enabled.   Data Sources|  Authentication logs      Pass the ticket (PtT)1 is a method of authenticating to a system using Kerberos tickets without having access to an account's password. Kerberos authentication can be used as the first step to lateral movement to a remote system.  In this technique, valid Kerberos tickets for Legitimate Credentials are captured by Credential Dumping. A user's service tickets or ticket granting ticket (TGT) may be obtained, depending on the level of access. A service ticket allows for access to a particular resource, whereas a TGT can be used to request service tickets from the Ticket Granting Service (TGS) to access any resource the user has privileges to access.23  Silver Tickets can be obtained for services that use Kerberos as an authentication mechanism and are used to generate tickets to access that particular resource and the system that hosts the resource (e.g., SharePoint).2  Golden Tickets can be obtained for the domain using the KRBTGT account NTLM hash, which enables generation of TGTs for any account in Active Directory.4  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Some SeaDuke samples have a module to use pass the ticket with Kerberos for authentication.5  ## Mitigation  Monitor domains for unusual credential logons. Limit credential overlap across systems to prevent the damage of credential compromise. Ensure that local administrator accounts have complex, unique passwords. Do not allow a user to be a local administrator for multiple systems. Limit domain admin account permissions to domain controllers and limited servers. Delegate other admin functions to separate accounts.2  Attempt to identify and block unknown or malicious software that could be used to obtain Kerberos tickets and use them to authenticate by using whitelisting6 tools, like AppLocker,78 or Software Restriction Policies9 where appropriate.10  ## Detection  Audit all Kerberos authentication and credential use events and review for discrepancies. Unusual remote authentication events that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity.  "
p110
sS'DLL Side-Loading'
p111
S"  T1073   Tactic|  Defense Evasion    Data Sources|  Process use of network, Process monitoring, Loaded DLLs   Defense Bypassed|  Anti-virus, Process whitelisting      Programs may specify DLLs that are loaded at runtime. Programs that improperly or vaguely specify a required DLL may be open to a vulnerability in which an unintended DLL is loaded. Side-loading vulnerabilities specifically occur when Windows Side-by-Side (WinSxS) manifests1 are not explicit enough about characteristics of the DLL to be loaded. Adversaries may take advantage of a legitimate program that is vulnerable to side-loading to load a malicious DLL.2  Adversaries likely use this technique as a means of masking actions they perform under a legitimate, trusted system or software process.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Threat Group-3390 actors use DLL side-loading. Actors have used legitimate Kaspersky anti-virus variants in which the DLL acts as a stub loader that loads and executes the shell code.3   * PlugX is known to use DLL side-loading to evade anti-virus and to maintain persistence on a victim.243   * HTTPBrowser has used DLL side-loading.3   * OwaAuth has been loaded onto Exchange servers and disguised as an ISAPI filter (DLL file). The IIS w3wp.exe process then loads the malicious DLL.3   * Sakula uses DLL side-loading, typically using a digitally signed sample of Kaspersky Anti-Virus (AV) 6.0 for Windows Workstations or McAfee's Outlook Scan About Box to load malicious DLL files.5   * During the T9000 installation process, it drops a copy of the legitimate Microsoft binary igfxtray.exe. The executable contains a side-loading weakness which is used to load a portion of the malware.6   * DLL side-loading has been used to execute BBSRAT through a legitimate Citrix executable ssonsvr.exe which is vulnerable to the technique. The Citrix executable was dropped along with BBSRAT by the dropper.7   * BADNEWS typically loads its DLL file into a legitimate signed Java executable.8  ## Mitigation  Update software regularly. Install software in write-protected locations. Use the program sxstrace.exe that is included with Windows along with manual inspection to check manifest files for side-loading vulnerabilities in software.  ## Detection  Monitor processes for unusual activity (e.g., a process that does not use the network begins to do so). Track DLL metadata, such as a hash, and compare DLLs that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.  "
p112
sS'NTFS Extended Attributes'
p113
S'  T1096   Tactic|  Defense Evasion    System Requirements|  NTFS partitioned hard drive   Data Sources|  File monitoring, Kernel drivers   Defense Bypassed|  Signature-based detection, Anti-virus, Host forensic analysis      Data or executables may be stored in New Technology File System (NTFS) partition metadata instead of directly in files. This may be done to evade some defenses, such as static indicator scanning tools and anti-virus.1  The NTFS format has a feature called Extended Attributes (EA), which allows data to be stored as an attribute of a file or folder.2  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * The Regin malware platform uses Extended Attributes to store encrypted executables.3   * Some variants of the Zeroaccess Trojan have been known to store data in Extended Attributes.4  ## Mitigation  It may be difficult or inadvisable to block access to EA. Efforts should be focused on preventing potentially malicious software from running. Identify and block potentially malicious software that may contain functionality to hide information in EA by using whitelisting5 tools like AppLocker67 or Software Restriction Policies8 where appropriate.9  ## Detection  Forensic techniques exist to identify information stored in EA.1 It may be possible to monitor NTFS for writes or reads to NTFS EA or to regularly scan for the presence of modified information.  '
p114
sS'File and Directory Discovery'
p115
S'  T1083   Tactic|  Discovery    System Requirements|  Some folders may require Administrator, SYSTEM or specific user   Permissions Required|  User, Administrator, SYSTEM   Data Sources|  File monitoring, Process command-line parameters, Process monitoring      Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Example utilities used to obtain this information are `dir` and `tree`.1 Custom tools may also be used to gather file and directory information and interact with the Windows API.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Ke3chang uses command-line interaction to search files and directories.2   * Turla surveys a system upon check-in to discover files in specific locations on the hard disk%TEMP% directory, the current user\'s desktop, and in the Program Files directory.3   * admin@338 actors used the following commands after exploiting a machine with LOWBALL malware to obtain information about files and directories: ** dir c:\\ &gt;&gt;%temp%\\download ** dir "c:\\Documents and Settings" &gt;&gt;%temp%\\download ** dir "c:\\Program Files\\" &gt;&gt;%temp%\\download ** dir d:\\ &gt;&gt;%temp%\\download4   * Dust Storm has used Android backdoors capable of enumerating specific files on the infected devices.5   * Several Lazarus Group malware samples use a common function to identify target files by their extension. Lazarus Group malware families also enumerate files and directories on lettered drives.6   * A Patchwork payload has searched all fixed drives on the victim for files matching a specified list of extensions.7   * Derusbi is capable of obtaining a directory listing.8   * An older version of CHOPSTICK has a module that monitors all mounted volumes for files with the extensions .doc, .docx, .pgp, .gpg, .m2f, or .m2o.9   * BACKSPACE allows adversaries to search for files.10   * NETEAGLE allows adversaries to enumerate and modify the infected host\'s file system. It supports searching for directories, creating directories, listing directory contents, reading and writing to files, retrieving file attributes, and retrieving volume information.10   * SPACESHIP identifies files and directories for collection by searching for specific file extensions or file modification time.10   * FLASHFLOOD searches for interesting files (either a default or customized set of file extensions) on the local system and removable media.10   * ADVSTORESHELL can list files and directories.911   * PinchDuke searches for files created within a certain timeframe and whose file extension matches a predefined list.12   * GeminiDuke collects information from the victim, including installed drivers, programs previously executed by users, programs and services configured to automatically run at startup, files and folders present in any user\'s home folder, files and folders present in any user\'s My Documents, programs installed to the Program Files folder, and recently accessed files, folders, and programs.12   * CosmicDuke searches attached and mounted drives for file extensions and keywords that match a predefined list.13   * RARSTONE obtains installer properties from Uninstall Registry Key entries to obtain information about installed applications and how to uninstall certain applications.14   * WinMM sets a WH_CBT Windows hook to search for and capture files on the victim.15   * DustySky scans the victim for files that contain certain keywords from a list that is obtained from the C2 as a text file. It also collects information about installed software.16   * SHOTPUT has a command to obtain a directory listing.17   * ELMER is capable of performing directory listings.18   * 4H RAT has the capability to obtain file and directory listings.19   * 3PARA RAT has a command to retrieve metadata for files on disk as well as a command to list the current working directory.19   * BLACKCOFFEE has the capability to enumerate files.20   * HTTPBrowser is capable of listing files, folders, and drives on a victim.2122   * OwaAuth has a command to list its directory and logical drives.21   * Psylo has commands to enumerate all storage devices and to find all files that start with a particular string.23   * MobileOrder has a command to upload to its C2 server information about files on the victim mobile device, including SD card size, installed app list, browser bookmarks, SMS content, contacts, and calling history.23   * A variant of Elise executes dir C:\\progra~1 when initially run.24   * Misdat is capable of running commands to obtain a list of files and directories, as well as enumerating logical drives.5   * ZLib has the ability to enumerate files and drives.5   * Kasidet has the ability to search for a given filename on a victim.25   * BlackEnergy gathers a list of installed apps from the uninstall program Registry. It also gathers registered mail, browser, and instant messaging clients from the Registry.26 BlackEnergy has searched for given file types.27   * Rover automatically searches for files on local drives based on a predefined list of file extensions.28   * Backdoor.Oldrea collects information about available drives, default browser, desktop file list, My Documents, Internet history, program files, and root of available drives. It also searches for ICS-related software files.29   * cmd can be used to find files and directories with native functionality such as dir commands.30   * A module in Prikormka collects information about the paths, size, and creation time of files with specific file extensions, but not the actual content of the file.31   * Crimson contains commands to list files and directories, as well as search for files matching certain extensions from a defined list.32   * Pisloader has commands to list drives on the victim machine and to list file information for a given directory.33   * Remsec is capable of listing contents of folders on the victim.3435 Remsec also searches for custom network encryption software on victims.36   * BBSRAT can list file and directory information.37   * AutoIt is capable of identifying documents on the victim with the following extensions: .doc; .pdf, .csv, .ppt, .docx, .pst, .xls, .xlsx, .pptx, and .jpeg.38   * TINYTYPHON searches through the drive containing the OS, then all drive letters C through to Z, for documents matching certain extensions.38   * USBStealer searches victim drives for files matching certain extensions (.skr,.pkr or .key) or names.3940   * PowerDuke has commands to get its current directory name as well as the size of a file.41   * Shamoon attempts to access the ADMIN$, C$\\Windows, D$\\Windows, and E$\\Windows shares on the victim with its current privileges.42   * StreamEx has the ability to enumerate drive types.43   * ChChes identifies the file path for the%TEMP% director and sets its current working directory to that path.44   * Pteranodon identifies files matching certain file extension and copies them to subdirectories it created.45   * RTM can scan victim drives to look for specific banking software on the machine to determine next actions. It also looks at browsing history and open tabs for specific strings.46   * ... further results  ## Mitigation  File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting47 tools, like AppLocker,148 or Software Restriction Policies49 where appropriate.50  ## Detection  System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained.  Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.  '
p116
sS'Multilayer Encryption'
p117
S'  T1079   Tactic|  Command and Control    Data Sources|  Packet capture, Process use of network, Malware reverse engineering, Process monitoring   Requires Network|  Yes      An adversary performs C2 communications using multiple layers of encryption, typically (but not exclusively) tunneling a custom encryption scheme within a protocol encryption scheme such as HTTPS or SMTPS.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Sykipot communicates using HTTPS and uses a custom encryption cipher to encrypt the HTTPS message body.1   * Hi-Zor encrypts C2 traffic with HTTPS and also encodes it with a single-byte XOR key.2  ## Mitigation  Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Use of encryption protocols may make typical network-based C2 detection more difficult due to a reduced ability to signature the traffic. Prior knowledge of adversary C2 infrastructure may be useful for domain and IP address blocking, but will likely not be an effective long-term solution because adversaries can change infrastructure often.3  ## Detection  If malware uses Standard Cryptographic Protocol, SSL/TLS inspection can be used to detect command and control traffic within some encrypted communication channels.4 SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.5 After SSL/TLS inspection, additional cryptographic analysis may be needed to analyze the second layer of encryption.  With Custom Cryptographic Protocol, if malware uses encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.6  In general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.3  '
p118
sS'File Deletion'
p119
S'  T1107   Tactic|  Defense Evasion    Permissions Required|  User   Data Sources|  File monitoring, Binary file metadata, Process command-line parameters   Defense Bypassed|  Host forensic analysis   Contributors|  Walker Johnson      Malware, tools, or other non-native files dropped or created on a system by an adversary may leave traces behind as to what was done within a network and how. Adversaries may remove these files over the course of an intrusion to keep their footprint low or remove them at the end as part of the post- intrusion cleanup process.  There are tools available from the host operating system to perform cleanup, but adversaries may use other tools as well. Examples include native cmd functions such as DEL, secure deletion tools such as Windows Sysinternals SDelete, or other third-party file deletion tools.1  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * APT18 actors deleted tools and batch files from victim systems.2   * Lazarus Group malware contains "suicide scripts" to delete malware binaries from the victim. It also uses secure file deletion to delete files from the victim.3   * Malware used by Group5 is capable of remotely deleting files from victims.4   * Derusbi is capable of deleting files. It has been observed loading a Linux Kernel Module (LKM) and then deleting it from the hard disk as well as overwriting the data with null bytes.5   * gh0st RAT is able to delete files.6   * The JHUHUGIT dropper deletes itself from the victim.7   * ADVSTORESHELL can delete files and directories.8   * SeaDuke can securely delete files, including deleting itself from the victim.9   * pngdowner deletes content from C2 communications that was saved to the user\'s temporary directory.10   * BLACKCOFFEE has the capability to delete files.11   * HTTPBrowser deletes its original installer file once installation is complete.12   * Some Sakula samples use cmd.exe to delete temporary files.13   * Misdat is capable of deleting the backdoor file.14   * Hi-Zor deletes its RAT installer file as it executes its DLL payload file.15   * BlackEnergy 2 contains a "Destroy" plug-in that destroys data stored on victim hard drives by overwriting file contents.16   * Backdoor.Oldrea contains a cleanup module that removes traces of itself from the victim.17   * cmd can be used to delete files from the file system.18   * Recent versions of Cherry Picker delete files and registry keys created by the malware.19   * Remsec is capable of deleting files on the victim.2021 It also securely removes itself after collecting and exfiltrating data.22   * BBSRAT can delete files and directories.23   * H1N1 deletes shadow copies from the victim.24   * USBStealer has several commands to delete files associated with the malware from the victim.25   * PowerDuke has a command to write random data across a file and delete it.26   * Shamoon attempts to overwrite operating system files with image files.2728   * Pteranodon can delete files that may interfere with it executing. It also can delete temporary files and itself after the initial script executes.29   * RTM can delete all files created during its execution.30   * MoonWind can delete itself or specified files.31  ## Mitigation  Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to delete files, and audit and/or block them by using whitelisting32 tools like AppLocker3334 or Software Restriction Policies35 where appropriate.36  ## Detection  It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command- line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.  '
p120
sS'Windows Admin Shares'
p121
S'  T1077   Tactic|  Lateral Movement    System Requirements|  File and printer sharing over SMB enabled. Host/network firewalls not blocking SMB ports between source and destination.  Use of domain account in administrator group on remote system or default system admin account.   Permissions Required|  Administrator   Data Sources|  Process use of network, Authentication logs, Process command- line parameters, Process monitoring   CAPEC ID|  CAPEC-561      Windows systems have hidden network shares that are accessible only to administrators and provide the ability for remote file copy and other administrative functions. Example network shares include `C$`, `ADMIN$`, and `IPC$`.  Adversaries may use this technique in conjunction with administrator-level Legitimate Credentials to remotely access a networked system over server message block (SMB)1 to interact with systems using remote procedure calls (RPCs),2 transfer files, and run transferred binaries through remote Execution. Example execution techniques that rely on authenticated sessions over SMB/RPC are Scheduled Task, Service Execution, and Windows Management Instrumentation. Adversaries can also use NTLM hashes to access administrator shares on systems with Pass the Hash and certain configuration and patch levels.3  The Net utility can be used to connect to Windows admin shares on remote systems using `net use` commands with valid credentials.4  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Ke3chang actors have been known to copy files to the network shares of other computers to move laterally.5   * Deep Panda uses net.exe to connect to network shares using "net use" commands with compromised credentials.6   * Turla uses net use commands to connect to lateral systems within a network.7   * Threat Group-1314 actors mapped network drives using net use.8   * Lazarus Group malware SierraAlfa accesses the ADMIN$ share via SMB to conduct lateral movement.9   * The Regin malware platform can use Windows admin shares to move laterally.10   * PsExec, a tool that has been used by adversaries, writes programs to the ADMIN$ network share to execute commands on remote systems.11   * Adversaries can instruct Duqu to spread laterally by copying itself to shares it has enumerated and for which it has obtained legitimate credentials (via keylogging or other means). The remote host is then infected by using the compromised credentials to schedule a task on remote machines that executes the malware.12   * Lateral movement can be done with Net through net use commands to connect to the Windows admin shares on remote systems.13   * Net Crawler uses Windows admin shares to establish authenticated sessions to remote systems over SMB as part of lateral movement.14   * BlackEnergy has run a plug-in on a victim to spread through the local network by using PsExec and accessing admin shares.15   * Shamoon accesses network share(s), enables share access to the target device, and copies an executable payload to the target system, and uses a Scheduled Task to execute the malware.16  ## Mitigation  Do not reuse local administrator account passwords across systems. Ensure password complexity and uniqueness such that the passwords cannot be cracked or guessed. Deny remote use of local admin credentials to log into systems. Do not allow domain user accounts to be in the local Administrators group multiple systems.  Identify unnecessary system utilities or potentially malicious software that may be used to leverage SMB and the Windows admin shares, and audit and/or block them by using whitelisting17 tools, like AppLocker,1819 or Software Restriction Policies20 where appropriate.21  ## Detection  Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding.2223 Monitor remote login events and associated SMB activity for file transfers and remote process execution. Monitor the actions of remote users who connect to administrative shares. Monitor for use of tools and commands to connect to remote shares, such as Net, on the command-line interface and Discovery techniques that could be used to find remotely accessible systems.  '
p122
sS'Windows Management Instrumentation'
p123
S'  T1047   Tactic|  Execution    System Requirements|  WMI service, winmgmt, running. Host/network firewalls allowing SMB and WMI ports from source to destination.  SMB authentication.   Permissions Required|  User, Administrator   Data Sources|  Authentication logs, Netflow/Enclave netflow, Process command- line parameters, Process monitoring   Supports Remote|  Yes      Windows Management Instrumentation (WMI) is a Windows administration feature that provides a uniform environment for local and remote access to Windows system components. It relies on the WMI service for local and remote access and the server message block (SMB)1 and Remote Procedure Call Service (RPCS)2 for remote access. RPCS operates over port 135.3  An adversary can use WMI to interact with local and remote systems and use it as a means to perform many tactic functions, such as gathering information for Discovery and remote Execution of files as part of Lateral Movement.4  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * The Deep Panda group is known to utilize WMI for lateral movement.5   * APT29 used WMI to steal credentials and execute backdoors at a future time.6   * Lazarus Group malware SierraAlfa uses the Windows Management Instrumentation Command-line application wmic to start itself on a target system during lateral movement.7   * Stealth Falcon malware gathers system information via Windows Management Instrumentation (WMI).8   * The DustySky dropper uses Windows Management Instrumentation to extract information about the operating system and whether an anti-virus is active.9   * A BlackEnergy 2 plug-in uses WMI to gather victim host details.10  ## Mitigation  Disabling WMI or RPCS may cause system instability and should be evaluated to assess the impact to a network. By default, only administrators are allowed to connect remotely using WMI. Restrict other users who are allowed to connect, or disallow all users to connect remotely to WMI. Prevent credential overlap across systems of administrator and privileged accounts.4  ## Detection  Monitor network traffic for WMI connections; the use of WMI in environments that do not typically use WMI may be suspect. Perform process monitoring to capture command-line arguments of "wmic" and detect commands that are used to perform remote behavior.4  '
p124
sS'Third-party Software'
p125
S"  T1072   Tactic|  Execution, Lateral Movement    Permissions Required|  User, Administrator, SYSTEM   Data Sources|  File monitoring, Third-party application logs, Binary file metadata, Windows Registry, Process monitoring, Process use of network   Supports Remote|  Yes      Third-party applications and software deployment systems may be in use in the network environment for administration purposes (e.g., SCCM, VNC, HBSS, Altiris, etc.). If an adversary gains access to these systems, then they may be able to execute code.  Adversaries may gain access to and use third-party application deployment systems installed within an enterprise network. Access to a network-wide or enterprise-wide software deployment system enables an adversary to have remote code execution on all systems that are connected to such a system. The access may be used to laterally move to systems, gather information, or cause a specific effect, such as wiping the hard drives on all endpoints.  The permissions required for this action vary by system configuration; local credentials may be sufficient with direct access to the deployment server, or specific domain credentials may be required. However, the system may require an administrative account to log in or to perform software deployment.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Threat Group-1314 actors used a victim's endpoint management platform, Altiris, for lateral movement.1   * It is believed that a patch management system for an anti-virus product commonly installed among targeted companies was used to distribute the Wiper malware.2  ## Mitigation  Evaluate the security of third-party software that could be used to deploy or execute programs. Ensure that access to management systems for deployment systems is limited, monitored, and secure. Have a strict approval policy for use of deployment systems.  Grant access to application deployment systems only to a limited number of authorized administrators. Ensure proper system and access isolation for critical network systems through use of firewalls, account privilege separation, group policy, and multifactor authentication. Verify that account credentials that may be used to access deployment systems are unique and not used throughout the enterprise network. Patch deployment systems regularly to prevent potential remote access through Exploitation of Vulnerability.  If the application deployment system can be configured to deploy only signed binaries, then ensure that the trusted signing certificates are not co-located with the application deployment system and are instead located on a system that cannot be accessed remotely or to which remote access is tightly controlled.  ## Detection  Detection methods will vary depending on the type of third-party software or system and how it is typically used.  The same investigation process can be applied here as with other potentially malicious activities where the distribution vector is initially unknown but the resulting activity follows a discernible pattern. Analyze the process execution trees, historical activities from the third-party application (such as what types of files are usually pushed), and the resulting activities or events from the file/binary/script pushed to systems.  Often these third-party applications will have logs of their own that can be collected and correlated with other data from the environment. Audit software deployment logs and look for suspicious or unauthorized activity. A system not typically used to push software to clients that suddenly is used for such a task outside of a known admin function may be suspicious.  Perform application deployment at regular times so that irregular deployment activity stands out. Monitor process activity that does not correlate to known good software. Monitor account login activity on the deployment system.  "
p126
sS'Standard Non-Application Layer Protocol'
p127
S'  T1095   Tactic|  Command and Control    Requires Network|  Yes      Use of a standard non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive.1 Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), and transport layer protocols, such as the User Datagram Protocol (UDP).  ICMP communication between hosts is one example. Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts;2 however, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * An APT3 downloader establishes SOCKS5 connections for its initial C2.3   * PlugX can be configured to use raw TCP or UDP for command and control.4   * The Regin malware platform can use ICMP to communicate between infected computers.5   * Derusbi binds to a raw socket on a random source port between 31800 and 31900 for C2.6   * If NETEAGLE does not detect a proxy configured on the infected machine, it will send beacons via UDP/6000. Also, after retrieving a C2 IP address and Port Number, NETEAGLE will initiate a TCP connection to this socket. The ensuing connection is a plaintext C2 channel in which commands are specified by DWORDs.7   * BUBBLEWRAP can communicate using SOCKS.8   * Misdat network traffic communicates over a raw socket.9   * Mis-Type network traffic can communicate over a raw socket.9   * Crimson uses a custom TCP protocol for C2.10   * Remsec is capable of using ICMP, TCP, and UDP for C2.1112   * MoonWind completes network communication via raw sockets.13  ## Mitigation  Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports and through proper network gateway systems.  Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.14  ## Detection  Analyze network traffic for ICMP messages or other protocols that contain abnormal data or are not normally seen within or exiting the network.  Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.14  '
p128
sS'Multiband Communication'
p129
S'  T1026   Tactic|  Command and Control    Data Sources|  Packet capture, Netflow/Enclave netflow, Process use of network, Malware reverse engineering, Process monitoring   Requires Network|  Yes      Some adversaries may split communications between different protocols. There could be one protocol for inbound command and control and another for outbound data, allowing it to bypass certain firewall restrictions. The split could also be random to simply avoid data threshold alerts on any one communication.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Some Lazarus Group malware uses multiple channels for C2, such as RomeoWhiskey-Two, which consists of a RAT channel that parses data in datagram form and a Proxy channel that forms virtual point-to-point sessions.1   * PlugX can be configured to use multiple network protocols to avoid network-based detection.2  ## Mitigation  Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.3  ## Detection  Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.3 Correlating alerts between multiple communication channels can further help identify command-and-control behavior.  '
p130
sS'DLL Injection'
p131
S"  T1055   Tactic|  Defense Evasion, Privilege Escalation    Permissions Required|  User, Administrator, SYSTEM   Effective Permissions|  User, Administrator, SYSTEM   Data Sources|  API monitoring, Windows Registry, File monitoring, Process monitoring   Defense Bypassed|  Process whitelisting, Anti-virus      DLL injection is used to run code in the context of another process by causing the other process to load and execute code. Running code in the context of another process provides adversaries many benefits, such as access to the process's memory and permissions. It also allows adversaries to mask their actions under a legitimate process. A more sophisticated kind of DLL injection, reflective DLL injection, loads code without calling the normal Windows API calls, potentially bypassing DLL load monitoring. Numerous methods of DLL injection exist on Windows, including modifying the Registry, creating remote threads, Windows hooking APIs, and DLL pre-loading.12  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * An executable dropped onto victims by Putter Panda aims to inject the specified DLL into a process that would normally be accessing the network, including Outlook Express (msinm.exe), Outlook (outlook.exe), Internet Explorer (iexplore.exe), and Firefox (firefox.exe).3   * Taidoor can perform DLL loading.4   * PoisonIvy can load DLLs.5   * Sykipot injects itself into running instances of outlook.exe, iexplore.exe, or firefox.exe.6   * Duqu will inject itself into different processes to evade detection. The selection of the target process is influenced by the security software that is installed on the system (Duqu will inject into different processes depending on which security suite is installed on the infected host).7   * JHUHUGIT performs code injection injecting its own functions to browser processes.8   * After decrypting itself in memory, RARSTONE downloads a DLL file from its C2 server and loads it in the memory space of a hidden Internet Explorer process. This downloaded file is actually not dropped onto the system.9   * Elise injects DLL files into iexplore.exe.10   * Emissary injects its DLL file into a newly spawned Internet Explorer process.11   * BlackEnergy injects its DLL component into svchost.exe.12   * Backdoor.Oldrea injects itself into explorer.exe.13   * Remsec can perform DLL injection.14   * HIDEDRV injects a DLL for Downdelph into the explorer.exe process.15  ## Mitigation  Mitigating specific API calls will likely have unintended side effects, such as preventing legitimate software from operating properly. Efforts should be focused on preventing adversary tools from running earlier in the chain of activity and on identification of subsequent malicious behavior.  Identify or block potentially malicious software that may contain DLL injection functionality by using whitelisting16 tools, like AppLocker,1718 or Software Restriction Policies19 where appropriate.20  ## Detection  Monitoring API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. API calls such as CreateRemoteThread and those that can be used to modify memory within another process, such as WriteProcessMemory, may be used for this technique.  Monitor processes and command-line arguments for actions that could be done before or after code injection has occurred and correlate the information with related event information. Code injection may also be performed using PowerShell with tools such as PowerSploit,21 so additional PowerShell monitoring may be required to cover known implementations of this behavior.  "
p132
sS'Process Discovery'
p133
S'  T1057   Tactic|  Discovery    System Requirements|  Administrator, SYSTEM may provide better process ownership details   Permissions Required|  User, Administrator, SYSTEM   Data Sources|  Process command-line parameters, Process monitoring   CAPEC ID|  CAPEC-573      Adversaries may attempt to get information about running processes on a system. An example command that would obtain details on processes is "tasklist" using the Tasklist utility.  Information obtained could be used to gain an understanding of common software running on systems within the network.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Ke3chang performs process discovery using tasklist commands.1   * Deep Panda uses the Microsoft Tasklist utility to list processes running on systems.2   * Turla surveys a system upon check-in to discover running processes using the tasklist /v command.3   * Molerats actors obtained a list of active processes on the victim and sent them to C2 servers.4   * Several Lazarus Group malware families gather a list of running processes on a victim system and send it to their C2 server.5   * After compromising a victim, Poseidon Group lists all running processes.6   * Stealth Falcon malware gathers a list of running processes.7   * Winnti Group looked for a specific process running on infected servers.8   * Sykipot may gather a list of running processes by running tasklist /v.9   * Derusbi collects current and parent process IDs.10   * BACKSPACE may collect information about running processes.11   * gh0st RAT is able to list processes.12   * NETEAGLE can send process listings over the C2 channel.11   * The discovery modules used with Duqu can collect information on process details.13   * JHUHUGIT obtains a list of running processes on the victim.14   * ADVSTORESHELL can list running processes.15   * GeminiDuke collects information on running processes and environment variables from the victim.16   * Tasklist can be used to discover processes running on a system.17   * WinMM sets a WH_CBT Windows hook to collect information on process creation.18   * DustySky collects information about running processes from victims.4   * SHOTPUT has a command to obtain a process listing.19   * ELMER is capable of performing process listings.20   * 4H RAT has the capability to obtain a listing of running processes (including loaded modules).21   * BLACKCOFFEE has the capability to discover processes.22   * MobileOrder has a command to upload information about all running processes to its C2 server.23   * Kasidet has the ability to search for a given process name in processes currently running in the system.24   * BlackEnergy has gathered a process list by using Tasklist.exe.2526   * Backdoor.Oldrea collects information about running processes.27   * Trojan.Karagany can use tasklist to collect a list of running tasks.27   * Crimson contains a command to list processes.28   * Remsec can obtain a process list from the victim.29   * BBSRAT can list running processes.30   * PowerDuke has a command to list the victim\'s processes.31   * StreamEx has the ability to enumerate processes.32   * ChChes collects its process identifier (PID) on the victim.33   * RTM can obtain information about process integrity levels.34   * MoonWind has a command to return a list of running processes.35  ## Mitigation  Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting36 tools, like AppLocker,3738 or Software Restriction Policies39 where appropriate.40  ## Detection  System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.  Normal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.  '
p134
sS'Credential Dumping'
p135
S'  T1003   Tactic|  Credential Access    Permissions Required|  Administrator, SYSTEM   Data Sources|  API monitoring, Process command-line parameters, Process monitoring, PowerShell logs   CAPEC ID|  CAPEC-567      Credential dumping is the process of obtaining account login and password information from the operating system and software. Credentials can be used to perform Lateral Movement and access restricted information.  Tools may dump credentials in many different ways: extracting credential hashes for offline cracking, extracting plaintext passwords, and extracting Kerberos tickets, among others. Examples of credential dumpers include pwdump7, Windows Credential Editor, Mimikatz, and gsecdump. These tools are in use by both professional security testers and adversaries.  Plaintext passwords can be obtained using tools such as Mimikatz to extract passwords stored by the Local Security Authority (LSA). If smart cards are used to authenticate to a domain using a personal identification number (PIN), then that PIN is also cached as a result and may be dumped.1  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Axiom has been known to dump credentials.2   * Cleaver has been known to dump credentials.3   * Ke3chang dumps credentials.4   * APT1 has been known to use credential dumping.5   * APT28 regularly deploys both publicly available and custom password retrieval tools on victims.6   * Molerats used the public tool BrowserPasswordDump10 to dump passwords saved in browsers on victims.7   * APT3 has used a tool to dump credentials by injecting itself into lsass.exe and triggering with the argument "dig." The group has also used a tools to dump passwords from browsers.8   * Threat Group-3390 actors have used gsecdump to obtain passwords from memory. They have also dumped credentials from domain controllers.9   * Poseidon Group conducts credential dumping on victims, with a focus on obtaining credentials belonging to domain and database servers.10   * FIN6 has used Windows Credential Editor for credential dumping, as well as Metasploits PsExec NTDSGRAB module to obtain a copy of the victim\'s Active Directory database.11   * Stealth Falcon malware gathers passwords from multiple sources, including Windows Credential Vault, Internet Explorer, Firefox, Chrome, and Outlook.12   * Suckfly used a signed credential-dumping tool to obtain victim account credentials.13   * Patchwork dumped the login data database from \\AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data.14   * Strider has registered its persistence module on domain controllers as a Windows LSA (Local System Authority) password filter to dump credentials any time a domain, local user, or administrator logs in or changes a password.15   * Mimikatz performs credential dumping to obtain account and password information useful in gaining access to additional systems and enterprise network resources.16   * Windows Credential Editor can dump credentials.17   * pwdump can be used to dump credentials.18   * gsecdump can dump Windows password hashes and LSA secrets.19   * Password stealer and NTLM stealer modules in CozyCar harvest stored credentials from the victim, including credentials used as part of Windows NTLM user authentication. CozyCar has also executed Mimikatz for further victim penetration.20   * PinchDuke steals credentials from compromised hosts. PinchDuke\'s credential stealing functionality is believed to be based on the source code of the Pinch credential stealing malware (also known as LdPinch). Credentials targeted by PinchDuke include ones associated with The Bat!, Yahoo!, Mail.ru, Passport.Net, Google Talk, Netscape Navigator, Mozilla Firefox, Mozilla Thunderbird, Internet Explorer, Microsoft Outlook, WinInet Credential Cache, and Lightweight Directory Access Protocol (LDAP).21   * CosmicDuke collects user credentials, including passwords, for various programs and browsers, including popular instant messaging applications, Web browsers, and email clients. Windows account hashes, domain accounts, and LSA secrets are also collected, as are WLAN keys.21   * OnionDuke steals credentials from its victims.21   * Net Crawler uses credential dumpers such as Mimikatz and Windows Credential Editor to extract cached credentials from Windows systems.3   * Mivast has the capability to gather NTLM password information.22   * Some Backdoor.Oldrea samples contain a publicly available Web browser password recovery tool.23   * Trojan.Karagany can dump passwords and save them into \\ProgramData\\Mail\\MailAg\\pwds.txt.23   * A module in Prikormka collects passwords stored in applications installed on the victim.24   * Crimson contains a module to steal credentials from Web browsers on the victim machine.25   * Cachedump can extract cached password hashes from a systems registry.5   * Fgdump can dump Windows password hashes.5   * Lslsass can dump active logon session password hashes from the lsass process.5   * Remsec can dump the SAM database.26 It also can register itself as a Windows Local System Authority password filter on domain controllers, which allows it to harvest passwords when users change passwords.15   * Unknown Logger is capable of stealing usernames and passwords from browsers on the victim machine.27   * H1N1 dumps usernames and passwords from Firefox, Internet Explorer, and Outlook.28   * OLDBAIT collects credentials from Internet Explorer, Mozilla Firefox, Eudora, and several email clients.29  ## Mitigation  Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using Legitimate Credentials if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.30  Identify and block potentially malicious software that may be used to dump credentials by using whitelisting31 tools, like AppLocker,3233 or Software Restriction Policies34 where appropriate.35  With Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not implemented by default and has hardware requirements.36  ## Detection  Common credential dumpers such as Mimikatz access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective DLL Injection to reduce potential indicators of malicious activity.  NTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised Legitimate Credentials in-use by adversaries may help as well.  On Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.  Monitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit\'s Invoke-Mimikatz module,37 which may require additional logging features to be configured in the operating system to collect necessary information for analysis.  '
p136
sS'Command-Line Interface'
p137
S'  T1059   Tactic|  Execution    Permissions Required|  User, Administrator, SYSTEM   Data Sources|  Process command-line parameters, Process monitoring   Supports Remote|  No      Command-line interfaces provide a way of interacting with computer systems and is a common feature across many types of operating system platforms.1 One example command-line interface on Windows systems is cmd, which can be used to perform a number of tasks including execution of other software. Command-line interfaces can be interacted with locally or remotely via a remote desktop application, reverse shell session, etc. Commands that are executed run with the current permission level of the command-line interface process unless the command includes process invocation that changes permissions context for that execution (e.g. Scheduled Task).  Adversaries may use command-line interfaces to interact with systems and execute other software during the course of an operation.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Malware used by Ke3chang can run commands on the command-line interface.2   * APT1 has used the Windows command shell to execute commands.3   * Following exploitation with LOWBALL malware, admin@338 actors created a file containing a list of commands to be executed on the compromised computer.4   * An APT3 downloader uses the Windows command "cmd.exe" /C whoami.5 The group also uses a tool to execute commands on remote computers.6   * Threat Group-1314 actors spawned shells on remote systems on a victim network to execute commands.7   * Lazarus Group malware uses cmd.exe to execute commands on victims.8   * Several tools used by Suckfly have been command-line driven.9   * Patchwork ran a reverse shell with Meterpreter.10   * TinyZBot supports execution from the command-line.11   * PlugX allows actors to spawn a reverse shell on a victim.12   * Derusbi is capable of creating a remote Bash shell and executing commands.13   * CHOPSTICK is capable of performing remote command execution.1415   * Adversaries can direct BACKSPACE to execute from the command-line on infected hosts, or have BACKSPACE create a reverse shell.16   * gh0st RAT is able to open a command shell.17   * NETEAGLE allows adversaries to execute shell commands on the infected host.16   * ADVSTORESHELL can create a remote shell and run a given command.1518   * A module in CozyCar allows arbitrary commands to be executed by invoking C:\\Windows\\System32\\cmd.exe.19   * SeaDuke is capable of executing commands.20   * 4H RAT has the capability to create a remote shell.21   * httpclient opens cmd.exe on the victim.21   * BLACKCOFFEE has the capability to create a reverse shell.22   * HTTPBrowser is capable of spawning a reverse shell on a victim.12   * hcdLoader provides command-line access to the compromised system.23   * Sakula calls cmd.exe to run various DLL files via rundll32 and also to perform file cleanup. Sakula also has the capability to invoke a reverse shell.24   * CallMe has the capability to create a reverse shell on victims.25   * Mivast has the capability to open a remote shell and run basic commands.26   * Emissary has the capability to create a remote shell and execute specified commands.27   * Misdat is capable of providing shell functionality to the attacker to execute commands.28   * Mis-Type uses cmd.exe to run commands for enumerating the host.28   * ZLib has the ability to execute shell commands.28   * Hi-Zor has the ability to create a reverse shell.29   * Kasidet can execute commands using cmd.exe.30   * cmd is used to execute programs and other actions at the command-line interface.31   * XTunnel has been used to execute remote commands.14   * Pisloader uses cmd.exe to set the Registry Run key value. It also has a command to spawn a command shell.32   * BADNEWS is capable of executing commands via cmd.exe.33   * H1N1 kills and disables services by using cmd.exe.34   * PowerDuke runs cmd.exe /c and sends the output to its C2.35   * StreamEx has the ability to remotely execute commands.36   * TEXTMATE executes cmd.exe to provide a reverse shell to attackers.3738   * Pteranodon can execute commands on the victim.39   * RTM uses the command line and rundll32.exe to execute.40   * MoonWind can execute commands via an interactive command shell.41  ## Mitigation  Audit and/or block command-line interpreters by using whitelisting42 tools, like AppLocker,4344 or Software Restriction Policies45 where appropriate.46  ## Detection  Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries\' actions through how they use native processes or custom tools.  '
p138
sS'Local Network Configuration Discovery'
p139
S"  T1016   Tactic|  Discovery    Permissions Required|  User   Data Sources|  Process command-line parameters, Process monitoring   CAPEC ID|  CAPEC-309      Adversaries will likely look for details about the network configuration and settings of systems they access. Several operating system administration utilities exist that can be used to gather this information. Examples include Arp, ipconfig/ifconfig, nbtstat, and route.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Ke3chang performs local network configuration discovery using ipconfig /all.1   * Turla surveys a system upon check-in to discover network configuration details using the arp -a, nbtstat -n, and net config commands.2   * admin@338 actors used the following command after exploiting a machine with LOWBALL malware to acquire information about local networks: ipconfig /all &gt;&gt;%temp%\\download3   * Naikon uses commands such as netsh interface show to discover network interface settings.4   * A keylogging tool used by APT3 gathers network information from the victim, including the MAC address, IP address, WINS, DHCP server, and gateway.5   * Lazarus Group malware IndiaIndia obtains and sends to its C2 server information about the first network interface cards configuration, including IP address, gateways, subnet mask, DHCP information, and whether WINS is available.6   * Stealth Falcon malware gathers the Address Resolution Protocol (ARP) table from the victim.7   * Sykipot may use ipconfig /all to gather system network configuration details.8   * The reconnaissance modules used with Duqu can collect information on network configuration.9   * GeminiDuke collects information on network settings and Internet proxy settings from the victim.10   * Sys10 collects the local IP address of the victim and sends it to the C2.4   * Elise executes ipconfig /all after initial communication is made to the remote server.11   * Emissary has the capability to execute the command ipconfig /all.12   * Mis-Type may create a file containing the results of the command cmd.exe /c ipconfig /all.13   * BlackEnergy has gathered information about network IP configurations using ipconfig.exe and about routing tables using route.exe.1415   * Agent.btz collects the network adapters IP and MAC address as well as IP addresses of the network adapters default gateway, primary/secondary WINS, DHCP, and DNS servers, and saves them into a log file.16   * T9000 gathers and beacons the MAC and IP addresses during installation.17   * Arp can be used to display ARP configuration information on the host.   * ipconfig can be used to display adapter configuration on Windows systems, including information for TCP/IP, DNS, and DHCP.   * ifconfig can be used to display adapter configuration on Unix systems, including information for TCP/IP, DNS, and DHCP.   * nbtstat can be used to discover local NetBIOS domain names.   * route can be used to discover routing configuration information.   * A module in Prikormka collects information from the victim about its IP addresses and MAC addresses.18   * Crimson contains a command to collect the victim MAC address and LAN IP.19   * Pisloader has a command to collect the victim's IP address.20   * Remsec can obtain information about network configuration, including the routing table, ARP cache, and DNS cache.21   * Unknown Logger can obtain information about the victim's IP address.22   * PowerDuke has a command to get the victim's domain and NetBIOS name.23   * Shamoon obtains the target's IP address and local network segment.24   * MoonWind obtains the victim IP address.25  ## Mitigation  Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about a system's network configuration, and audit and/or block them by using whitelisting26 tools, like AppLocker,2728 or Software Restriction Policies29 where appropriate.30  ## Detection  System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.  Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.  "
p140
sS'Exfiltration Over Physical Medium'
p141
S'  T1052   Tactic|  Exfiltration    System Requirements|  Presence of physical medium or device   Data Sources|  Data loss prevention, File monitoring   Requires Network|  No      In certain circumstances, such as an air-gapped network compromise, exfiltration could occur via a physical medium or device introduced by a user. Such media could be an external hard drive, USB drive, cellular phone, MP3 player, or other removable storage and processing device. The physical medium or device could be used as the final exfiltration point or to hop between otherwise disconnected systems.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * SPACESHIP copies staged data to removable drives when they are inserted into the system.1   * Agent.btz creates a file named thumb.dd on all USB flash drives connected to the victim. This file contains information about the infected system and activity logs.2   * Remsec contains a module to move data from airgapped networks to Internet-connected systems by using a removable USB device.3   * USBStealer exfiltrates collected files via removable media from air-gapped victims.4  ## Mitigation  Disable Autorun if it is unnecessary.5 Disallow or restrict removable media at an organizational policy level if they are not required for business operations.6  ## Detection  Monitor file access on removable media. Detect processes that execute when removable media are mounted.  '
p142
sS'Modify Registry'
p143
S"  T1112   Tactic|  Defense Evasion    Permissions Required|  User, Administrator, SYSTEM   Data Sources|  Windows Registry, File monitoring, Process monitoring, Process command-line parameters   Defense Bypassed|  Host forensic analysis      Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in Persistence and Execution.  Access to specific areas of the Registry depends on account permissions, some requiring administrator-level access. The built-in Windows command-line utility Reg may be used for local or remote Registry modification.1 Other tools may also be used, such as a remote access tool, which may contain functionality to interact with the Registry through the Windows API (see examples).  The Registry of a remote system may be modified to aid in execution of files as part of Lateral Movement. It requires the remote Registry service to be running on the target system.2 Often Legitimate Credentials are required, along with access to the remote system's Windows Admin Shares for RPC communication.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Regin appears to have functionality to modify remote Registry information.3   * CHOPSTICK may store RC4 encrypted configuration information in the Windows Registry.4   * BACKSPACE is capable of deleting Registry keys, sub-keys, and values on a victim system.5   * ADVSTORESHELL is capable of setting and deleting Registry values.6   * Reg may be used to interact with and modify the Windows Registry of a local or remote system at the command-line interface.1   * Rover has functionality to remove Registry Run key persistence as a cleanup procedure.7   * Once Shamoon has access to a network share, it enables the remote Registry service on the target system and enables share access by setting HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\LocalAccountTokenFilterPolicy to 0.8 It also modifies the Registry to disable UAC remote restrictions by setting SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\LocalAccountTokenFilterPolicy to 1.9   * StreamEx has the ability to modify the Registry.10   * RTM can delete all Registry entries created during its execution.11  ## Mitigation  Identify and block unnecessary system utilities or potentially malicious software that may be used to modify the Registry by using whitelisting12 tools like AppLocker1314 or Software Restriction Policies15 where appropriate.16  ## Detection  Modifications to the Registry are normal and occur throughout typical use of the Windows operating system. Changes to Registry entries that load software on Windows startup that do not correlate with known software, patch cycles, etc., are suspicious, as are additions or changes to files within the startup folder. Changes could also include new services and modification of existing binary paths to point to malicious files. If a change to a service-related entry occurs, then it will likely be followed by a local or remote service start or restart to execute the file.  Monitor processes and command-line arguments for actions that could be taken to change or delete information in the Registry. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell, which may require additional logging features to be configured in the operating system to collect necessary information for analysis.  "
p144
sS'Data Encrypted'
p145
S'  T1022   Tactic|  Exfiltration    Data Sources|  File monitoring, Binary file metadata, Process command-line parameters, Process monitoring   Requires Network|  No      Data is encrypted before being exfiltrated in order to hide the information that is being exfiltrated from detection or to make the exfiltration less conspicuous upon inspection by a defender. The encryption is performed by a utility, programming library, or custom algorithm on the data itself and is considered separate from any encryption performed by the command and control or file transfer protocol. Common file archive formats that can encrypt files are RAR and zip.  Other exfiltration techniques likely apply as well to transfer the information out of the network, such as Exfiltration Over Command and Control Channel and Exfiltration Over Alternative Protocol  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Ke3chang is known to use RAR with passwords to encrypt data prior to exfiltration.1   * Threat Group-3390 actors have encrypted data for exfiltration using the password "admin-windows2014" (with the year corresponding to the year of the intrusion).2   * Lazarus Group malware IndiaIndia saves information gathered about the victim to a file that is compressed with Zlib, encrypted, and uploaded to a C2 server.3 Lazarus Group malware RomeoDelta archives specified directories in .zip format, encrypts the .zip file, and uploads it to its C2 server.4   * TRINITY malware used by FIN6 encodes data gathered from the victim with a simple substitution cipher and single-byte XOR using the OxAA key.5   * Data SPACESHIP copies to the staging area is compressed with zlib. Bytes are rotated by four positions and XOR\'ed with 0x23.6   * FLASHFLOOD employs the same encoding scheme as SPACESHIP for data it stages. Data is compressed with zlib, and bytes are rotated four times before being XOR\'ed with 0x23.6   * Modules can be pushed to and executed by Duqu that copy data to a staging area, compress it, and XOR encrypt it.7   * ADVSTORESHELL encrypts with the 3DES algorithm and a hardcoded key prior to exfiltration.8   * OwaAuth DES-encrypts captured credentials using the key 12345678 before writing the credentials to a log file.2   * Agent.btz saves system information into an XML file that is then XOR-encoded.9   * Backdoor.Oldrea writes collected data to a temporary file in an encrypted form before exfiltration to a C2 server.10   * T9000 encrypts collected data using a single byte XOR key.11   * After collecting files and logs from the victim, Prikormka encrypts some collected data with Blowfish.12  ## Mitigation  Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to encrypt files, and audit and/or block them by using whitelisting13 tools, like AppLocker,1415 or Software Restriction Policies16 where appropriate.17  ## Detection  Encryption software and encrypted files can be detected in many ways. Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known encryption utilities. This may yield a significant amount of benign events, depending on how systems in the environment are typically used. Often the encryption key is stated within command-line invocation of the software.  A process that loads the Windows DLL crypt32.dll may be used to perform encryption, decryption, or verification of file signatures.  Network traffic may also be analyzed for entropy to determine if encrypted data is being transmitted.18 If the communications channel is unencrypted, encrypted files of known file types can be detected in transit during exfiltration with a network intrusion detection or data loss prevention system analyzing file headers.19  '
p146
sS'Permission Groups Discovery'
p147
S'  T1069   Tactic|  Discovery    Permissions Required|  User   Data Sources|  API monitoring, Process command-line parameters, Process monitoring   CAPEC ID|  CAPEC-576      Adversaries may attempt to find local system or domain-level groups and permissions settings. Examples of commands that can list groups are `net group /domain` and `net localgroup` using the Net utility.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Ke3chang performs discovery of permission groups net group /domain.1   * admin@338 actors used the following command following exploitation of a machine with LOWBALL malware to list local groups: net localgroup administrator &gt;&gt;%temp%\\download2   * Commands such as net group and net localgroup can be used in Net to gather information about and manipulate groups.3   * Sys10 collects the group name of the logged-in user and sends it to the C2.4   * Emissary has the capability to execute the command net localgroup administrators.5   * dsquery can be used to gather information on permission groups within a domain.6  ## Mitigation  Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about groups and permissions, and audit and/or block them by using whitelisting7 tools, like AppLocker,89 or Software Restriction Policies10 where appropriate.11  ## Detection  System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.  Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.  '
p148
sS'Modify Existing Service'
p149
S"  T1031   Tactic|  Persistence    Permissions Required|  Administrator, SYSTEM   Data Sources|  Windows Registry, File monitoring, Process command-line parameters, Process monitoring   CAPEC ID|  CAPEC-551      Windows service configuration information, including the file path to the service's executable, is stored in the Registry. Service configurations can be modified using utilities such as sc.exe and Reg.  Adversaries can modify an existing service to persist malware on a system by using system utilities or by using custom tools to interact with the Windows API. Use of existing services is a type of Masquerading that may make detection analysis more challenging. Modifying existing services may interrupt their functionality or may enable services that are disabled or otherwise not commonly used.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * BBSRAT can modify service configurations.1  ## Mitigation  Use auditing tools capable of detecting privilege and service abuse opportunities on systems within an enterprise and correct them. Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service configurations. Toolkits like the PowerSploit framework contain the PowerUp modules that can be used to explore systems for Privilege Escalation weaknesses.2  Identify and block potentially malicious software that may be executed through service abuse by using whitelisting3 tools like AppLocker45 that are capable of auditing and/or blocking unknown programs.  ## Detection  Look for changes to service Registry entries that do not correlate with known software, patch cycles, etc. Changes to the binary path and the service startup type changed from manual or disabled to automatic, if it does not typically do so, may be suspicious. Tools such as Sysinternals Autoruns may also be used to detect system service changes that could be attempts at persistence.6  Command-line invocation of tools capable of modifying services may be unusual, depending on how systems are typically used in a particular environment. Collect service utility execution and service binary path arguments used for analysis. Service binary paths may even be changed to execute cmd commands or scripts.  Look for abnormal process call trees from known services and for execution of other commands that could relate to Discovery or other adversary techniques. Services may also be modified through Windows system management tools such as Windows Management Instrumentation and PowerShell, so additional logging may need to be configured to gather the appropriate data.  "
p150
sS'Scheduled Transfer'
p151
S'  T1029   Tactic|  Exfiltration    Data Sources|  Netflow/Enclave netflow, Process use of network, Process monitoring   Requires Network|  Yes      Data exfiltration may be performed only at certain times of day or at certain intervals. This could be done to blend traffic patterns with normal activity or availability.  When scheduled exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such as Exfiltration Over Command and Control Channel and Exfiltration Over Alternative Protocol.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * ADVSTORESHELL collects, compresses, encrypts, and exfiltrates data to the C2 server every 10 minutes.1  ## Mitigation  Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary command and control infrastructure and malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool command and control signatures over time or construct protocols in such a way to avoid detection by common defensive tools.2  ## Detection  Monitor process file access patterns and network behavior. Unrecognized processes or scripts that appear to be traversing file systems and sending network traffic may be suspicious. Network connections to the same destination that occur at the same time of day for multiple days are suspicious.  '
p152
sS'Scripting'
p153
S'  T1064   Tactic|  Defense Evasion, Execution    Data Sources|  Process monitoring, File monitoring, Process command-line parameters   Defense Bypassed|  Process whitelisting      Adversaries may use scripts to aid in operations and perform multiple actions that would otherwise be manual. Scripting is useful for speeding up operational tasks and reducing the time required to gain access to critical resources. Some scripting languages may be used to bypass process monitoring mechanisms by directly interacting with the operating system at an API level instead of calling other programs. Common scripting languages for Windows include VBScript and PowerShell but could also be in the form of command-line batch scripts.  Many popular offensive frameworks exist which use forms of scripting for security testers and adversaries alike. Metasploit1, Veil2, and PowerSploit3 are three examples that are popular among penetration testers for exploit and post-compromise operations and include many features for evading defenses. Some adversaries are known to use PowerShell.4  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * APT1 has used batch scripting to automate execution of commands.5   * Deep Panda has used PowerShell scripts to download and execute programs in memory, without writing to disk.4   * APT29 has used encoded PowerShell scripts uploaded to CozyCar installations to download and install SeaDuke, as well as to evade defenses.67   * APT3 has used PowerShell on victim systems to download and run payloads after exploitation.8   * FIN6 has used a Metasploit PowerShell module to download and execute shellcode and to set up a local listener. FIN6 has also used scripting to iterate through a list of compromised PoS systems, copy data to a log file, and remove the original data files.9   * Stealth Falcon malware uses PowerShell and WMI to script data collection and command execution on the victim.10   * Gamaredon Group has used various batch scripts to establish C2, download additional files, and conduct other functions.11   * SeaDuke uses a module to execute Mimikatz with PowerShell to perform Pass the Ticket.6   * MoonWind uses batch scripts for various purposes, including to restart and uninstall itself.12  ## Mitigation  Turn off unused features or restrict access to scripting engines such as VBScript or scriptable administration frameworks such as PowerShell.  ## Detection  Scripting may be common on admin, developer, or power user systems, depending on job function. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.  Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.  '
p154
sS'Logon Scripts'
p155
S'  T1037   Tactic|  Lateral Movement, Persistence    System Requirements|  Write access to system or domain logon scripts   Data Sources|  File monitoring, Process monitoring   CAPEC ID|  CAPEC-564      Windows allows logon scripts to be run whenever a specific user or group of users log into a system.1 The scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server.  If adversaries can access these scripts, they may insert additional code into the logon script to execute their tools when a user logs in. This code can allow them to maintain persistence on a single system, if it is a local script, or to move laterally within a network, if the script is stored on a central server and pushed to many systems. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * JHUHUGIT has registered a Windows shell script under the Registry key HKCU\\Environment\\UserInitMprLogonScript to establish persistence.2  ## Mitigation  Restrict write access to logon scripts to specific administrators. Prevent access to administrator accounts by mitigating Credential Access techniques and limiting account access and permissions of Legitimate Credentials.  Identify and block potentially malicious software that may be executed through logon script modification by using whitelisting3 tools like AppLocker45 that are capable of auditing and/or blocking unknown programs.  ## Detection  Monitor logon scripts for unusual access by abnormal users or at abnormal times. Look for files added or modified by unusual accounts outside of normal administration duties.  '
p156
sS'Connection Proxy'
p157
S'  T1090   Tactic|  Command and Control    Data Sources|  Process use of network, Process monitoring, Netflow/Enclave netflow, Packet capture, Process monitoring   Requires Network|  Yes   Contributors|  Walker Johnson      A connection proxy is used to direct network traffic between systems or act as an intermediary for network communications. Many tools exist that enable traffic redirection through proxies or port redirection, including HTRAN, ZXProxy, and ZXPortMap.1  The definition of a proxy can also be expanded out to encompass trust relationships between networks in peer-to-peer, mesh, or trusted connections between networks consisting of hosts or systems that regularly communicate with each other.  The network may be within a single organization or across organizations with trust relationships. Adversaries could use these types of relationships to manage command and control communications, to reduce the number of simultaneous outbound network connections, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between victims to avoid suspicion.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * APT28 used other victims as proxies to relay command traffic, for instance using a compromised Georgian military email server as a hop point to NATO victims.2 The group has also used a tool that acts as a proxy to allow C2 even if the victim is behind a router.3   * A backdoor used by APT29 created a TOR hidden service to forward traffic from the TOR client to local ports 3389 (RDP), 139 (Netbios), and 445 (SMB) enabling full remote access from outside the network.4   * Strider has used local servers with both local network and Internet access to act as internal proxy nodes to exfiltrate data from other parts of the network without direct Internet access.5   * Hikit supports peer connections.6   * Regin leveraged several compromised universities as proxies to obscure its origin.7   * CHOPSTICK used a proxy server between victims and the C2 server.8   * The "ZJ" variant of BACKSPACE allows "ZJ link" infections with Internet access to relay traffic from "ZJ listen" to a command server.9   * Duqu can be configured to have commands relayed over a peer-to-peer network of infected hosts if some of the hosts do not have Internet access.10   * HTRAN is used for proxying connections to obfuscate command and control infrastructure.11   * netsh can be used to set up a proxy tunnel to allow remote host access to an infected host.12   * XTunnel relays traffic between a C2 server and a victim.13  ## Mitigation  Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific C2 protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.14  ## Detection  Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Network activities disassociated from user-driven actions from processes that normally require user direction are suspicious.  Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server or between clients that should not or often do not communicate with one another). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.14  '
p158
sS'Data Transfer Size Limits'
p159
S'  T1030   Tactic|  Exfiltration    Data Sources|  Packet capture, Netflow/Enclave netflow, Process use of network, Process monitoring   Requires Network|  Yes      An adversary may exfiltrate data in fixed size chunks instead of whole files or limit packet sizes below certain thresholds. This approach may be used to avoid triggering network data transfer threshold alerts.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Threat Group-3390 actors have split RAR files for exfiltration into parts.1  ## Mitigation  Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary command and control infrastructure and malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool command and control signatures over time or construct protocols in such a way to avoid detection by common defensive tools.2  ## Detection  Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). If a process maintains a long connection during which it consistently sends fixed size data packets or a process opens connections and sends fixed sized data packets at regular intervals, it may be performing an aggregate data transfer. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.2  '
p160
sS'Brute Force'
p161
S"  T1110   Tactic|  Credential Access    Permissions Required|  User   Data Sources|  Authentication logs      Adversaries may use brute force techniques to attempt access to accounts when passwords are unknown or when password hashes are obtained.  Credential Dumping to obtain password hashes may only get an adversary so far when Pass the Hash is not an option. Techniques to systematically guess the passwords used to compute hashes are available, or the adversary may use a pre-computed rainbow table. Cracking hashes is usually done on adversary- controlled systems outside of the target network.1  Adversaries may attempt to brute force logins without knowledge of passwords or hashes during an operation either with zero knowledge or by attempting a list of known or possible passwords. This is a riskier option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies.2  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Turla may attempt to connect to systems within a victim's network using net use commands and a predefined list or collection of passwords.3   * Lazarus Group malware attempts to connect to Windows shares for lateral movement by using a generated list of usernames, which center around permutations of the username Administrator, and weak passwords.4   * Net Crawler uses a list of known credentials gathered through credential dumping to guess passwords to accounts as it spreads throughout a network.2  ## Mitigation  Set account lockout policies after a certain number of failed login attempts to prevent passwords from being guessed. Use multifactor authentication.  ## Detection  It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network. Monitor authentication logs for system and application login failures on Legitimate Credentials. If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.  "
p162
sS'Standard Application Layer Protocol'
p163
S'  T1071   Tactic|  Command and Control    Data Sources|  Packet capture, Netflow/Enclave netflow, Process use of network, Malware reverse engineering, Process monitoring   Requires Network|  Yes      Adversaries may communicate using a common, standardized application layer protocol such as HTTP, HTTPS, SMTP, or DNS to avoid detection by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.  For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are RPC, SSH, or RDP.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * APT28 used SMTP as a communication channel in various implants, initially using self-registered Google Mail accounts and later compromised email servers of its victims. Later implants such as CHOPSTICK use a blend of HTTP and other legitimate channels, depending on module configuration.1   * FIN6 used the Plink command-line utility to create SSH tunnels to C2 servers.2   * Stealth Falcon malware communicates with its C2 server via HTTPS.3   * A Gamaredon Group file stealer can communicate over HTTP for C2.4   * APT12 has used RIPTIDE, a RAT that uses HTTP to communicate.5   * PlugX can be configured to use HTTP or DNS for command and control.6   * The Regin malware platform supports many standard protocols, including HTTP, HTTPS, and SMB.7   * Various implementations of CHOPSTICK communicate with C2 over HTTP, SMTP, and POP3.8   * The Carbanak malware communicates to its command server using HTTP with an encrypted payload.9   * BACKSPACE uses HTTP as a transport to communicate with its command server.10   * NETEAGLE will attempt to detect if the infected host is configured to a proxy. If so, NETEAGLE will send beacons via an HTTP POST request; otherwise it will send beacons via UDP/6000. NETEAGLE will also use HTTP to download resources that contain an IP address and Port Number pair to connect to for further C2. Adversaries can also use NETEAGLE to establish an RDP connection with a controller over TCP/7519.10   * The "Uploader" variant of HAMMERTOSS visits a hard-coded server over HTTP/S to download the images HAMMERTOSS uses to receive commands.11   * Duqu uses a custom command and control protocol that communicates over commonly used ports, and is frequently encapsulated by application layer protocols.12   * LOWBALL command and control occurs via HTTPS over port 443.13   * BUBBLEWRAP can communicate using HTTP or HTTPS.13   * JHUHUGIT communicates with its C2 server over HTTP.14   * ADVSTORESHELL connects to port 80 of a C2 server using Wininet API.15   * CozyCar\'s main method of communicating with its C2 servers is using HTTP or HTTPS.16   * PinchDuke transfers files from the compromised host via HTTP or HTTPS to a C2 server.17   * GeminiDuke uses HTTP and HTTPS for command and control.17   * CosmicDuke can use HTTP or HTTPS for command and control to hard-coded C2 servers.1718   * MiniDuke uses HTTP and HTTPS for command and control.17   * OnionDuke uses HTTP and HTTPS for C2.17   * SeaDuke uses HTTP and HTTPS for C2.17   * One variant of CloudDuke uses HTTP and HTTPS for C2.17   * RARSTONE uses SSL to encrypt its communication with its C2 server.19   * WinMM uses HTTP for C2.20   * Sys10 uses HTTP for C2.20   * DustySky has used both HTTP and HTTPS for C2.21   * ELMER uses HTTP for command and control.22   * 4H RAT uses HTTP for command and control.23   * 3PARA RAT uses HTTP for command and control.23   * pngdowner uses HTTP for command and control.23   * httpclient uses HTTP for command and control.23   * HTTPBrowser has used HTTP, HTTPS, and DNS for command and control.246   * OwaAuth uses incoming HTTP requests with a username keyword and commands and handles them as instructions to perform actions.6   * Sakula uses HTTP for C2.25   * Some variants of FakeM use SSL to communicate with C2 servers.26   * Psylo uses HTTPS for C2.26   * Elise communicates over HTTP or HTTPS for C2.27   * Emissary uses HTTP or HTTPS for C2.28   * Mis-Type network traffic can communicate over HTTP.29   * S-Type uses HTTP for C2.29   * ZLib communicates over HTTP for C2.29   * Hi-Zor communicates with its C2 server over HTTPS.30   * BlackEnergy communicates with its C2 server over HTTP.31   * Epic implements a command and control protocol over HTTP.32   * Pisloader uses DNS as its C2 protocol.33   * Remsec is capable of using HTTP, HTTPS, SMTP, and DNS for C2.343536   * ComRAT has used HTTP requests for command and control.37   * ... further results  ## Mitigation  Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.38  ## Detection  Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.38  '
p164
sS'Remote File Copy'
p165
S"  T1105   Tactic|  Command and Control, Lateral Movement    Permissions Required|  User   Data Sources|  File monitoring, Packet capture, Process use of network, Netflow/Enclave netflow, Network protocol analysis, Process monitoring   Requires Network|  Yes      Files may be copied from one system to another to stage adversary tools or other files over the course of an operation. Files may be copied from an external adversary-controlled system through the Command and Control channel to bring tools into the victim network or through alternate protocols with another tool such as FTP.  Adversaries may also copy files laterally between internal victim systems to support Lateral Movement with remote Execution using inherent file sharing protocols such as file sharing over SMB to connected network shares or with authenticated connections with Windows Admin Shares or Remote Desktop Protocol.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * After security appliances blocked one version of the ADVSTORESHELL implant, APT28 actors compiled and delivered another ADVSTORESHELL x64 backdoor.1 APT28 also used a first-stage downloader to contact the C2 server to obtain the second-stage implant.2   * After re-establishing access to a victim network, Threat Group-3390 actors download tools including gsecdump and WCE that are staged temporarily on websites that were previously compromised but never used.3   * Several Lazarus Group malware families are capable of downloading and executing binaries from its C2 server.45   * A Patchwork payload downloads additional malware from the C2 server.6   * Tools used by Gamaredon Group are capable of downloading and executing additional payloads.7   * CHOPSTICK is capable of performing remote file transmission.8   * LOWBALL uses the Dropbox API to request two files, one of which is the same file as the one dropped by the malicious email attachment. This is most likely meant to be a mechanism to update the compromised host with a new version of the LOWBALL malware.9   * JHUHUGIT retrieves and executes an additional payload from its C2 server.10   * SeaDuke is capable of uploading and downloading files.11   * CloudDuke downloads and executes additional malware from either a Web address or a Microsoft OneDrive account.12   * RARSTONE downloads its backdoor component from a C2 server and loads it directly into memory.13   * DustySky searches for network drives and removable media and duplicates itself onto them.14   * HTTPBrowser is capable of writing a file to the compromised system from the C2 server.3   * Sakula has the capability to download files.15   * CallMe has the capability to download a file to the victim from the C2 server.16   * Psylo has a command to download a file to the system from its C2 server.16   * MobileOrder has a command to download a file from the C2 server to the victim mobile device's SD card.16   * Mivast has the capability to download and execute .exe files.17   * Emissary has the capability to download files from the C2 server.18   * Misdat is capable of downloading files from the C2.19   * ZLib has the ability to download files.19   * Hi-Zor has the ability to upload and download files from its C2 server.20   * Kasidet has the ability to download and execute additional files.21   * Agent.btz attempts to download an encrypted binary from a specified domain.22   * Trojan.Karagany can upload, download, and execute files on the victim.23   * cmd can be used to copy files to a remotely connected system.24   * Crimson contains a command to retrieve files from its C2 server.25   * XTunnel is capable of downloading additional files.26   * Nidiran can download and execute files.27   * Pisloader has a command to upload a file to the victim machine.28   * Remsec contains a network loader to receive executable modules from remote attackers and run them on the local victim. It can also upload and download files over HTTP and HTTPS.2930   * BADNEWS is capable of downloading additional files through C2 channels, including a new version of itself.31   * Unknown Logger is capable of downloading remote files.31   * H1N1 contains a command to download and execute a file from a remotely hosted URL using WinINet HTTP requests.32   * After downloading its main config file, Downdelph downloads multiple payloads from C2 servers.33   * CORESHELL downloads another dropper from its C2 server.34   * PowerDuke has a command to download a file.35   * Shamoon can download an executable to run on the victim.36   * ChChes is capable of downloading files, including additional modules.3738   * POWERSOURCE has been observed being used to download TEXTMATE and the Cobalt Strike Beacon payload onto victims.39   * Pteranodon can download and execute additional files.7   * RTM can download additional files.40  ## Mitigation  Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.41  ## Detection  Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.  Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.41  "
p166
sS'Web Service'
p167
S'  T1102   Tactic|  Command and Control    Permissions Required|  User   Data Sources|  Host network interface, Netflow/Enclave netflow, Network protocol analysis, Packet capture   Requires Network|  Yes      Adversaries may use an existing, legitimate external Web service as a means for relaying commands to a compromised system.  Popular websites and social media can act as a mechanism for command and control and give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Carbanak has used a VBScript named "ggldr" that uses Google Apps Script, Sheets, and Forms services for C2.1   * Patchwork hides base64-encoded and encrypted C2 server locations in comments on legitimate websites.2   * RTM has used an RSS feed on Livejournal to update a list of encrypted C2 server names.3   * The CALENDAR malware communicates through the use of events in Google Calendar.4   * GLOOXMAIL communicates to servers operated by Google using the Jabber/XMPP protocol.56   * The "tDiscoverer" variant of HAMMERTOSS establishes a C2 channel by downloading resources from Web services like Twitter and GitHub. HAMMERTOSS binaries contain an algorithm that generates a different Twitter handle for the malware to check for instructions every day.7   * LOWBALL uses the Dropbox cloud storage service for command and control.8   * CozyCar uses Twitter as a backup C2 channel to Twitter accounts specified in its configuration file.9   * Some MiniDuke components use Twitter to initially obtain the address of a C2 server or as a backup if no hard-coded C2 server responds.10   * OnionDuke uses Twitter as a backup C2 method. It also has a module designed to post messages to the Russian VKontakte social media site.10   * One variant of CloudDuke uses a Microsoft OneDrive account to exchange commands and stolen data with its operators.10   * BLACKCOFFEE uses Microsofts TechNet Web portal to obtain an encoded tag containing the IP address of a command and control server.11   * BADNEWS can use multiple C2 channels, including RSS feeds, Github, forums, and blogs.12  ## Mitigation  Firewalls and Web proxies can be used to enforce external network communication policy. It may be difficult for an organization to block particular services because so many of them are commonly used during the course of business.  Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol or encoded commands used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.13  ## Detection  Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.13  '
p168
sS'Indicator Removal on Host'
p169
S'  T1070   Tactic|  Defense Evasion    Data Sources|  File monitoring, Process command-line parameters, Process monitoring   Defense Bypassed|  Anti-virus, Log analysis, Host intrusion prevention systems   CAPEC ID|  CAPEC-93      Adversaries may delete or alter generated event files on a host system, including potentially captured files such as quarantined malware. This may compromise the integrity of the security solution, causing events to go unreported, or make forensic analysis and incident response more difficult due to lack of sufficient data to determine what occurred.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * APT28 has cleared event logs using the commands wevtutil cl System and wevtutil cl Security.1   * APT29 used sdelete to remove artifacts from victims.2   * APT29 used multiple versions of malware, and also minimized re-use of commonly-identified indicators like MD5s and C2s.2   * gh0st RAT is able to wipe event logs.3   * Misdat is capable of deleting Registry keys used for persistence.4   * The BlackEnergy component KillDisk is capable of deleting Windows Event Logs.5   * After encrypting log files, the log encryption module in Prikormka deletes the original, unencrypted files from the host.6   * RTM has the ability to remove Registry entries that it created during execution.7  ## Mitigation  Automatically forward events to a log server or data repository to prevent conditions in which the adversary can locate and manipulate data on the local system. When possible, minimize time delay on event reporting to avoid prolonged storage on the local system. Protect generated event files that are stored locally with proper permissions and authentication. Obfuscate/encrypt event files locally and in transit to avoid giving feedback to an adversary.  ## Detection  File system monitoring may be used to detect improper deletion or modification of indicator files. Events not stored on the file system will require different detection mechanisms.  '
p170
sS'Service Execution'
p171
S'  T1035   Tactic|  Execution    Permissions Required|  Administrator, SYSTEM   Data Sources|  Windows Registry, Process command-line parameters, Process monitoring   Supports Remote|  Yes      Adversaries may execute a binary, command, or script via a method that interacts with Windows services, such as the Service Control Manager. This can be done by either creating a new service or modifying an existing service. This technique is the execution used in conjunction with New Service and Modify Existing Service during service persistence or privilege escalation.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Microsoft Sysinternals PsExec is a popular administration tool that can be used to execute binaries on remote systems using a temporary Windows service.1   * The net start and net stop commands can be used in Net to execute or stop Windows services.2   * Net Crawler uses PsExec to perform remote service manipulation to execute a copy of itself as part of lateral movement.3   * xCmd can be used to execute binaries on remote systems by creating and starting a service.4   * BBSRAT can start, stop, or delete services.5   * Shamoon creates a new service named ntssrv to execute the payload.6  ## Mitigation  Ensure that permissions disallow services that run at a higher permissions level from being created or interacted with by a user with a lower permission level. Also ensure that high permission level service binaries cannot be replaced or modified by users with a lower permission level.  Identify unnecessary system utilities or potentially malicious software that may be used to interact with Windows services, and audit and/or block them by using whitelisting7 tools, like AppLocker,89 or Software Restriction Policies10 where appropriate.11  ## Detection  Changes to service Registry entries and command-line invocation of tools capable of modifying services that do not correlate with known software, patch cycles, etc., may be suspicious. If a service is used only to execute a binary or script and not to persist, then it will likely be changed back to its original form shortly after the service is restarted so the service is not left broken, as is the case with the common administrator tool PsExec.  '
p172
sS'Execution through API'
p173
S'  T1106   Tactic|  Execution    Permissions Required|  User, Administrator, SYSTEM   Data Sources|  API monitoring, Process monitoring   Supports Remote|  No   Contributors|  Stefan Kanthak      Adversary tools may directly use the Windows application programming interface (API) to execute binaries. Functions such as the Windows API CreateProcess will allow programs and scripts to start other processes with proper path and argument parameters.1  Additional Windows API calls that can be used to execute binaries include:2    * CreateProcessA() and CreateProcessW(),   * CreateProcessAsUserA() and CreateProcessAsUserW(),   * CreateProcessInternalA() and CreateProcessInternalW(),   * CreateProcessWithLogonW(), CreateProcessWithTokenW(),   * LoadLibraryA() and LoadLibraryW(),   * LoadLibraryExA() and LoadLibraryExW(),   * LoadModule(),   * LoadPackagedLibrary(),   * WinExec(),   * ShellExecuteA() and ShellExecuteW(),   * ShellExecuteExA() and ShellExecuteExW()  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * PlugX can use the Windows API function CreateProcess to execute another process.3   * ADVSTORESHELL is capable of starting a process using CreateProcess.4   * BADNEWS has a command to download an .exe and execute it via CreateProcess API.5  ## Mitigation  Mitigating specific API calls will likely have unintended side effects, such as preventing legitimate software from operating properly. Efforts should be focused on preventing adversary tools from running earlier in the chain of activity and on identifying subsequent malicious behavior. Audit and/or block potentially malicious software by using whitelisting6 tools, like AppLocker,78 or Software Restriction Policies9 where appropriate.10  ## Detection  Monitoring API calls may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances, since benign use of Windows API functions such as CreateProcess are common and difficult to distinguish from malicious behavior. Correlation of other events with behavior surrounding API function calls using API monitoring will provide additional context to an event that may assist in determining if it is due to malicious behavior. Correlation of activity by process lineage by process ID may be sufficient.  '
p174
sS'Scheduled Task'
p175
S'  T1053   Tactic|  Execution, Persistence, Privilege Escalation    Permissions Required|  Administrator, SYSTEM   Effective Permissions|  Administrator, SYSTEM   Data Sources|  File monitoring, Process command-line parameters, Process monitoring   Supports Remote|  Yes   CAPEC ID|  CAPEC-557      Utilities such as at and schtasks, along with the Windows Task Scheduler, can be used to schedule programs or scripts to be executed at a date and time. The account used to create the task must be in the Administrators group on the local system. A task can also be scheduled on a remote system, provided the proper authentication is met to use RPC and file and printer sharing is turned on.1  An adversary may use task scheduling to execute programs at system startup or on a scheduled basis for persistence, to conduct remote Execution as part of Lateral Movement, to gain SYSTEM privileges, or to run a process under the context of a specified account.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * APT29 used named and hijacked scheduled tasks to establish persistence.2   * An APT3 downloader creates persistence by creating the following scheduled task: schtasks /create /tn "mysc" /tr C:\\Users\\Public\\test.exe /sc ONLOGON /ru "System".3   * APT18 actors used the native at Windows task scheduler tool to use scheduled tasks for execution on a victim network.4   * Threat Group-3390 actors use at to schedule tasks to run self-extracting RAR archives, which install HTTPBrowser or PlugX on other victims on a network.   * FIN6 has used scheduled tasks to establish persistence for various malware it uses, including downloaders known as HARDTACK and SHIPBREAD and PoS malware known as TRINITY.5   * Stealth Falcon malware creates a scheduled task entitled IE Web Cache to execute a malicious file hourly.6   * Adversaries can instruct Duqu to spread laterally by copying itself to shares it has enumerated and for which it has obtained legitimate credentials (via keylogging or other means). The remote host is then infected by using the compromised credentials to schedule a task on remote machines that executes the malware.7   * JHUHUGIT has registered itself as a scheduled task to run each time the current user logs in.89   * One persistence mechanism used by CozyCar is to register itself as a scheduled task.10   * CosmicDuke uses scheduled tasks typically named "Watchmon Service" for persistence.11   * at can be used to schedule a task on a system.12   * schtasks is used to schedule tasks on a Windows system to run at a specific date and time.13   * Remsec schedules the execution one of its modules by creating a new scheduler task.14   * Shamoon copies an executable payload to the target system by using Windows Admin Shares and then scheduling an unnamed task to execute the malware.1516   * Pteranodon schedules tasks to invoke its components in order to establish persistence.17   * RTM tries to add a scheduled task to establish persistence.18  ## Mitigation  Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create scheduled tasks. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for permission weaknesses in scheduled tasks that could be used to escalate privileges.19  Identify and block unnecessary system utilities or potentially malicious software that may be used to schedule tasks using whitelisting20 tools, like AppLocker,2122 or Software Restriction Policies23 where appropriate.24  ## Detection  Monitor scheduled task creation from common utilities using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Monitor process execution from the Windows Task Scheduler `taskeng.exe`. If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Monitor Windows Task Scheduler stores in `%systemroot%\\System32\\Tasks` for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.  Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks.25 Look for changes to tasks that do not correlate with known software, patch cycles, etc. Suspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data.  Monitor processes and command-line arguments for actions that could be taken to create tasks. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Tasks may also be created through Windows system management tools such as Windows Management Instrumentation and PowerShell, so additional logging may need to be configured to gather the appropriate data.  '
p176
sS'Disabling Security Tools'
p177
S'  T1089   Tactic|  Defense Evasion    Data Sources|  API monitoring, Anti-virus, File monitoring, Services, Windows Registry, Process command-line parameters   Defense Bypassed|  Anti-virus, File monitoring, Host intrusion prevention systems, Signature-based detection, File monitoring, Log analysis   CAPEC ID|  CAPEC-578      Adversaries may disable security tools to avoid possible detection of their tools and activities. This can take the form of killing security software or event logging processes, deleting Registry keys so that tools do not start at run time, or other methods to interfere with security scanning or event reporting.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Carbanak may use netsh to add local firewall rule exceptions.1   * Malware used by Putter Panda attempts to terminate processes corresponding to two components of Sophos Anti-Virus (SAVAdminService.exe and SavService.exe).2   * Various Lazarus Group malware modifies the Windows firewall to allow incoming connections or disable it entirely using netsh. 3 4 Lazarus Group malware TangoDelta attempts to terminate various processes associated with McAfee.4   * TinyZBot can disable Avira anti-virus.5   * The "ZR" variant of BACKSPACE will check to see if known host-based firewalls are installed on the infected systems. BACKSPACE will attempt to establish a C2 channel, then will examine open windows to identify a pop-up from the firewall software and will simulate a mouse-click to allow the connection to proceed.6   * SslMM identifies and kills anti-malware processes.7   * HDoor kills anti-virus found on the victim.7   * Kasidet has the ability to change firewall settings to allow a plug-in to be downloaded.8   * netsh can be used to disable local firewall settings.9   * Remsec can add or remove applications or ports on the Windows firewall or disable it entirely.10   * Unknown Logger has functionality to disable security tools, including Kaspersky, BitDefender, and MalwareBytes.11   * H1N1 kills and disables services for Windows Firewall, Windows Security Center, and Windows Defender.12  ## Mitigation  Ensure proper process, registry, and file permissions are in place to prevent adversaries from disabling or interfering with security services.  ## Detection  Monitor processes and command-line arguments to see if security tools are killed or stop running. Monitor Registry edits for modifications to services and startup programs that correspond to security tools. Lack of log or event file reporting may be suspicious.  '
p178
sS'Graphical User Interface'
p179
S'  T1061   Tactic|  Execution    Permissions Required|  User, Administrator, SYSTEM   Data Sources|  File monitoring, Binary file metadata, Process command-line parameters, Process monitoring   Supports Remote|  Yes      Cause a binary or script to execute based on interacting with the file through a graphical user interface (GUI) or in an interactive remote session such as Remote Desktop Protocol.  ## Mitigation  Prevent adversaries from gaining access to credentials through Credential Access that can be used to log into remote desktop sessions on systems.  Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to log into remote interactive sessions, and audit and/or block them by using whitelisting1 tools, like AppLocker23 and Software Restriction Policies4 where appropriate.5  ## Detection  Detection of execution through the GUI will likely lead to significant false positives. Other factors should be considered to detect misuse of services that can lead to adversaries gaining access to systems through interactive remote sessions.  Unknown or unusual process launches outside of normal behavior on a particular system occurring through remote interactive sessions are suspicious. Collect and audit security logs that may indicate access to and use of Legitimate Credentials to access remote systems within the network.  '
p180
sS'InstallUtil'
p181
S'  T1118   Tactic|  Defense Evasion, Execution    Permissions Required|  User   Data Sources|  Process monitoring, Process command-line parameters   Supports Remote|  No   Defense Bypassed|  Process whitelisting   Contributors|  Casey Smith      InstallUtil is a command-line utility that allows for installation and uninstallation of resources by executing specific installer components specified in .NET binaries.1 InstallUtil is located in the .NET directory on a Windows system: `C:\\Windows\\Microsoft.NET\\Framework\\v<version>\\InstallUtil.exe`.InstallUtil.exe is digitally signed by Microsoft.  Adversaries may use InstallUtil to proxy execution of code through a trusted Windows utility. InstallUtil may also be used to bypass process whitelisting through use of attributes within the binary that execute the class decorated with the attribute `[System.ComponentModel.RunInstaller(true)]`.2  ## Mitigation  InstallUtil may not be necessary within a given environment. Use application whitelisting configured to block execution of InstallUtil.exe if it is not required for a given system or network to prevent potential misuse by adversaries.  ## Detection  Use process monitoring to monitor the execution and arguments of InstallUtil.exe. Compare recent invocations of InstallUtil.exe with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. Command arguments used before and after the InstallUtil.exe invocation may also be useful in determining the origin and purpose of the binary being executed.  '
p182
sS'Security Software Discovery'
p183
S'  T1063   Tactic|  Discovery    Permissions Required|  User, Administrator, SYSTEM   Data Sources|  File monitoring, Process command-line parameters, Process monitoring      Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on the system. This may include things such as local firewall rules, anti-virus, and virtualization. These checks may be built into early-stage remote access tools.  Example commands that can be used to obtain security software information are netsh, `reg query` with Reg, `dir` with cmd, and Tasklist, but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Naikon uses commands such as netsh advfirewall firewall to discover local firewall settings.1   * Patchwork scanned the Program Files directories for a directory with the string Total Security (the installation path of the 360 Total Security antivirus tool).2   * CHOPSTICK checks for anti-virus, forensics, and virtualization software.3   * The Dyre crimeware toolkit has refined its detection of sandbox analysis environments by inspecting the process list and Registry.4   * The main CozyCar dropper checks whether the victim has an anti-virus product installed. If the installed product is on a predetermined list, the dropper will exit. Newer versions of CozyCar will check to ensure it is not being executed inside a virtual machine or a known malware analysis sandbox environment. If it detects that it is, it will exit. 5   * Tasklist can be used to enumerate security software currently running on a system by process name of known products.6   * DustySky checks for the existence of anti-virus.7   * Kasidet has the ability to identify any anti-virus installed on the infected system.8   * T9000 performs checks for various antivirus and security products during installation.9   * netsh can be used to discover system firewall settings.10   * A module in Prikormka collects information from the victim about installed anti-virus software.11   * Crimson contains a command to collect information about anti-virus software on the victim.12   * Remsec has a plugin to detect active drivers of some security products.13   * StreamEx has the ability to scan for security tools such as firewalls and antivirus tools.14   * Flame identifies security software such as antivirus through the Security module.15   * RTM can obtain information about security software on the victim.16  ## Mitigation  Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about local security software, and audit and/or block them by using whitelisting17 tools, like AppLocker,1819 or Software Restriction Policies20 where appropriate.21  ## Detection  System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained.  Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.  '
p184
sS'Rundll32'
p185
S'  T1085   Tactic|  Defense Evasion, Execution    Permissions Required|  User   Data Sources|  File monitoring, Binary file metadata, Process command-line parameters, Process monitoring   Supports Remote|  No   Defense Bypassed|  Process whitelisting, Anti-virus      The rundll32.exe program can be called to execute an arbitrary binary. Adversaries may take advantage of this functionality to proxy execution of code to avoid triggering security tools that may not monitor execution of the rundll32.exe process because of whitelists or false positives from Windows using rundll32.exe for normal operations.  ## Examples    * APT28 executed CHOPSTICK by using rundll32 commands such as rundll32.exe C:\\Windows\\twain_64.dll.1 APT28 also executed a .dll for a first stage dropper using rundll32.exe.2   * Carbanak installs VNC server software that executes through rundll32.3   * JHUHUGIT is executed using rundll32.exe.4   * ADVSTORESHELL has used rundll32.exe in a Registry value to establish persistence.2   * The CozyCar dropper copies the system file rundll32.exe to the install location for the malware, then uses the copy of rundll32.exe to load and execute the main CozyCar component.5   * Sakula calls cmd.exe to run various DLL files via rundll32.6   * After copying itself to a DLL file, a variant of Elise calls the DLL file using rundll32.exe.7   * Variants of Emissary have used rundll32.exe in Registry values added to establish persistence.8   * Prikormka uses rundll32.exe to load its DLL.9   * CORESHELL is installed via execution of rundll32 with an export named "init" or "InitW."10   * PowerDuke uses rundll32.exe to load.11   * The Winnti installer loads a DLL using rundll32.12   * StreamEx uses rundll32 to call an exported function.13   * Rundll32.exe is used as a way of executing Flame at the command-line.14   * Pteranodon executes functions using rundll32.exe.15   * RTM runs its core DLL file using rundll32.exe.16  ## Detection  Use process monitoring to monitor the execution and arguments of rundll32.exe. Compare recent invocations of rundll32.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity. Command arguments used with the rundll32.exe invocation may also be useful in determining the origin and purpose of the DLL being loaded.  '
p186
sS'Regsvr32'
p187
S"  T1117   Tactic|  Defense Evasion, Execution    Permissions Required|  User, Administrator   Data Sources|  Loaded DLLs, Process monitoring, Process command-line parameters, Windows Registry   Supports Remote|  No   Defense Bypassed|  Process whitelisting, Anti-virus   Contributors|  Casey Smith      Regsvr32.exe is a command-line program used to register and unregister object linking and embedding controls, including dynamic link libraries (DLLs), on Windows systems. Regsvr32.exe can be used to execute arbitrary binaries.1  Adversaries may take advantage of this functionality to proxy execution of code to avoid triggering security tools that may not monitor execution of, and modules loaded by, the regsvr32.exe process because of whitelists or false positives from Windows using regsvr32.exe for normal operations. Regsvr32.exe is also a Microsoft signed binary.  Regsvr32.exe can also be used to specifically bypass process whitelisting using functionality to load COM scriptlets to execute DLLs under user permissions. Since regsvr32.exe is network and proxy aware, the scripts can be loaded by passing a uniform resource locator (URL) to file on an external Web server as an argument during invocation. This method makes no changes to the Registry as the COM object is not actually registered, only executed.2 This variation of the technique has been used in campaigns targeting governments.3  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Deep Panda has used regsvr32.exe to execute a server variant of Derusbi in victim networks.4   * Derusbi variants have been seen that use Registry persistence to proxy execution through regsvr32.exe.5   * Hi-Zor executes using regsvr32.exe called from the Registry Run Keys / Start Folder persistence mechanism.6  ## Mitigation  Microsoft's Enhanced Mitigation Experience Toolkit (EMET) Attack Surface Reduction (ASR) feature can be used to block regsvr32.exe from being used to bypass whitelisting.7  ## Detection  Use process monitoring to monitor the execution and arguments of regsvr32.exe. Compare recent invocations of regsvr32.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Command arguments used before and after the regsvr32.exe invocation may also be useful in determining the origin and purpose of the script or DLL being loaded.  "
p188
sS'Security Support Provider'
p189
S"  T1101   Tactic|  Persistence    Permissions Required|  Administrator   Data Sources|  DLL monitoring, Windows Registry, Loaded DLLs      Windows Security Support Provider (SSP) DLLs are loaded into the Local Security Authority (LSA) process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs. The SSP configuration is stored in two Registry keys: `HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages` and `HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages`. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called. 1  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * The Mimikatz credential dumper contains an implementation of an SSP.2  ## Mitigation  Windows 8.1 and Windows Server 2012 R2 may make LSA run as a Protected Process Light (PPL) by setting the Registry key `HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\RunAsPPL`, which requires all SSP DLLs to be signed by Microsoft.13  ## Detection  Monitor the Registry for changes to the SSP Registry keys. Monitor the LSA process for DLL loads. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned SSP DLLs try to load into the LSA by setting the Registry key `HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\LSASS.exe` with AuditLevel = 8.13  "
p190
sS'Timestomp'
p191
S'  T1099   Tactic|  Defense Evasion    Permissions Required|  User, Administrator, SYSTEM   Data Sources|  File monitoring, Process monitoring, Process command-line parameters   Defense Bypassed|  Host forensic analysis      Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder. This is done, for example, on files that have been modified or created by the adversary so that they do not appear conspicuous to forensic investigators or file analysis tools. Timestomping may be used along with file name Masquerading to hide malware and tools.1  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * APT28 has performed timestomping on victim files.2   * Several Lazarus Group malware families use timestomping, including modifying the last write timestamp of a specified Registry key to a random date, as well as copying the timestamp for legitimate .exe files (such as calc.exe or mspaint.exe) to its dropped files.34   * The Derusbi malware supports timestomping.56   * 3PARA RAT has a command to set certain attributes such as creation/modification timestamps on files.7   * OwaAuth has a command to timestop a file or directory.8   * Psylo has a command to conduct timestomping by setting a specified files timestamps to match those of a system file in the System32 directory.9   * Elise performs timestomping of a CAB file it creates.10   * Many Misdat samples were programmed using Borland Delphi, which will mangle the default PE compile timestamp of a file.11   * USBStealer sets the timestamps of its dropper files to the last-access and last-write timestamps of a standard Windows library chosen on the system.12  ## Mitigation  Mitigation of timestomping specifically is likely difficult. Efforts should be focused on preventing potentially malicious software from running. Identify and block potentially malicious software that may contain functionality to perform timestomping by using whitelisting13 tools like AppLocker1415 or Software Restriction Policies16 where appropriate.17  ## Detection  Forensic techniques exist to detect aspects of files that have had their timestamps modified.1 It may be possible to detect timestomping using file modification monitoring that collects information on file handle opens and can compare timestamp values.  '
p192
sS'Commonly Used Port'
p193
S'  T1043   Tactic|  Command and Control    Data Sources|  Packet capture, Netflow/Enclave netflow, Process use of network, Process monitoring   Requires Network|  Yes      Adversaries may communicate over a commonly used port to bypass firewalls or network detection systems and to blend with normal network activity to avoid more detailed inspection. They may use commonly open ports such as    * TCP:80 (HTTP)   * TCP:443 (HTTPS)   * TCP:25 (SMTP)   * TCP/UDP:53 (DNS)  They may use the protocol associated with the port or a completely different protocol.  For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), examples of common ports are    * TCP/UDP:135 (RPC)   * TCP/UDP:22 (SSH)   * TCP/UDP:3389 (RDP)  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * C2 traffic for most Threat Group-3390 tools occurs over ports 53, 80, and 443.1   * Some Lazarus Group malware uses a list of ordered port numbers to choose a port for C2 traffic, which includes commonly used ports such as 443, 53, 80, 25, and 8080.2   * RIPTIDE is a RAT that communicates with HTTP.3   * Derusbi beacons to destination port 443.4   * Duqu uses a custom command and control protocol that communicates over commonly used ports, and is frequently encapsulated by application layer protocols.5   * LOWBALL command and control occurs via HTTPS over port 443.6   * One HTTPBrowser variant connected to its C2 server over port 8080.7   * Mivast communicates over port 80 for C2.8   * Misdat network traffic communicates over common ports like 80, 443, or 1433.9   * Mis-Type communicates over common ports such as TCP 80, 443, and 25.9   * S-Type uses ports 80, 443, and 8080 for C2.9   * Hi-Zor communicates with its C2 server over port 443.10   * FTP operates over ports 21 and 20.11   * Nidiran communicates with its C2 domain over ports 443 and 8443.12   * BBSRAT uses HTTP TCP port 80 and HTTPS TCP port 443 for communications.13   * PowerDuke connects over 443 for C2.14   * Shamoon has used TCP port 8080 for C2.15   * MoonWind communicates over ports 80, 443, 53, and 8080 via raw sockets instead of the protocols usually associated with the ports.16  ## Mitigation  Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.17  ## Detection  Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.17  '
p194
sS'Exfiltration Over Alternative Protocol'
p195
S'  T1048   Tactic|  Exfiltration    Data Sources|  User interface, Process monitoring, Process use of network, Packet capture, Netflow/Enclave netflow, Network protocol analysis   Requires Network|  Yes      Data exfiltration is performed with a different protocol from the main command and control protocol or channel. The data is likely to be sent to an alternate network location from the main command and control server. Alternate protocols include FTP, SMTP, HTTP/S, DNS, or some other network protocol. Different channels could include Internet Web services such as cloud storage.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Lazarus Group malware SierraBravo-Two generates an email message via SMTP containing information about newly infected victims.1   * HAMMERTOSS exfiltrates data by uploading it to accounts created by the actors on Web cloud storage providers for the adversaries to retrieve later.2   * CosmicDuke exfiltrates collected files over FTP or WebDAV. Exfiltration servers can be separately configured from C2 servers.3   * FTP may be used to exfiltrate data separate from the main command and control protocol.4   * Cherry Picker exfiltrates files over FTP.5   * Remsec can exfiltrate data via a DNS tunnel or email, separately from its C2 channel.6  ## Mitigation  Follow best practices for network firewall configurations to allow only necessary ports and traffic to enter and exit the network. For example, if services like FTP are not required for sending information outside of a network, then block FTP-related ports at the network perimeter. Enforce proxies and use dedicated servers for services such as DNS and only allow those systems to communicate over respective ports/protocols, instead of all systems within a network.7 These actions will help reduce command and control and exfiltration path opportunities.  Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary command and control infrastructure and malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool command and control signatures over time or construct protocols in such a way to avoid detection by common defensive tools.8  ## Detection  Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.8  '
p196
sS'Exfiltration Over Other Network Medium'
p197
S'  T1011   Tactic|  Exfiltration    Data Sources|  User interface, Process monitoring   Requires Network|  Yes   Contributors|  Itzik Kotler, SafeBreach      Exfiltration could occur over a different network medium than the command and control channel. If the command and control network is a wired Internet connection, the exfiltration may occur, for example, over a WiFi connection, modem, cellular data connection, Bluetooth, or another radio frequency (RF) channel. Adversaries could choose to do this if they have sufficient access or proximity, and the connection might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.  ## Examples    * Flame has a module named BeetleJuice that contains Bluetooth functionality that may be used in different ways, including transmitting encoded information from the infected system over the Bluetooth protocol, acting as a Bluetooth beacon, and identifying other Bluetooth devices in the vicinity.1  ## Detection  Processes utilizing the network that do not normally have network communication or have never been seen before. Processes that normally require user-driven events to access the network (for example, a mouse click or key press) but access the network without such may be malicious.  '
p198
sS'File System Logical Offsets'
p199
S'  T1006   Tactic|  Defense Evasion    Permissions Required|  Administrator   Data Sources|  API monitoring   Defense Bypassed|  File monitoring, File system access controls      Windows allows programs to have direct access to logical volumes. Programs with direct access may read and write files directly from the drive by analyzing file system data structures. This technique bypasses Windows file access controls as well as file system monitoring tools.1  Utilities, such as NinjaCopy, exist to perform these actions in PowerShell.2  ## Mitigation  Identify potentially malicious software that may be used to access logical drives in this manner, and audit and/or block it by using whitelisting3 tools, like AppLocker,45 or Software Restriction Policies6 where appropriate.7  ## Detection  Monitor handle opens on drive volumes that are made by processes to determine when they may directly access logical drives.2  Monitor processes and command-line arguments for actions that could be taken to copy files from the logical drive and evade common file system protections. Since this technique may also be used through PowerShell, additional logging of PowerShell scripts is recommended.  '
p200
sS'DLL Search Order Hijacking'
p201
S'  T1038   Tactic|  Defense Evasion, Persistence, Privilege Escalation    System Requirements|  Ability to add a DLL, manifest file, or .local file, directory, or junction.   Permissions Required|  User, Administrator, SYSTEM   Effective Permissions|  User, Administrator, SYSTEM   Data Sources|  File monitoring, DLL monitoring, Process command-line parameters, Process monitoring   Defense Bypassed|  Process whitelisting   CAPEC ID|  CAPEC-471   Contributors|  Stefan Kanthak      Windows systems use a common method to look for required DLLs to load into a program.1 Adversaries may take advantage of the Windows DLL search order and programs that ambiguously specify DLLs to gain privilege escalation and persistence.  Adversaries may perform DLL preloading, also called binary planting attacks,2 by placing a malicious DLL with the same name as an ambiguously specified DLL in a location that Windows searches before the legitimate DLL. Often this location is the current working directory of the program. Remote DLL preloading attacks occur when a program sets its current directory to a remote location such as a Web share before loading a DLL.3 Adversaries may use this behavior to cause the program to load a malicious DLL.  Adversaries may also directly modify the way a program loads DLLs by replacing an existing DLL or modifying a .manifest or .local redirection file, directory, or junction to cause the program to load a different DLL to maintain persistence or privilege escalation.456  If a search order-vulnerable program is configured to run at a higher privilege level, then the adversary-controlled DLL that is loaded will also be executed at the higher level. In this case, the technique could be used for privilege escalation from user to administrator or SYSTEM or from administrator to SYSTEM, depending on the program.  Programs that fall victim to path hijacking may appear to behave normally because malicious DLLs may be configured to also load the legitimate DLLs they were meant to replace.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * HTTPBrowser abuses the Windows DLL load order by using a legitimate Symantec anti-virus binary, VPDN_LU.exe, to load a malicious DLL that mimics a legitimate Symantec DLL, navlu.dll.7   * Variants of WEBC2 achieve persistence by using DLL search order hijacking, usually by copying the DLL file to%SYSTEMROOT% (C:\\WINDOWS\\ntshrui.dll).8   * Prikormka uses DLL search order hijacking for persistence by saving itself as ntshrui.dll to the Windows directory so it will load before the legitimate ntshrui.dll saved in the System32 subdirectory.9   * Downdelph uses DLL search order hijacking of the Windows executable sysprep.exe to escalate privileges.10  ## Mitigation  Use auditing tools capable of detecting DLL search order hijacking opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for DLL hijacking weaknesses.11  Identify and block potentially malicious software that may be executed through search order hijacking by using whitelisting12 tools like AppLocker1314 that are capable of auditing and/or blocking unknown DLLs.  ## Detection  Monitor file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious. Monitor DLLs loaded into a process and detect DLLs that have the same file name but abnormal paths. Modifications to or creation of .manifest and .local redirection files that do not correlate with software updates are suspicious. Disallow loading of remote DLLs.15  '
p202
sS'Remote Desktop Protocol'
p203
S'  T1076   Tactic|  Lateral Movement    System Requirements|  RDP service enabled, account in the Remote Desktop Users group.   Permissions Required|  User, Remote Desktop Users   Data Sources|  Authentication logs, Netflow/Enclave netflow, Process monitoring   CAPEC ID|  CAPEC-555      Remote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS).1 There are other implementations and third-party tools that provide graphical access Remote Services similar to RDS.  Adversaries may connect to a remote system over RDP/RDS to expand access if the service is enabled and allows access to accounts with known credentials. Adversaries will likely use Credential Access techniques to acquire credentials to use with RDP. Adversaries may also use RDP in conjunction with the Accessibility Features technique for Persistence.2  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * The Axiom group is known to have used RDP during operations.3   * The APT1 group is known to have used RDP during operations.4   * Lazarus Group malware SierraCharlie uses RDP for propagation.5   * FIN6 used RDP to move laterally in victim networks.6   * Patchwork attempted to use RDP to move laterally.7  ## Mitigation  Disable the RDP service if it is unnecessary, remove unnecessary accounts and groups from Remote Desktop Users groups, and enable firewall rules to block RDP traffic between network security zones. Audit the Remote Desktop Users group membership regularly. Remove the local Administrators group from the list of groups allowed to log in through RDP. Limit remote user permissions if remote access is necessary. Use remote desktop gateways and multifactor authentication for remote logins.8  ## Detection  Use of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.  '
p204
sS'Data from Local System'
p205
S"  T1005   Tactic|  Collection    System Requirements|  Privileges to access certain files and directories   Data Sources|  File monitoring, Process monitoring, Process command-line parameters      Sensitive data can be collected from local system sources, such as the file system or databases of information residing on the system prior to Exfiltration.  Adversaries will often search the file system on computers they have compromised to find files of interest. They may do this using a Command-Line Interface, such as cmd, which has functionality to interact with the file system to gather information. Some adversaries may also use Automated Collection on the local system.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Ke3chang gathered information and files from local directories for exfiltration.1   * APT1 has collected files from a local victim.2   * Threat Group-3390 actors saved RAR files for exfiltration in the Recycler directory on a victim system.3   * Dust Storm has used Android backdoors capable of exfiltrating specific files directly from the infected devices.4   * Lazarus Group malware IndiaIndia saves information gathered about the victim to a file that is uploaded to one of its 10 C2 servers.5 Lazarus Group malware RomeoDelta copies specified directories from the victim's machine, then archives and encrypts the directories before uploading to its C2 server.6   * Stealth Falcon malware gathers data from the local victim system.7   * Patchwork collected and exfiltrated files from the infected system.8   * FLASHFLOOD searches for interesting files (either a default or customized set of file extensions) on the local system. FLASHFLOOD will scan the My Recent Documents, Desktop, Temporary Internet Files, and TEMP directories. FLASHFLOOD also collects information stored in the Windows Address Book.9   * CosmicDuke steals user files from local hard drives with file extensions that match a predefined list.10   * MobileOrder exfiltrates data collected from the victim mobile device.11   * Rover searches for files on local drives based on a predefined list of file extensions.12   * When it first starts, BADNEWS crawls the victim's local drives and collects documents with the following extensions: .doc, .docx, .pdf, .ppt, .pptx, and .txt.13  ## Mitigation  Identify unnecessary system utilities or potentially malicious software that may be used to collect data from the local system, and audit and/or block them by using whitelisting14 tools, like AppLocker,1516 or Software Restriction Policies17 where appropriate.18  ## Detection  Monitor processes and command-line arguments for actions that could be taken to collect files from a system. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.  "
p206
sS'System Service Discovery'
p207
S'  T1007   Tactic|  Discovery    Permissions Required|  User, Administrator, SYSTEM   Data Sources|  Process command-line parameters, Process monitoring   CAPEC ID|  CAPEC-574      Adversaries may try to get information about registered services. Commands that may obtain information about services using operating system utilities are "sc," "tasklist /svc" using Tasklist, and "net start" using Net, but adversaries may also use other tools as well.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Ke3chang performs service discovery using net start commands.1   * Turla surveys a system upon check-in to discover running services and associated processes using the tasklist /svc command.2   * admin@338 actors used the following command following exploitation of a machine with LOWBALL malware to obtain information about services: net start &gt;&gt;%temp%\\download3   * After compromising a victim, Poseidon Group discovers all running services.4   * Sykipot may use net start to display running services.5   * The net start command can be used in Net to find information about Windows services.6   * GeminiDuke collects information on programs and services on the victim that are configured to automatically run at startup.7   * Tasklist can be used to discover services running on a system.8   * Elise executes net start after initial communication is made to the remote server.9   * Emissary has the capability to execute the command net start to interact with services.10   * S-Type runs the command net start on a victim.11   * ZLib has the ability to discover and manipulate Windows services.11   * BBSRAT can query service configuration information.12  ## Mitigation  Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about services, and audit and/or block them by using whitelisting13 tools, like AppLocker,1415 or Software Restriction Policies16 where appropriate.17  ## Detection  System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.  Monitor processes and command-line arguments for actions that could be taken to gather system information related to services. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.  '
p208
sS'Automated Collection'
p209
S'  T1119   Tactic|  Collection    System Requirements|  Permissions to access directories and files that store information of interest.   Permissions Required|  User   Data Sources|  File monitoring, Process command-line parameters, Data loss prevention      Once established within a system or network, an adversary may use automated techniques for collecting internal data. Methods for performing this technique could include use of Scripting to search for and copy information fitting set criteria such as file type, location, or name at specific time intervals. This functionality could also be built into remote access tools.  This technique may incorporate use of other techniques such as File and Directory Discovery and Remote File Copy to identify and move files.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * FIN6 has used a script to iterate through a list of compromised PoS systems, copy data to a log file, and remove the original data files.1   * Rover automatically collects files from the local system and removable drives based on a predefined list of file extensions on a regular timeframe.2   * T9000 searches removable storage devices for files with a pre-defined list of file extensions (e.g. *.doc, *.ppt, *.xls, *.docx, *.pptx, *.xlsx). Any matching files are encrypted and written to a local user directory.3   * For all non-removable drives on a victim, USBStealer executes automated collection of certain files for later exfiltration.4   * RTM monitors browsing activity and automatically captures screenshots if a victim browses to a URL matching one of a list of strings.5  ## Mitigation  Encryption and off-system storage of sensitive information may be one way to mitigate collection of files, but may not stop an adversary from acquiring the information if an intrusion persists over a long period of time and the adversary is able to discover and access the data through other means. A keylogger installed on a system may be able to intercept passwords through Input Capture and be used to decrypt protected documents that an adversary may have collected. Strong passwords should be used to prevent offline cracking of encrypted documents through Brute Force techniques.  Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to collect files and audit and/or block them by using whitelisting6 tools, like AppLocker,78 or Software Restriction Policies9 where appropriate.10  ## Detection  Depending on the method used, actions could include common file system commands and parameters on the command-line interface within batch files or scripts. A sequence of actions like this may be unusual, depending on the system and network environment. Automated collection may occur along with other techniques such as Data Staged. As such, file access monitoring that shows an unusual process performing sequential file opens and potentially copy actions to another location on the file system for many files at once may indicate automated collection behavior. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.  '
p210
sS'Shortcut Modification'
p211
S"  T1023   Tactic|  Persistence    Permissions Required|  User, Administrator   Data Sources|  File monitoring, Process command-line parameters, Process monitoring      Shortcuts or symbolic links are ways of referencing other files or programs that will be opened or executed when the shortcut is clicked or executed by a system startup process. Adversaries could use shortcuts to execute their tools for persistence. They may create a new shortcut as a means of indirection that may use Masquerading to look like a legitimate program. Adversaries could also edit the target path or entirely replace an existing shortcut so their tools will be executed instead of the intended legitimate program.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * APT29 used .lnk files to establish persistence.1   * TinyZBot can create a shortcut in the Windows startup folder for persistence.2   * SHIPSHAPE achieves persistence by creating a shortcut in the Startup folder.3   * BACKSPACE achieves persistence by creating a shortcut to itself in the CSIDL_STARTUP directory.3   * SPACESHIP achieves persistence by creating a shortcut in the current user's Startup folder.3   * SeaDuke is capable of persisting via a .lnk file stored in the Startup directory.4   * To establish persistence, SslMM identifies the Start Menu Startup directory and drops a link to its own executable disguised as an Office Start, Yahoo Talk, MSN Gaming Z0ne, or MSN Talk shortcut.5   * S-Type may create the file%HOMEPATH%\\Start Menu\\Programs\\Startup\\Realtek {Unique Identifier}.lnk, which points to the malicious msdtc.exe file already created in the%CommonFiles% directory.6   * The BlackEnergy 3 variant drops its main DLL component and then creates a .lnk shortcut to that file in the startup folder.7  ## Mitigation  Identify and block unknown, potentially malicious software that may be executed through shortcut modification by using whitelisting8 tools, like AppLocker,910 or Software Restriction Policies11 where appropriate.12  ## Detection  Since a shortcut's target path likely will not change, modifications to shortcut files that do not correlate with known software changes, patches, removal, etc., may be suspicious. Analysis should attempt to relate shortcut file change or creation events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections.  "
p212
sS'Custom Cryptographic Protocol'
p213
S"  T1024   Tactic|  Command and Control    Data Sources|  Packet capture, Netflow/Enclave netflow, Process use of network, Malware reverse engineering, Process monitoring   Requires Network|  Yes      Adversaries may use a custom cryptographic protocol or algorithm to hide command and control traffic. A simple scheme, such as XOR-ing the plaintext with a fixed key, will produce a very weak ciphertext.  Custom encryption schemes may vary in sophistication. Analysis and reverse engineering of malware samples may be enough to discover the algorithm and encryption key used.  Some adversaries may also attempt to implement their own version of a well- known cryptographic algorithm instead of using a known implementation library, which may lead to unintentional errors.1  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Several Lazarus Group malware families encrypt C2 traffic using custom code that uses XOR with an ADD operation and XOR with a SUB operation.2   * Hikit performs XOR encryption.3   * Lurid performs XOR encryption.4   * Taidoor is known to utilize encryption within network protocols.5   * Derusbi obfuscates C2 traffic with variable 4-byte XOR keys.6   * Before being appended to image files, HAMMERTOSS commands are encrypted with a key composed of both a hard-coded value and a string contained on that day's tweet. To decrypt the commands, an investigator would need access to the intended malware sample, the day's tweet, and the image file containing the command.7   * CosmicDuke contains a custom version of the RC4 algorithm that includes a programming error.1   * Sys10 uses an XOR 0x1 loop to encrypt its C2 domain.8   * 4H RAT obfuscates C2 communication using a 1-byte XOR with the key 0xBE.9   * 3PARA RAT will use an 8-byte XOR key derived from the string HYF54&amp;%9&amp;jkMCXuiS instead if the DES decoding fails.9   * httpclient encrypts C2 content with XOR using a single byte, 0x12.9   * Sakula encodes C2 traffic with single-byte XOR keys.10   * The original variant of FakeM encrypts C2 traffic using a custom encryption cipher that uses an XOR key of YHCRA and bit rotation between each XOR operation. FakeM has also included HTML code in C2 traffic in an apparent attempt to evade detection. Additionally, some variants of FakeM use modified SSL code for communications back to C2 servers, making SSL decryption ineffective.11   * The C2 server response to a beacon sent by a variant of Emissary contains a 36-character GUID value that is used as an encryption key for subsequent network communications. Some variants of Emissary use various XOR operations to encrypt C2 data.12   * BBSRAT uses a custom encryption algorithm on data sent back to the C2 server over HTTP.13   * BADNEWS encrypts C2 data with a ROR by 3 and an XOR by 0x23.14   * CORESHELL C2 messages are encrypted with custom stream ciphers using six-byte or eight-byte keys.15   * ChChes can encrypt C2 data with a custom technique using MD5, base64-encoding, and RC4.1617   * RTM encrypts C2 traffic with a custom RC4 variant.18  ## Mitigation  Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Since the custom protocol used may not adhere to typical protocol standards, there may be opportunities to signature the traffic on a network level for detection. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.19  ## Detection  If malware uses custom encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.20  In general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect when communications do not follow the expected protocol behavior for the port that is being used.19  "
p214
sS'Local Port Monitor'
p215
S'  T1013   Tactic|  Persistence, Privilege Escalation    Permissions Required|  Administrator, SYSTEM   Effective Permissions|  SYSTEM   Data Sources|  File monitoring, API monitoring, DLL monitoring, Windows Registry, Process monitoring   Contributors|  Stefan Kanthak      A port monitor can be set through the AddMonitor API call to set a DLL to be loaded at startup.1 This DLL can be located in `C:\\Windows\\System32` and will be loaded by the print spooler service, spoolsv.exe, on boot.2 Alternatively, an arbitrary DLL can be loaded if permissions allow writing a fully-qualified pathname for that DLL to `HKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Monitors`.2 The spoolsv.exe process also runs under SYSTEM level permissions.  Adversaries can use this technique to load malicious code at startup that will persist on system reboot and execute as SYSTEM.  ## Mitigation  Identify and block potentially malicious software that may persist in this manner by using whitelisting3 tools capable of monitoring DLL loads by processes running under SYSTEM permissions.  ## Detection    * Monitor process API calls to AddMonitor.   * Monitor DLLs that are loaded by spoolsv.exe for DLLs that are abnormal.   * New DLLs written to the System32 directory that do not correlate with known good software or patching may be suspicious.   * Monitor registry writes to `HKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Monitors`.   * Run the Autoruns utility, which checks for this Registry key as a persistence mechanism4  '
p216
sS'Legitimate Credentials'
p217
S"  T1078   Tactic|  Defense Evasion, Persistence, Privilege Escalation    Permissions Required|  User, Administrator   Effective Permissions|  User, Administrator   Data Sources|  Authentication logs, Process monitoring   Defense Bypassed|  Anti-virus, Firewall, Host intrusion prevention systems, Network intrusion detection system, Process whitelisting, System access controls   CAPEC ID|  CAPEC-560      Adversaries may steal the credentials of a specific user or service account using Credential Access techniques. Compromised credentials may be used to bypass access controls placed on various resources on hosts and within the network and may even be used for persistent access to remote systems. Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.  The overlap of credentials and permissions across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise.1  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Carbanak actors used legitimate credentials of banking employees to perform operations that sent them millions of dollars.2   * PittyTiger attempts to obtain legitimate credentials during operations.3   * APT18 actors leverage legitimate credentials to log into external remote services.4   * Threat Group-3390 actors obtain legitimate credentials using a variety of methods and use them to further lateral movement on victim networks.5   * Threat Group-1314 actors used compromised credentials for the victim's endpoint management platform, Altiris, to move laterally.6   * To move laterally on a victim network, FIN6 has used credentials stolen from various systems on which it gathered usernames and password hashes.7   * Suckfly used legitimate account credentials that they dumped to navigate the internal victim network as though they were the legitimate account owner.8   * Adversaries can instruct Duqu to spread laterally by copying itself to shares it has enumerated and for which it has obtained legitimate credentials (via keylogging or other means). The remote host is then infected by using the compromised credentials to schedule a task on remote machines that executes the malware.9   * Some SeaDuke samples have a module to extract email from Microsoft Exchange servers using compromised credentials.10   * If Shamoon cannot access shares using current privileges, it attempts access using hard coded, domain-specific credentials gathered earlier in the intrusion.11  ## Mitigation  Take measures to detect or prevent techniques such as Credential Dumping or installation of keyloggers to acquire credentials through Input Capture. Limit credential overlap across systems to prevent access if account credentials are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled and use of accounts is segmented, as this is often equivalent to having a local administrator account with the same password on all systems. Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account.112  ## Detection  Configure robust, consistent account activity audit policies across the enterprise.13 Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).  "
p218
sS'Clipboard Data'
p219
S'  T1115   Tactic|  Collection    Data Sources|  API monitoring      Adversaries may collect data stored in the Windows clipboard from users copying information within or between applications.  Applications can access clipboard data by using the Windows API.1  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * TinyZBot contains functionality to collect information from the clipboard.2   * CosmicDuke copies and exfiltrates the clipboard contents every 30 seconds.3   * RTM collects data from the clipboard.4  ## Mitigation  Instead of blocking software based on clipboard capture behavior, identify potentially malicious software that may contain this functionality, and audit and/or block it by using whitelisting5 tools, like AppLocker,67 or Software Restriction Policies8 where appropriate.9  ## Detection  Access to the clipboard is a legitimate function of many applications on a Windows system. If an organization chooses to monitor for this behavior, then the data will likely need to be correlated against other suspicious or non- user-driven activity.  '
p220
sS'Process Hollowing'
p221
S"  T1093   Tactic|  Defense Evasion, Execution    Permissions Required|  User   Data Sources|  Process monitoring, API monitoring, Process monitoring   Supports Remote|  No   Defense Bypassed|  Process whitelisting, Anti-virus, Whitelisting by file name or path, Signature-based detection      Process hollowing occurs when a process is created in a suspended state and the process's memory is replaced with the code of a second program so that the second program runs instead of the original program. Windows and process monitoring tools believe the original process is running, whereas the actual program running is different.1  Process hollowing may be used similarly to DLL Injection to evade defenses and detection analysis of malicious process execution by launching adversary- controlled code under the context of a legitimate process.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * A Patchwork payload uses process hollowing to hide the UAC bypass vulnerability exploitation inside svchost.exe.2   * Duqu is capable of loading executable code via process hollowing.3   * BBSRAT has been seen loaded into msiexece.exe through process hollowing to hide its execution.4   * BADNEWS has a command to download an .exe and use process hollowing to inject it into a new process.5  ## Mitigation  Mitigating specific API calls will likely have unintended side effects, such as preventing legitimate software from operating properly. Efforts should be focused on preventing adversary tools from running earlier in the chain of activity and on identifying subsequent malicious behavior.  Although process hollowing may be used to evade certain types of defenses, it is still good practice to identify potentially malicious software that may be used to perform adversarial actions, including process hollowing, and audit and/or block it by using whitelisting6 tools, like AppLocker,78 or Software Restriction Policies9 where appropriate.10  ## Detection  Monitoring API calls may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior.  Analyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior.  "
p222
sS'Account Discovery'
p223
S'  T1087   Tactic|  Discovery    Permissions Required|  User   Data Sources|  API monitoring, Process command-line parameters, Process monitoring   CAPEC ID|  CAPEC-575      Adversaries may attempt to get a listing of local system or domain accounts. Example commands that can acquire this information are `net user`, `net group <groupname>`, and `net localgroup <groupname>` using the Net utility or through use of dsquery. If adversaries attempt to identify the primary user, currently logged in user, or set of users that commonly uses a system, System Owner/User Discovery may apply.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Ke3chang performs account discovery using commands such as net localgroup administrators and net group "REDACTED" /domain on specific permissions groups.1   * admin@338 actors used the following commands following exploitation of a machine with LOWBALL malware to enumerate user accounts: ** net user &gt;&gt;%temp%\\download ** net user /domain &gt;&gt;%temp%\\download2   * APT3 has used a tool that can obtain info about local and global group users, power users, and administrators.3   * Poseidon Group searches for administrator accounts on both the local victim machine and the network.4   * FIN6 has used Metasploits PsExec NTDSGRAB module to obtain a copy of the victim\'s Active Directory database.5   * Sykipot may use net group "domain admins" /domain to display accounts in the "domain admins" permissions group and net localgroup "administrators" to list local system administrator group membership.6   * The discovery modules used with Duqu can collect information on accounts and permissions.7   * Commands under net user can be used in Net to gather information about and manipulate user accounts.8   * GeminiDuke collects information on local user accounts from the victim.9   * SHOTPUT has a command to retrieve information about connected users.10   * Elise executes net user after initial communication is made to the remote server.11   * Mis-Type may create a file containing the results of the command cmd.exe /c net user {Username}.12   * S-Type runs the command net user on a victim. S-Type also runs tests to determine the privilege level of the compromised user.12   * dsquery can be used to gather information on user accounts within a domain.13   * Remsec can obtain a list of users.14  ## Mitigation  Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system and domain accounts, and audit and/or block them by using whitelisting15 tools, like AppLocker,1617 or Software Restriction Policies18 where appropriate.19  ## Detection  System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.  Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.  '
p224
sS'Application Window Discovery'
p225
S'  T1010   Tactic|  Discovery    Permissions Required|  User   Data Sources|  API monitoring, Process command-line parameters, Process monitoring      Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used or give context to information collected by a keylogger.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Lazarus Group malware IndiaIndia obtains and sends to its C2 server the title of the window for each running process.1 The KilaAlfa keylogger also reports the title of the window in the foreground.2   * NetTraveler reports window names along with keylogger information to provide application context.3   * The discovery modules used with Duqu can collect information on open windows.4   * PowerDuke has a command to get text of the current foreground window.5  ## Mitigation  Identify unnecessary system utilities or potentially malicious software that may be used to acquire information, and audit and/or block them by using whitelisting6 tools, like AppLocker,78 or Software Restriction Policies9 where appropriate.10  ## Detection  System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.  Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.  '
p226
sS'Custom Command and Control Protocol'
p227
S'  T1094   Tactic|  Command and Control    Data Sources|  Packet capture, Netflow/Enclave netflow, Process use of network, Process monitoring   Requires Network|  Yes      Adversaries may communicate using a custom command and control protocol instead of using existing Standard Application Layer Protocol to encapsulate commands. Implementations could mimic well-known protocols.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Lazarus Group malware uses a unique form of communication encryption that mimics TLS but uses a different encryption method, evading SSL man-in-the-middle decryption attacks.1   * Duqu is capable of using its command and control protocol over port 443. However, Duqu is also capable of encapsulating its command protocol over standard application layer protocols. The Duqu command and control protocol implements many of the same features as TCP and is a reliable transport protocol.2   * RTM uses HTTP POST requests with data formatted using a custom protocol.3  ## Mitigation  Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.4  ## Detection  Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.4  '
p228
sS'Fallback Channels'
p229
S'  T1008   Tactic|  Command and Control    Data Sources|  Packet capture, Netflow/Enclave netflow, Malware reverse engineering, Process use of network, Process monitoring   Requires Network|  Yes      Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Lazarus Group malware SierraAlfa sends data to one of the hard-coded C2 servers chosen at random, and if the transmission fails, chooses a new C2 server to attempt the transmission again.1   * BISCUIT malware contains a secondary fallback command and control server that is contacted after the primary command and control server.2   * Derusbi uses a backup communication method with an HTTP beacon.3   * CHOPSTICK can switch to a new C2 channel if the current one is broken.4   * NETEAGLE will attempt to detect if the infected host is configured to a proxy. If so, NETEAGLE will send beacons via an HTTP POST request; otherwise it will send beacons via UDP/6000.5   * JHUHUGIT tests if it can reach its C2 server by first attempting a direct connection, and if it fails, obtaining proxy settings and sending the connection through a proxy, and finally injecting code into a running browser if the proxy method fails.6   * SslMM has a hard-coded primary and backup C2 string.7   * WinMM is usually configured with primary and backup domains for C2 communications.7   * DustySky has two hard-coded domains for C2 servers; if the first does not respond, it will try the second.8   * Mis-Type first attempts to use a Base64-encoded network protocol over a raw TCP socket for C2, and if that method fails, falls back to a secondary HTTP-based protocol to communicate to an alternate C2 server.9   * S-Type primarily uses port 80 for C2, but falls back to ports 443 or 8080 if initial communication fails.9   * BlackEnergy has the capability to communicate over a backup channel via plus.google.com.10   * The C2 server used by XTunnel provides a port number to the victim to use as a fallback in case the connection closes on the currently used port.4  ## Mitigation  Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.11  ## Detection  Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.11  '
p230
sS'Standard Cryptographic Protocol'
p231
S'  T1032   Tactic|  Command and Control    Data Sources|  Packet capture, Netflow/Enclave netflow, Malware reverse engineering, Process use of network, Process monitoring, SSL/TLS inspection   Requires Network|  Yes      Adversaries use command and control over an encrypted channel using a known encryption protocol like HTTPS or SSL/TLS. The use of strong encryption makes it difficult for defenders to detect signatures within adversary command and control traffic.  Some adversaries may use other encryption protocols and algorithms with symmetric keys, such as RC4, that rely on encryption keys encoded into malware configuration files and not public key cryptography. Such keys may be obtained through malware reverse engineering.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Taidoor uses RC4 to encrypt the message body of HTTP content.1   * Lazarus Group malware uses Caracachs encryption to encrypt C2 payloads.2   * FIN6 used the Plink command-line utility to create SSH tunnels to C2 servers.3   * Stealth Falcon malware encrypts C2 traffic using RC4 with a hard-coded key.4   * APT12 has used the RIPTIDE RAT, which communicates over HTTP with a payload encrypted with RC4.5   * PoisonIvy uses the Camellia cipher to encrypt communications.6   * CHOPSTICK encrypts C2 communications with RC4 as well as TLS.7   * Carbanak encrypts the message body of HTTP traffic with RC2 and Base64 encoding.8   * NETEAGLE will decrypt resources it downloads with HTTP requests by using RC4 with the key "ScoutEagle."9   * The Duqu command and control protocol\'s data stream can be encrypted with AES-CBC.10   * A variant of ADVSTORESHELL encrypts some C2 with 3DES and RSA.11   * SeaDuke C2 traffic has been encrypted with RC4 and AES.1213   * 3PARA RAT command and control commands are encrypted within the HTTP C2 channel using the DES algorithm in CBC mode with a key derived from the MD5 hash of the string HYF54&amp;%9&amp;jkMCXuiS.14   * Some variants of FakeM use RC4 to encrypt C2 traffic.15   * CallMe uses AES to encrypt C2 traffic.15   * MobileOrder uses AES to encrypt C2 communications.15   * Elise encrypts exfiltrated data with RC4.16   * Prikormka encrypts some C2 traffic with the Blowfish cipher.17   * XTunnel uses SSL/TLS and RC4 to encrypt traffic.187   * Nidiran uses RC4 to encrypt C2 traffic.19   * Remsec\'s network loader encrypts C2 traffic with RSA and RC6.20   * H1N1 encrypts C2 traffic using an RC4 key.21   * Downdelph uses RC4 to encrypt C2 responses.22   * ChChes can encrypt C2 traffic with AES.2324   * MoonWind encrypts C2 traffic using RC4 with a static key.25  ## Mitigation  Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Use of encryption protocols may make typical network-based C2 detection more difficult due to a reduced ability to signature the traffic. Prior knowledge of adversary C2 infrastructure may be useful for domain and IP address blocking, but will likely not be an effective long-term solution because adversaries can change infrastructure often.26  ## Detection  SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.27 SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.28  If malware uses encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.29  In general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.26  '
p232
sS'Path Interception'
p233
S'  T1034   Tactic|  Persistence, Privilege Escalation    Permissions Required|  User, Administrator, SYSTEM   Effective Permissions|  User, Administrator, SYSTEM   Data Sources|  File monitoring, Process monitoring   CAPEC ID|  CAPEC-159   Contributors|  Stefan Kanthak      Path interception occurs when an executable is placed in a specific path so that it is executed by an application instead of the intended target. One example of this was the use of a copy of cmd in the current working directory of a vulnerable application that loads a CMD or BAT file with the CreateProcess function.1  There are multiple distinct weaknesses or misconfigurations that adversaries may take advantage of when performing path interception: unquoted paths, path environment variable misconfigurations, and search order hijacking. The first vulnerability deals with full program paths, while the second and third occur when program paths are not specified. These techniques can be used for persistence if executables are called on a regular basis, as well as privilege escalation if intercepted executables are started by a higher privileged process.  ## Contents    * 1 Unquoted Paths   * 2 PATH Environment Variable Misconfiguration   * 3 Search Order Hijacking   * 4 Mitigation   * 5 Detection   * 6 References  ### Unquoted Paths  Service paths (stored in Windows Registry keys)2 and shortcut paths are vulnerable to path interception if the path has one or more spaces and is not surrounded by quotation marks (e.g., `C:\\unsafe path with space\\program.exe` vs. `"C:\\safe path with space\\program.exe"`).3 An adversary can place an executable in a higher level directory of the path, and Windows will resolve that executable instead of the intended executable. For example, if the path in a shortcut is `C:\\program files\\myapp.exe`, an adversary may create a program at `C:\\program.exe` that will be run instead of the intended program.  ### PATH Environment Variable Misconfiguration  The PATH environment variable contains a list of directories. Certain methods of executing a program (namely using cmd.exe or the command-line) rely solely on the PATH environment variable to determine the locations that are searched for a program when the path for the program is not given. If any directories are listed in the PATH environment variable before the Windows directory, `%SystemRoot%\\system32` (e.g., `C:\\Windows\\system32`), a program may be placed in the preceding directory that is named the same as a Windows program (such as cmd, PowerShell, or Python), which will be executed when that command is executed from a script or command-line.  For example, if `C:\\example path` precedes `C:\\Windows\\system32` is in the PATH environment variable, a program that is named net.exe and placed in `C:\\example path` will be called instead of the Windows system "net" when "net" is executed from the command-line.  ### Search Order Hijacking  Search order hijacking occurs when an adversary abuses the order in which Windows searches for programs that are not given a path. The search order differs depending on the method that is used to execute the program.456 However, it is common for Windows to search in the directory of the initiating program before searching through the Windows system directory. An adversary who finds a program vulnerable to search order hijacking (i.e., a program that does not specify the path to an executable) may take advantage of this vulnerability by creating a program named after the improperly specified program and placing it within the initiating program\'s directory.  For example, "example.exe" runs "cmd.exe" with the command-line argument `net user`. An adversary may place a program called "net.exe" within the same directory as example.exe, "net.exe" will be run instead of the Windows system utility net. In addition, if an adversary places a program called "net.com" in the same directory as "net.exe", then `cmd.exe /C net user` will execute "net.com" instead of "net.exe" due to the order of executable extensions defined under PATHEXT.7  Search order hijacking is also a common practice for hijacking DLL loads and is covered in DLL Search Order Hijacking.  ## Mitigation  Eliminate path interception weaknesses in program configuration files, scripts, the PATH environment variable, services, and in shortcuts by surrounding PATH variables with quotation marks when functions allow for them4. Be aware of the search order Windows uses for executing or loading binaries and use fully qualified paths wherever appropriate8. Clean up old Windows Registry keys when software is uninstalled to avoid keys with no associated legitimate binaries.  Periodically search for and correct or report path interception weaknesses on systems that may have been introduced using custom or available tools that report software using insecure path configurations9.  Require that all executables be placed in write-protected directories. Ensure that proper permissions and directory access control are set to deny users the ability to write files to the top-level directory `C:` and system directories, such as `C:\\Windows\\`, to reduce places where malicious files could be placed for execution.  Identify and block potentially malicious software that may be executed through the path interception by using whitelisting10 tools, like AppLocker1112 or Software Restriction Policies,13 that are capable of auditing and/or blocking unknown executables.  ## Detection  Monitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Monitor the executing process for process executable paths that are named for partial directories. Monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as "findstr," "net," and "python"). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.  Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.  '
p234
sS'Windows Management Instrumentation Event Subscription'
p235
S"  T1084   Tactic|  Persistence    Permissions Required|  Administrator, SYSTEM   Data Sources|  WMI Objects      Windows Management Instrumentation (WMI) can be used to install event filters, providers, consumers, and bindings that execute code when a defined event occurs. Adversaries may use the capabilities of WMI to subscribe to an event and execute arbitrary code when that event occurs, providing persistence on a system. Adversaries may attempt to evade detection of this technique by compiling WMI scripts.1 Examples of events that may be subscribed to are the wall clock time or the computer's uptime.2 Several threat groups have reportedly used this technique to maintain persistence.3  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * APT29 has used WMI event filters to establish persistence.4   * SeaDuke uses an event filter in WMI code to execute a previously dropped executable shortly after system startup.5  ## Mitigation  Disabling WMI services may cause system instability and should be evaluated to assess the impact to a network. By default, only administrators are allowed to connect remotely using WMI; restrict other users that are allowed to connect, or disallow all users from connecting remotely to WMI. Prevent credential overlap across systems of administrator and privileged accounts.5  ## Detection  Monitor WMI event subscription entries, comparing current WMI event subscriptions to known good subscriptions for each host. Tools such as Sysinternals Autoruns may also be used to detect WMI changes that could be attempts at persistence.6  "
p236
sS'Remote Services'
p237
S'  T1021   Tactic|  Lateral Movement    System Requirements|  Active remote service accepting connections and valid credentials   Data Sources|  Authentication logs   CAPEC ID|  CAPEC-555      An adversary may use valid credentials to log into a service specifically designed to accept remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * GCMAN uses Putty and VNC for lateral movement.1  ## Mitigation  Limit the number of accounts that may use remote services. Use multifactor authentication where possible. Limit the permissions for accounts that are at higher risk of compromise; for example, configure SSH so users can only run specific programs. Prevent Credential Access techniques that may allow an adversary to acquire Legitimate Credentials that can be used by existing services.  ## Detection  Correlate use of login activity related to remote services with unusual behavior or other malicious or suspicious activity. Adversaries will likely need to learn about an environment and the relationships between systems through Discovery techniques prior to attempting Lateral Movement.  '
p238
sS'PowerShell'
p239
S"  T1086   Tactic|  Execution    Permissions Required|  User, Administrator   Data Sources|  Windows Registry, File monitoring, Process command-line parameters, Process monitoring   Supports Remote|  Yes      PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system.1 Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the Start-Process cmdlet which can be used to run an executable and the Invoke-Command cmdlet which runs a command locally or on a remote computer.  PowerShell may also be used to download and run executables from the Internet, which can be executed from disk or in memory without touching disk.  Administrator permissions are required to use PowerShell to connect to remote systems.  A number of PowerShell-based offensive testing tools are available, including Empire,2 PowerSploit,3 and PSAttack.4  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * Deep Panda has used PowerShell scripts to download and execute programs in memory, without writing to disk.5   * APT29 has used encoded PowerShell scripts uploaded to CozyCar installations to download and install SeaDuke.6 APT29 also used PowerShell scripts to evade defenses.7   * APT3 has used PowerShell on victim systems to download and run payloads after exploitation.8   * The Poseidon Group's Information Gathering Tool (IGT) includes PowerShell components.9   * FIN6 has used a Metasploit PowerShell module to download and execute shellcode and to set up a local listener.10   * Stealth Falcon malware uses PowerShell commands to perform various functions, including gathering system information via WMI and executing commands from its C2 server.11   * Patchwork used PowerSploit to download and run a reverse shell.12   * HAMMERTOSS is known to use PowerShell.13   * SeaDuke uses a module to execute Mimikatz with PowerShell to perform Pass the Ticket.6   * AutoIt downloads a PowerShell script that decodes to a typical shellcode loader.14   * POWERSOURCE is a PowerShell backdoor.1516  ## Mitigation  It may be possible to remove PowerShell from systems when not needed, but a review should be performed to assess the impact to an environment, since it could be in use for many legitimate purposes and administrative functions. When PowerShell is necessary, restrict PowerShell execution policy to administrators and to only execute signed scripts. Be aware that there are methods of bypassing the PowerShell execution policy, depending on environment configuration.17 Disable/restrict the WinRM Service to help prevent uses of PowerShell for remote execution.  ## Detection  If proper execution policy is set, adversaries will likely be able to define their own execution policy if they obtain administrator or system access, either through the Registry or at the command line. This change in policy on a system may be a way to detect malicious use of PowerShell. If PowerShell is not used in an environment, then simply looking for PowerShell execution may detect malicious activity.  It is also beneficial to turn on PowerShell logging to gain increased fidelity in what occurs during execution.18 PowerShell 5.0 introduced enhanced logging capabilities, and some of those features have since been added to PowerShell 4.0. Earlier versions of PowerShell do not have many logging features.19 An organization can gather PowerShell execution details in a data analytic platform to supplement it with other data.  "
p240
sS'Credentials in Files'
p241
S'  T1081   Tactic|  Credential Access    System Requirements|  Access to files   Permissions Required|  User, Administrator, SYSTEM   Data Sources|  File monitoring, Process command-line parameters   CAPEC ID|  CAPEC-545      Adversaries may search local file systems and remote file shares for files containing passwords. These can be files created by users to store their own credentials, shared credential stores for a group of individuals, configuration files containing passwords for a system or service, or source code/binary files containing embedded passwords.  It is possible to extract passwords from backups or saved virtual machines through Credential Dumping.1 Passwords may also be obtained from Group Policy Preferences stored on the Windows Domain Controller.2  ## Contents    * 1 Examples   * 2 Mitigation   * 3 Detection   * 4 References  ## Examples    * If an initial connectivity check fails, pngdowner attempts to extract proxy details and credentials from Windows Protected Storage and from the IE Credentials Store. This allows the adversary to use the proxy credentials for subsequent requests if they enable outbound HTTP access.3   * BlackEnergy has used a plug-in to gather credentials stored in files on the host by various software programs, including The Bat! email client, Mozilla password manager, Google Chrome password manager, Outlook, Internet Explorer, and Windows Credential Store.45   * A module in Prikormka gathers logins and passwords stored in applications on the victims, including Google Chrome, Mozilla Firefox, and several other browsers.6   * XTunnel is capable of accessing locally stored passwords on victims.7  ## Mitigation  Establish an organizational policy that prohibits password storage in files. Ensure that developers and system administrators are aware of the risk associated with having plaintext passwords in software configuration files that may be left on endpoint systems or servers. Preemptively search for files containing passwords and remove when found. Restrict file shares to specific directories with access only to necessary users. Remove vulnerable Group Policy Preferences.8  ## Detection  While detecting adversaries accessing these files may be difficult without knowing they exist in the first place, it may be possible to detect adversary use of credentials they have obtained. Monitor the command-line arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). See Legitimate Credentials for more information.  '
p242
s.